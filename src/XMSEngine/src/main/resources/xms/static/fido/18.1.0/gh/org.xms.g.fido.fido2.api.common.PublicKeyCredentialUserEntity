package org.xms.g.fido.fido2.api.common;

public class PublicKeyCredentialUserEntity extends org.xms.g.utils.XObject implements android.os.Parcelable {
    public static final android.os.Parcelable.Creator CREATOR = new android.os.Parcelable.Creator() {

        public org.xms.g.fido.fido2.api.common.PublicKeyCredentialUserEntity createFromParcel(android.os.Parcel param0) {
            if (org.xms.g.utils.GlobalEnvSetting.isHms()) {
                String displayName = param0.readString();
                byte[] id = new byte[1024];
                param0.readByteArray(id);
                String name=param0.readString();
                String icon=param0.readString();
                com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialUserEntity hReturn = new com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialUserEntity(displayName,id,name,icon);
                return new org.xms.g.fido.fido2.api.common.PublicKeyCredentialUserEntity(new org.xms.g.utils.XBox(null, hReturn));
            } else {
                com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity gReturn = com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity.CREATOR.createFromParcel(param0);
                return new org.xms.g.fido.fido2.api.common.PublicKeyCredentialUserEntity(new org.xms.g.utils.XBox(gReturn, null));
            }
        }

        public org.xms.g.fido.fido2.api.common.PublicKeyCredentialUserEntity[] newArray(int param0) {
            return new org.xms.g.fido.fido2.api.common.PublicKeyCredentialUserEntity[param0];
        }
    };
    private boolean wrapper = true;

    public PublicKeyCredentialUserEntity(org.xms.g.utils.XBox param0) {
        super(param0);
        wrapper = true;
    }

    public PublicKeyCredentialUserEntity(byte[] param0, java.lang.String param1, java.lang.String param2, java.lang.String param3) {
        super(((org.xms.g.utils.XBox) null));
        if (org.xms.g.utils.GlobalEnvSetting.isHms()) {
            this.setHInstance(new HImpl(param3, param0, param1, param2));
        } else {
            this.setGInstance(new GImpl(param0, param1, param2, param3));
        }
        wrapper = false;
    }

    public boolean equals(java.lang.Object param0) {
        throw new java.lang.RuntimeException("Not Supported");
    }

    public java.lang.String getDisplayName() {
        if (wrapper) {
            if (org.xms.g.utils.GlobalEnvSetting.isHms()) {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialUserEntity) this.getHInstance()).getDisplayName()");
                return ((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialUserEntity) this.getHInstance()).getDisplayName();
            } else {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity) this.getGInstance()).getDisplayName()");
                return ((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity) this.getGInstance()).getDisplayName();
            }
        } else {
            if (org.xms.g.utils.GlobalEnvSetting.isHms()) {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((HImpl) ((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialUserEntity) this.getHInstance())).getDisplayNameCallSuper()");
                return ((HImpl) ((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialUserEntity) this.getHInstance())).getDisplayNameCallSuper();
            } else {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((GImpl) ((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity) this.getGInstance())).getDisplayNameCallSuper()");
                return ((GImpl) ((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity) this.getGInstance())).getDisplayNameCallSuper();
            }
        }
    }

    public java.lang.String getIcon() {
        if (wrapper) {
            if (org.xms.g.utils.GlobalEnvSetting.isHms()) {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialUserEntity) this.getHInstance()).getIcon()");
                return ((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialUserEntity) this.getHInstance()).getIcon();
            } else {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity) this.getGInstance()).getIcon()");
                return ((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity) this.getGInstance()).getIcon();
            }
        } else {
            if (org.xms.g.utils.GlobalEnvSetting.isHms()) {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((HImpl) ((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialUserEntity) this.getHInstance())).getIconCallSuper()");
                return ((HImpl) ((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialUserEntity) this.getHInstance())).getIconCallSuper();
            } else {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((GImpl) ((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity) this.getGInstance())).getIconCallSuper()");
                return ((GImpl) ((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity) this.getGInstance())).getIconCallSuper();
            }
        }
    }

    public byte[] getId() {
        if (wrapper) {
            if (org.xms.g.utils.GlobalEnvSetting.isHms()) {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialUserEntity) this.getHInstance()).getId()");
                return ((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialUserEntity) this.getHInstance()).getId();
            } else {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity) this.getGInstance()).getId()");
                return ((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity) this.getGInstance()).getId();
            }
        } else {
            if (org.xms.g.utils.GlobalEnvSetting.isHms()) {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((HImpl) ((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialUserEntity) this.getHInstance())).getIdCallSuper()");
                return ((HImpl) ((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialUserEntity) this.getHInstance())).getIdCallSuper();
            } else {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((GImpl) ((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity) this.getGInstance())).getIdCallSuper()");
                return ((GImpl) ((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity) this.getGInstance())).getIdCallSuper();
            }
        }
    }

    public java.lang.String getName() {
        if (wrapper) {
            if (org.xms.g.utils.GlobalEnvSetting.isHms()) {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialUserEntity) this.getHInstance()).getName()");
                return ((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialUserEntity) this.getHInstance()).getName();
            } else {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity) this.getGInstance()).getName()");
                return ((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity) this.getGInstance()).getName();
            }
        } else {
            if (org.xms.g.utils.GlobalEnvSetting.isHms()) {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((HImpl) ((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialUserEntity) this.getHInstance())).getNameCallSuper()");
                return ((HImpl) ((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialUserEntity) this.getHInstance())).getNameCallSuper();
            } else {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((GImpl) ((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity) this.getGInstance())).getNameCallSuper()");
                return ((GImpl) ((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity) this.getGInstance())).getNameCallSuper();
            }
        }
    }

    public int hashCode() {
        throw new java.lang.RuntimeException("Not Supported");
    }

    public void writeToParcel(android.os.Parcel param0, int param1) {
        if (wrapper) {
            if (org.xms.g.utils.GlobalEnvSetting.isHms()) {
                com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialUserEntity hPublicKeyCredentialUserEntity = ((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialUserEntity) this.getHInstance());
                param0.writeString(hPublicKeyCredentialUserEntity.getDisplayName());
                param0.writeByteArray(hPublicKeyCredentialUserEntity.getId());
                param0.writeString(hPublicKeyCredentialUserEntity.getName());
                param0.writeString(hPublicKeyCredentialUserEntity.getIcon());
            } else {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity) this.getGInstance()).writeToParcel(param0, param1)");
                ((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity) this.getGInstance()).writeToParcel(param0, param1);
            }
        } else {
            if (org.xms.g.utils.GlobalEnvSetting.isHms()) {
                com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialUserEntity hPublicKeyCredentialUserEntity = ((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialUserEntity) this.getHInstance());
                param0.writeString(hPublicKeyCredentialUserEntity.getDisplayName());
                param0.writeByteArray(hPublicKeyCredentialUserEntity.getId());
                param0.writeString(hPublicKeyCredentialUserEntity.getName());
                param0.writeString(hPublicKeyCredentialUserEntity.getIcon());
            } else {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((GImpl) ((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity) this.getGInstance())).writeToParcelCallSuper(param0, param1)");
                ((GImpl) ((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity) this.getGInstance())).writeToParcelCallSuper(param0, param1);
            }
        }
    }

    public int describeContents() {
        throw new java.lang.RuntimeException("Not Supported");
    }

    public static org.xms.g.fido.fido2.api.common.PublicKeyCredentialUserEntity dynamicCast(java.lang.Object param0) {
        return ((org.xms.g.fido.fido2.api.common.PublicKeyCredentialUserEntity) param0);
    }

    public static boolean isInstance(java.lang.Object param0) {
        if (!(param0 instanceof org.xms.g.utils.XGettable)) {
            return false;
        }
        if (org.xms.g.utils.GlobalEnvSetting.isHms()) {
            return ((org.xms.g.utils.XGettable) param0).getHInstance() instanceof com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialUserEntity;
        } else {
            return ((org.xms.g.utils.XGettable) param0).getGInstance() instanceof com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity;
        }
    }

    private class GImpl extends com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialUserEntity {

        public boolean equals(java.lang.Object param0) {
            throw new java.lang.RuntimeException("Not Supported");
        }

        public java.lang.String getDisplayName() {
            return org.xms.g.fido.fido2.api.common.PublicKeyCredentialUserEntity.this.getDisplayName();
        }

        public java.lang.String getIcon() {
            return org.xms.g.fido.fido2.api.common.PublicKeyCredentialUserEntity.this.getIcon();
        }

        public byte[] getId() {
            return org.xms.g.fido.fido2.api.common.PublicKeyCredentialUserEntity.this.getId();
        }

        public java.lang.String getName() {
            return org.xms.g.fido.fido2.api.common.PublicKeyCredentialUserEntity.this.getName();
        }

        public int hashCode() {
            throw new java.lang.RuntimeException("Not Supported");
        }

        public void writeToParcel(android.os.Parcel param0, int param1) {
            org.xms.g.fido.fido2.api.common.PublicKeyCredentialUserEntity.this.writeToParcel(param0, param1);
        }

        public boolean equalsCallSuper(java.lang.Object param0) {
            return super.equals(param0);
        }

        public java.lang.String getDisplayNameCallSuper() {
            return super.getDisplayName();
        }

        public java.lang.String getIconCallSuper() {
            return super.getIcon();
        }

        public byte[] getIdCallSuper() {
            return super.getId();
        }

        public java.lang.String getNameCallSuper() {
            return super.getName();
        }

        public int hashCodeCallSuper() {
            return super.hashCode();
        }

        public void writeToParcelCallSuper(android.os.Parcel param0, int param1) {
            super.writeToParcel(param0, param1);
        }

        public GImpl(byte[] param0, java.lang.String param1, java.lang.String param2, java.lang.String param3) {
            super(param0, param1, param2, param3);
        }
    }

    private class HImpl extends com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialUserEntity {

        public java.lang.String getDisplayName() {
            return org.xms.g.fido.fido2.api.common.PublicKeyCredentialUserEntity.this.getDisplayName();
        }

        public java.lang.String getIcon() {
            return org.xms.g.fido.fido2.api.common.PublicKeyCredentialUserEntity.this.getIcon();
        }

        public byte[] getId() {
            return org.xms.g.fido.fido2.api.common.PublicKeyCredentialUserEntity.this.getId();
        }

        public java.lang.String getName() {
            return org.xms.g.fido.fido2.api.common.PublicKeyCredentialUserEntity.this.getName();
        }

        public java.lang.String getDisplayNameCallSuper() {
            return super.getDisplayName();
        }

        public java.lang.String getIconCallSuper() {
            return super.getIcon();
        }

        public byte[] getIdCallSuper() {
            return super.getId();
        }

        public java.lang.String getNameCallSuper() {
            return super.getName();
        }

        public HImpl(java.lang.String param0, byte[] param1) {
            super(param0, param1);
        }

        public HImpl(java.lang.String param0, byte[] param1, java.lang.String param2, java.lang.String param3) {
            super(param0, param1, param2, param3);
        }
    }
}