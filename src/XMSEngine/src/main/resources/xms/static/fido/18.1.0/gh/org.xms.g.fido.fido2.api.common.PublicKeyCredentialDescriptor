package org.xms.g.fido.fido2.api.common;

public class PublicKeyCredentialDescriptor extends org.xms.g.utils.XObject implements android.os.Parcelable {
    public static final android.os.Parcelable.Creator CREATOR = new android.os.Parcelable.Creator() {

        public org.xms.g.fido.fido2.api.common.PublicKeyCredentialDescriptor createFromParcel(android.os.Parcel param0) {
            if (org.xms.g.utils.GlobalEnvSetting.isHms()) {
                byte[] id = new byte[1024];
                param0.readByteArray(id);
                String typeString = param0.readString();
                com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialType type = null;
                if(typeString.equals(com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialType.PUBLIC_KEY.getValue())){
                    type = com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialType.PUBLIC_KEY;
                }

                java.util.List<org.xms.g.fido.common.Transport> xTransports = new java.util.ArrayList<org.xms.g.fido.common.Transport>() ;
                param0.readTypedList(xTransports, org.xms.g.fido.common.Transport.CREATOR);
                java.util.List<com.huawei.hms.support.api.fido.fido2.AuthenticatorTransport> hTransports = org.xms.g.utils.Utils.mapList2GH(xTransports,true);

                com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialDescriptor hReturn = null;
                if(hTransports!=null && hTransports.size()>0 ){
                    hReturn = new com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialDescriptor(type,id,hTransports);
                }else{
                    hReturn = new com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialDescriptor(type,id);
                }
                return new org.xms.g.fido.fido2.api.common.PublicKeyCredentialDescriptor(new org.xms.g.utils.XBox(null, hReturn));
            } else {
                com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialDescriptor gReturn = com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialDescriptor.CREATOR.createFromParcel(param0);
                return new org.xms.g.fido.fido2.api.common.PublicKeyCredentialDescriptor(new org.xms.g.utils.XBox(gReturn, null));
            }
        }

        public org.xms.g.fido.fido2.api.common.PublicKeyCredentialDescriptor[] newArray(int param0) {
            return new org.xms.g.fido.fido2.api.common.PublicKeyCredentialDescriptor[param0];
        }
    };
    private boolean wrapper = true;

    public PublicKeyCredentialDescriptor(org.xms.g.utils.XBox param0) {
        super(param0);
        wrapper = true;
    }

    public PublicKeyCredentialDescriptor(java.lang.String param0, byte[] param1, java.util.List<org.xms.g.fido.common.Transport> param2) {
        super(((org.xms.g.utils.XBox) null));
        if (org.xms.g.utils.GlobalEnvSetting.isHms()) {
            com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialType type = null;
            if(com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialType.PUBLIC_KEY.getValue().equals(param0)){
                type = com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialType.PUBLIC_KEY;
            }
            this.setHInstance(new HImpl(type, param1, ((java.util.List) org.xms.g.utils.Utils.mapList2GH(param2, true))));
        } else {
            this.setGInstance(new GImpl(param0, param1, ((java.util.List) org.xms.g.utils.Utils.mapList2GH(param2, false))));
        }
        wrapper = false;
    }

    public boolean equals(java.lang.Object param0) {
        throw new java.lang.RuntimeException("Not Supported");
    }

    public byte[] getId() {
        if (wrapper) {
            if (org.xms.g.utils.GlobalEnvSetting.isHms()) {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialDescriptor) this.getHInstance()).getId()");
                return ((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialDescriptor) this.getHInstance()).getId();
            } else {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialDescriptor) this.getGInstance()).getId()");
                return ((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialDescriptor) this.getGInstance()).getId();
            }
        } else {
            if (org.xms.g.utils.GlobalEnvSetting.isHms()) {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((HImpl) ((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialDescriptor) this.getHInstance())).getIdCallSuper()");
                return ((HImpl) ((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialDescriptor) this.getHInstance())).getIdCallSuper();
            } else {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((GImpl) ((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialDescriptor) this.getGInstance())).getIdCallSuper()");
                return ((GImpl) ((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialDescriptor) this.getGInstance())).getIdCallSuper();
            }
        }
    }

    public java.util.List<org.xms.g.fido.common.Transport> getTransports() {
        if (wrapper) {
            if (org.xms.g.utils.GlobalEnvSetting.isHms()) {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialDescriptor) this.getHInstance()).getTransports()");
                java.util.List hReturn = ((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialDescriptor) this.getHInstance()).getTransports();
                return ((java.util.List) org.xms.g.utils.Utils.mapCollection(hReturn, new org.xms.g.utils.Function<com.huawei.hms.support.api.fido.fido2.AuthenticatorTransport, org.xms.g.fido.common.Transport>() {

                    public org.xms.g.fido.common.Transport apply(com.huawei.hms.support.api.fido.fido2.AuthenticatorTransport param0) {
                        return new org.xms.g.fido.common.Transport(new org.xms.g.utils.XBox(null, param0));
                    }
                }));
            } else {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialDescriptor) this.getGInstance()).getTransports()");
                java.util.List gReturn = ((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialDescriptor) this.getGInstance()).getTransports();
                return ((java.util.List) org.xms.g.utils.Utils.mapCollection(gReturn, new org.xms.g.utils.Function<com.google.android.gms.fido.common.Transport, org.xms.g.fido.common.Transport>() {

                    public org.xms.g.fido.common.Transport apply(com.google.android.gms.fido.common.Transport param0) {
                        return new org.xms.g.fido.common.Transport(new org.xms.g.utils.XBox(param0, null));
                    }
                }));
            }
        } else {
            if (org.xms.g.utils.GlobalEnvSetting.isHms()) {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((HImpl) ((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialDescriptor) this.getHInstance())).getTransportsCallSuper()");
                java.util.List hReturn = ((HImpl) ((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialDescriptor) this.getHInstance())).getTransportsCallSuper();
                return ((java.util.List) org.xms.g.utils.Utils.mapCollection(hReturn, new org.xms.g.utils.Function<com.huawei.hms.support.api.fido.fido2.AuthenticatorTransport, org.xms.g.fido.common.Transport>() {

                    public org.xms.g.fido.common.Transport apply(com.huawei.hms.support.api.fido.fido2.AuthenticatorTransport param0) {
                        return new org.xms.g.fido.common.Transport(new org.xms.g.utils.XBox(null, param0));
                    }
                }));
            } else {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((GImpl) ((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialDescriptor) this.getGInstance())).getTransportsCallSuper()");
                java.util.List gReturn = ((GImpl) ((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialDescriptor) this.getGInstance())).getTransportsCallSuper();
                return ((java.util.List) org.xms.g.utils.Utils.mapCollection(gReturn, new org.xms.g.utils.Function<com.google.android.gms.fido.common.Transport, org.xms.g.fido.common.Transport>() {

                    public org.xms.g.fido.common.Transport apply(com.google.android.gms.fido.common.Transport param0) {
                        return new org.xms.g.fido.common.Transport(new org.xms.g.utils.XBox(param0, null));
                    }
                }));
            }
        }
    }

    public org.xms.g.fido.fido2.api.common.PublicKeyCredentialType getType() {
        if (wrapper) {
            if (org.xms.g.utils.GlobalEnvSetting.isHms()) {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialDescriptor) this.getHInstance()).getType()");
                com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialType hReturn = ((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialDescriptor) this.getHInstance()).getType();
                return ((hReturn) == null ? null : (new org.xms.g.fido.fido2.api.common.PublicKeyCredentialType(new org.xms.g.utils.XBox(null, hReturn))));
            } else {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialDescriptor) this.getGInstance()).getType()");
                com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialType gReturn = ((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialDescriptor) this.getGInstance()).getType();
                return ((gReturn) == null ? null : (new org.xms.g.fido.fido2.api.common.PublicKeyCredentialType(new org.xms.g.utils.XBox(gReturn, null))));
            }
        } else {
            if (org.xms.g.utils.GlobalEnvSetting.isHms()) {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((HImpl) ((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialDescriptor) this.getHInstance())).getTypeCallSuper()");
                com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialType hReturn = ((HImpl) ((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialDescriptor) this.getHInstance())).getTypeCallSuper();
                return ((hReturn) == null ? null : (new org.xms.g.fido.fido2.api.common.PublicKeyCredentialType(new org.xms.g.utils.XBox(null, hReturn))));
            } else {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((GImpl) ((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialDescriptor) this.getGInstance())).getTypeCallSuper()");
                com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialType gReturn = ((GImpl) ((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialDescriptor) this.getGInstance())).getTypeCallSuper();
                return ((gReturn) == null ? null : (new org.xms.g.fido.fido2.api.common.PublicKeyCredentialType(new org.xms.g.utils.XBox(gReturn, null))));
            }
        }
    }

    public java.lang.String getTypeAsString() {
        throw new java.lang.RuntimeException("Not Supported");
    }

    public int hashCode() {
        throw new java.lang.RuntimeException("Not Supported");
    }

    public void writeToParcel(android.os.Parcel param0, int param1) {
        if (wrapper) {
            if (org.xms.g.utils.GlobalEnvSetting.isHms()) {
                com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialDescriptor hPublicKeyCredentialDescriptor = ((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialDescriptor) this.getHInstance());
                param0.writeByteArray(hPublicKeyCredentialDescriptor.getId());
                param0.writeString(hPublicKeyCredentialDescriptor.getType().getValue());
                java.util.List<org.xms.g.fido.common.Transport> xList = this.getTransports();
                param0.writeTypedList(xList);
            } else {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialDescriptor) this.getGInstance()).writeToParcel(param0, param1)");
                ((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialDescriptor) this.getGInstance()).writeToParcel(param0, param1);
            }
        } else {
            if (org.xms.g.utils.GlobalEnvSetting.isHms()) {
                com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialDescriptor hPublicKeyCredentialDescriptor = ((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialDescriptor) this.getHInstance());
                param0.writeByteArray(hPublicKeyCredentialDescriptor.getId());
                param0.writeString(hPublicKeyCredentialDescriptor.getType().getValue());
                java.util.List<org.xms.g.fido.common.Transport> xList = this.getTransports();
                param0.writeTypedList(xList);
            } else {
                org.xms.g.utils.XmsLog.d("XMSRouter", "((GImpl) ((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialDescriptor) this.getGInstance())).writeToParcelCallSuper(param0, param1)");
                ((GImpl) ((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialDescriptor) this.getGInstance())).writeToParcelCallSuper(param0, param1);
            }
        }
    }

    public int describeContents() {
        throw new java.lang.RuntimeException("Not Supported");
    }

    public static org.xms.g.fido.fido2.api.common.PublicKeyCredentialDescriptor dynamicCast(java.lang.Object param0) {
        return ((org.xms.g.fido.fido2.api.common.PublicKeyCredentialDescriptor) param0);
    }

    public static boolean isInstance(java.lang.Object param0) {
        if (!(param0 instanceof org.xms.g.utils.XGettable)) {
            return false;
        }
        if (org.xms.g.utils.GlobalEnvSetting.isHms()) {
            return ((org.xms.g.utils.XGettable) param0).getHInstance() instanceof com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialDescriptor;
        } else {
            return ((org.xms.g.utils.XGettable) param0).getGInstance() instanceof com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialDescriptor;
        }
    }

    private class GImpl extends com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialDescriptor {

        public boolean equals(java.lang.Object param0) {
            throw new java.lang.RuntimeException("Not Supported");
        }

        public byte[] getId() {
            return org.xms.g.fido.fido2.api.common.PublicKeyCredentialDescriptor.this.getId();
        }

        public java.util.List<com.google.android.gms.fido.common.Transport> getTransports() {
            return ((java.util.List) org.xms.g.utils.Utils.mapList2GH(org.xms.g.fido.fido2.api.common.PublicKeyCredentialDescriptor.this.getTransports(), false));
        }

        public com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialType getType() {
            org.xms.g.fido.fido2.api.common.PublicKeyCredentialType xResult = org.xms.g.fido.fido2.api.common.PublicKeyCredentialDescriptor.this.getType();
            return ((com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialType) ((xResult) == null ? null : (xResult.getGInstance())));
        }

        public java.lang.String getTypeAsString() {
            throw new java.lang.RuntimeException("Not Supported");
        }

        public int hashCode() {
            throw new java.lang.RuntimeException("Not Supported");
        }

        public void writeToParcel(android.os.Parcel param0, int param1) {
            org.xms.g.fido.fido2.api.common.PublicKeyCredentialDescriptor.this.writeToParcel(param0, param1);
        }

        public boolean equalsCallSuper(java.lang.Object param0) {
            return super.equals(param0);
        }

        public byte[] getIdCallSuper() {
            return super.getId();
        }

        public java.util.List<com.google.android.gms.fido.common.Transport> getTransportsCallSuper() {
            return super.getTransports();
        }

        public com.google.android.gms.fido.fido2.api.common.PublicKeyCredentialType getTypeCallSuper() {
            return super.getType();
        }

        public java.lang.String getTypeAsStringCallSuper() {
            return super.getTypeAsString();
        }

        public int hashCodeCallSuper() {
            return super.hashCode();
        }

        public void writeToParcelCallSuper(android.os.Parcel param0, int param1) {
            super.writeToParcel(param0, param1);
        }

        public GImpl(java.lang.String param0, byte[] param1, java.util.List<com.google.android.gms.fido.common.Transport> param2) {
            super(param0, param1, param2);
        }
    }

    private class HImpl extends com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialDescriptor {

        public byte[] getId() {
            return org.xms.g.fido.fido2.api.common.PublicKeyCredentialDescriptor.this.getId();
        }

        public java.util.List<com.huawei.hms.support.api.fido.fido2.AuthenticatorTransport> getTransports() {
            return ((java.util.List) org.xms.g.utils.Utils.mapList2GH(org.xms.g.fido.fido2.api.common.PublicKeyCredentialDescriptor.this.getTransports(), true));
        }

        public com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialType getType() {
            org.xms.g.fido.fido2.api.common.PublicKeyCredentialType xResult = org.xms.g.fido.fido2.api.common.PublicKeyCredentialDescriptor.this.getType();
            return ((com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialType) ((xResult) == null ? null : (xResult.getHInstance())));
        }

        public byte[] getIdCallSuper() {
            return super.getId();
        }

        public java.util.List<com.huawei.hms.support.api.fido.fido2.AuthenticatorTransport> getTransportsCallSuper() {
            return super.getTransports();
        }

        public com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialType getTypeCallSuper() {
            return super.getType();
        }

        public HImpl(com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialType param0, byte[] param1) {
            super(param0, param1);
        }

        public HImpl(com.huawei.hms.support.api.fido.fido2.PublicKeyCredentialType param0, byte[] param1, java.util.List<com.huawei.hms.support.api.fido.fido2.AuthenticatorTransport> param2) {
            super(param0, param1, param2);
        }
    }

    public static class UnsupportedPubKeyCredDescriptorException extends java.lang.Exception implements org.xms.g.utils.XGettable {
        public java.lang.Object gInstance;
        public java.lang.Object hInstance;

        public UnsupportedPubKeyCredDescriptorException(org.xms.g.utils.XBox param0) {
            if (param0 == null) {
                return;
            }
            this.setGInstance(param0.getGInstance());
            this.setHInstance(param0.getHInstance());
        }

        public UnsupportedPubKeyCredDescriptorException(java.lang.String param0) {
        }

        public UnsupportedPubKeyCredDescriptorException(java.lang.String param0, java.lang.Throwable param1) {
        }

        public void setGInstance(java.lang.Object param0) {
            this.gInstance = param0;
        }

        public void setHInstance(java.lang.Object param0) {
            this.hInstance = param0;
        }

        public java.lang.Object getGInstance() {
            return this.gInstance;
        }

        public java.lang.Object getHInstance() {
            return this.hInstance;
        }

        public static org.xms.g.fido.fido2.api.common.PublicKeyCredentialDescriptor.UnsupportedPubKeyCredDescriptorException dynamicCast(java.lang.Object param0) {
            throw new java.lang.RuntimeException("Not Supported");
        }

        public static boolean isInstance(java.lang.Object param0) {
            throw new java.lang.RuntimeException("Not Supported");
        }
    }
}