package org.xms.f.messaging;

/**
 * Top level Firebase Cloud Messaging singleton that provides methods for subscribing to topics and sending upstream messages.<br/>
 * Wrapper class for com.google.firebase.messaging.ExtensionMessaging, but only the GMS API are provided.<br/>
 * com.google.firebase.messaging.FirebaseMessaging : Top level Firebase Cloud Messaging singleton that provides methods for subscribing to topics and sending upstream messages.<br/>
 */
public class ExtensionMessaging extends org.xms.g.utils.XObject {
    /**
     * org.xms.f.messaging.ExtensionMessaging.ExtensionMessaging(org.xms.g.utils.XBox) constructor of ExtensionMessaging with XBox.<br/>
     *
     * @param param0 the wrapper of xms instance
     */
    public ExtensionMessaging(org.xms.g.utils.XBox param0) {
        super(param0);
    }

    /**
     * org.xms.f.messaging.ExtensionMessaging.getINSTANCE_ID_SCOPE() return the constant value.<br/>
     * com.google.firebase.messaging.FirebaseMessaging.INSTANCE_ID_SCOPE : <a href="https://developers.google.com/android/reference/com/google/firebase/messaging/FirebaseMessaging#public-static-final-string-instance_id_scope">https://developers.google.com/android/reference/com/google/firebase/messaging/FirebaseMessaging#public-static-final-string-instance_id_scope</a><br/>
     *
     * @return Specifies scope used in obtaining a registration token when calling getToken()
     */
    public static java.lang.String getINSTANCE_ID_SCOPE() {
        org.xms.g.utils.XmsLog.d("XMSRouter", "com.google.firebase.messaging.FirebaseMessaging.INSTANCE_ID_SCOPE");
        return com.google.firebase.messaging.FirebaseMessaging.INSTANCE_ID_SCOPE;
    }

    /**
     * org.xms.f.messaging.ExtensionMessaging.getInstance(android.content.Context) Obtains an instance.<br/>
     * com.google.firebase.messaging.FirebaseMessaging.getInstance() : <a href="https://developers.google.com/android/reference/com/google/firebase/messaging/FirebaseMessaging#public-static-synchronized-firebasemessaging-getinstance">https://developers.google.com/android/reference/com/google/firebase/messaging/FirebaseMessaging#public-static-synchronized-firebasemessaging-getinstance</a><br/>
     *
     * @param context Context instance
     * @return ExtensionMessaging instance
     */
    public static synchronized org.xms.f.messaging.ExtensionMessaging getInstance(android.content.Context context) {
        com.google.firebase.messaging.FirebaseMessaging gReturn = com.google.firebase.messaging.FirebaseMessaging.getInstance();
        org.xms.g.utils.XmsLog.d("XMSRouter", "((com.google.firebase.messaging.FirebaseMessaging) this.getGInstance()).getInstance()");
        return ((gReturn) == null ? null : (new org.xms.f.messaging.ExtensionMessaging(new org.xms.g.utils.XBox(gReturn))));
    }

    /**
     * XMS does not provide this api.<br/>
     */
    public static synchronized org.xms.f.messaging.ExtensionMessaging getInstance() {
        throw new java.lang.RuntimeException("Not Supported");
    }

    /**
     * XMS does not provide this api.<br/>
     */
    public void setDeliveryMetricsExportToBigQuery(boolean param0) {
        throw new java.lang.RuntimeException("Not Supported");
    }

    /**
     * XMS does not provide this api.<br/>
     */
    public boolean deliveryMetricsExportToBigQueryEnabled() {
        throw new java.lang.RuntimeException("Not Supported");
    }

    /**
     * org.xms.f.messaging.ExtensionMessaging.isAutoInitEnabled()  Determines whether FCM auto-initialization is enabled or disabled.<br/>
     * com.google.firebase.messaging.FirebaseMessaging.isAutoInitEnabled() : <a href="https://developers.google.com/android/reference/com/google/firebase/messaging/FirebaseMessaging#public-boolean-isautoinitenabled">https://developers.google.com/android/reference/com/google/firebase/messaging/FirebaseMessaging#public-boolean-isautoinitenabled</a><br/>
     *
     * @return true if auto-init is enabled and false if auto-init is disabled
     */
    public boolean isAutoInitEnabled() {
        org.xms.g.utils.XmsLog.d("XMSRouter", "((com.google.firebase.messaging.FirebaseMessaging) this.getGInstance()).isAutoInitEnabled()");
        return ((com.google.firebase.messaging.FirebaseMessaging) this.getGInstance()).isAutoInitEnabled();
    }

    /**
     * org.xms.f.messaging.ExtensionMessaging.send(org.xms.f.messaging.RemoteMessage) Sends message upstream to your app server.<br/>
     * com.google.firebase.messaging.FirebaseMessaging.send(com.google.firebase.messaging.RemoteMessage) : <a href="https://developers.google.com/android/reference/com/google/firebase/messaging/FirebaseMessaging#public-void-send-remotemessage-message">https://developers.google.com/android/reference/com/google/firebase/messaging/FirebaseMessaging#public-void-send-remotemessage-message</a><br/>
     *
     * @param param0 message upstream
     */
    public void send(org.xms.f.messaging.RemoteMessage param0) {
        org.xms.g.utils.XmsLog.d("XMSRouter", "((com.google.firebase.messaging.FirebaseMessaging) this.getGInstance()).send(((com.google.firebase.messaging.RemoteMessage) ((param0) == null ? null : (param0.getGInstance()))))");
        ((com.google.firebase.messaging.FirebaseMessaging) this.getGInstance()).send(((com.google.firebase.messaging.RemoteMessage) ((param0) == null ? null : (param0.getGInstance()))));
    }

    /**
     * org.xms.f.messaging.ExtensionMessaging.setAutoInitEnabled(boolean)  Enables or disables auto-initialization of Firebase Cloud Messaging.<br/>
     * com.google.firebase.messaging.FirebaseMessaging.setAutoInitEnabled(boolean) : <a href="https://developers.google.com/android/reference/com/google/firebase/messaging/FirebaseMessaging#public-void-setautoinitenabled-boolean-enable">https://developers.google.com/android/reference/com/google/firebase/messaging/FirebaseMessaging#public-void-setautoinitenabled-boolean-enable</a><br/>
     *
     * @param param0 Whether Firebase Cloud Messaging should auto-initialize
     */
    public void setAutoInitEnabled(boolean param0) {
        org.xms.g.utils.XmsLog.d("XMSRouter", "((com.google.firebase.messaging.FirebaseMessaging) this.getGInstance()).setAutoInitEnabled(param0)");
        ((com.google.firebase.messaging.FirebaseMessaging) this.getGInstance()).setAutoInitEnabled(param0);
    }

    /**
     * org.xms.f.messaging.ExtensionMessaging.subscribeToTopic(java.lang.String) subscribe To Topic.<br/>
     * com.google.firebase.messaging.FirebaseMessaging.subscribeToTopic(java.lang.String) : <a href="https://developers.google.com/android/reference/com/google/firebase/messaging/FirebaseMessaging#public-taskvoid-subscribetotopic-string-topic">https://developers.google.com/android/reference/com/google/firebase/messaging/FirebaseMessaging#public-taskvoid-subscribetotopic-string-topic</a><br/>
     *
     * @param param0 The name of the topic to subscribe. Must match the following regular expression: "[a-zA-Z0-9-_.~%]{1,900}"
     * @return A task that will be completed when the topic has been successfully subscribed to
     */
    public org.xms.g.tasks.Task<java.lang.Void> subscribeToTopic(java.lang.String param0) {
        org.xms.g.utils.XmsLog.d("XMSRouter", "((com.google.firebase.messaging.FirebaseMessaging) this.getGInstance()).subscribeToTopic(param0)");
        com.google.android.gms.tasks.Task gReturn = ((com.google.firebase.messaging.FirebaseMessaging) this.getGInstance()).subscribeToTopic(param0);
        return ((gReturn) == null ? null : (new org.xms.g.tasks.Task.XImpl(new org.xms.g.utils.XBox(gReturn))));
    }

    /**
     * org.xms.f.messaging.ExtensionMessaging.unsubscribeFromTopic(java.lang.String) Unsubscribes from topic in the background.<br/>
     * com.google.firebase.messaging.FirebaseMessaging.unsubscribeFromTopic(java.lang.String) : <a href="https://developers.google.com/android/reference/com/google/firebase/messaging/FirebaseMessaging#public-taskvoid-unsubscribefromtopic-string-topic">https://developers.google.com/android/reference/com/google/firebase/messaging/FirebaseMessaging#public-taskvoid-unsubscribefromtopic-string-topic</a><br/>
     *
     * @param param0 The name of the topic to unsubscribe from. Must match the following regular expression: "[a-zA-Z0-9-_.~%]{1,900}"
     * @return A task that will be completed when the topic has been successfully unsubscribed from
     */
    public org.xms.g.tasks.Task<java.lang.Void> unsubscribeFromTopic(java.lang.String param0) {
        org.xms.g.utils.XmsLog.d("XMSRouter", "((com.google.firebase.messaging.FirebaseMessaging) this.getGInstance()).unsubscribeFromTopic(param0)");
        com.google.android.gms.tasks.Task gReturn = ((com.google.firebase.messaging.FirebaseMessaging) this.getGInstance()).unsubscribeFromTopic(param0);
        return ((gReturn) == null ? null : (new org.xms.g.tasks.Task.XImpl(new org.xms.g.utils.XBox(gReturn))));
    }

    /**
     * org.xms.f.messaging.ExtensionMessaging.dynamicCast(java.lang.Object) dynamic cast the input object to ExtensionMessaging.<br/>
     *
     * @param param0 the input object
     * @return cast ExtensionMessaging object
     */
    public static org.xms.f.messaging.ExtensionMessaging dynamicCast(java.lang.Object param0) {
        return ((org.xms.f.messaging.ExtensionMessaging) param0);
    }

    /**
     * org.xms.f.messaging.ExtensionMessaging.isInstance(java.lang.Object) judge whether the Object is XMS instance or not.<br/>
     *
     * @param param0 the input object
     * @return true if the Object is XMS instance, otherwise false
     */
    public static boolean isInstance(java.lang.Object param0) {
        if (!(param0 instanceof org.xms.g.utils.XGettable)) {
            return false;
        }
        return ((org.xms.g.utils.XGettable) param0).getGInstance() instanceof com.google.firebase.messaging.FirebaseMessaging;
    }
}