{
    "USER_CUSTOM_CODE_IN_CLASS_BODY_com.huawei.agconnect.auth.AGCAuthException.HImpl":"public java.lang.String getErrorCodeCallSuper() {\n            return String.valueOf(super.getCode());\n        }",
    "USER_CUSTOM_CODE_IN_CLASS_BODY_org.xms.f.auth.ExtensionAuth":"private String xLanguageCode;\n    public void setXLanguageCode(String code) {\n        this.xLanguageCode = code;\n    }\n    public String getXLanguageCode() {\n        return this.xLanguageCode;\n    }",
    "USER_CUSTOM_CODE_IN_CLASS_BODY_org.xms.f.auth.ExtensionAuthProvider":"public static final String AGC_PROVIDER = \"AGC\";",
    "USER_CUSTOM_CODE_IN_CLASS_BODY_org.xms.f.auth.GithubAuthProvider":"private static final String GITHUB_PROVIDER = \"github.com\";",
    "USER_CUSTOM_CODE_IN_CLASS_BODY_org.xms.f.auth.MultiFactorInfo":"private static final String MUITI_KEY = \"factorIdKey\";",
    "USER_CUSTOM_CODE_IN_CLASS_BODY_org.xms.f.auth.PhoneMultiFactorGenerator":"private static final String PHONE_PROVIDER = \"phone\";",
    "USER_CUSTOM_CODE_IN_CLASS_BODY_org.xms.f.auth.TwitterAuthProvider":"private static final String TWITTER_PROVIDER = \"twitter.com\";",
    "USER_CUSTOM_CODE_IN_METHOD_BODY_WRAPPER_org.xms.f.auth.ExtensionAuthException.getErrorCode()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"((HImpl) ((com.huawei.agconnect.auth.AGCAuthException) this.getHInstance())).getErrorCodeCallSuper()\");\n                return ((HImpl) ((com.huawei.agconnect.auth.AGCAuthException) this.getHInstance())).getErrorCodeCallSuper();",
    "USER_CUSTOM_CODE_IN_METHOD_BODY_WRAPPER_org.xms.f.auth.PhoneAuthProvider.OnVerificationStateChangedCallbacks.onCodeAutoRetrievalTimeOut(java.lang.String)void":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.PhoneAuthProvider.OnVerificationStateChangedCallbacks.onCodeAutoRetrievalTimeOut(param0)\");",
    "USER_CUSTOM_CODE_IN_METHOD_BODY_WRAPPER_org.xms.f.auth.PhoneAuthProvider.OnVerificationStateChangedCallbacks.onCodeSent(java.lang.Stringorg.xms.f.auth.PhoneAuthProvider.ForceResendingToken)void":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.PhoneAuthProvider.OnVerificationStateChangedCallbacks.onCodeSent(param0,param1)\");",
    "org.xms.f.auth.ActionCodeResult.XImpl.getData(int)java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ActionCodeResult.XImpl.getData(param0)\");\n                return \"\";",
    "org.xms.f.auth.ActionCodeResult.XImpl.getInfo()org.xms.f.auth.ActionCodeInfo":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ActionCodeResult.XImpl.getInfo()\");\n                return new org.xms.f.auth.ActionCodeInfo(new org.xms.g.utils.XBox(null, null));",
    "org.xms.f.auth.ActionCodeResult.XImpl.getOperation()int":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ActionCodeResult.XImpl.getOperation()\");\n                return 0;",
    "org.xms.f.auth.ActionCodeResult.getEMAIL()int":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ActionCodeResult.getEMAIL\");\n            return 0;",
    "org.xms.f.auth.ActionCodeResult.getERROR()int":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ActionCodeResult.getERROR\");\n            return 3;",
    "org.xms.f.auth.ActionCodeResult.getFROM_EMAIL()int":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ActionCodeResult.getFROM_EMAIL\");\n            return 1;",
    "org.xms.f.auth.ActionCodeResult.getHInstanceActionCodeResult()java.lang.Object":"default java.lang.Object getHInstanceActionCodeResult() {\n        if (this instanceof org.xms.g.utils.XGettable) {\n            return ((java.lang.Object) ((org.xms.g.utils.XGettable) this).getHInstance());\n        }\n        return new java.lang.Object();\n    }",
    "org.xms.f.auth.ActionCodeResult.getPASSWORD_RESET()int":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ActionCodeResult.getPASSWORD_RESET\");\n            return 0;",
    "org.xms.f.auth.ActionCodeResult.getRECOVER_EMAIL()int":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ActionCodeResult.getRECOVER_EMAIL\");\n            return 2;",
    "org.xms.f.auth.ActionCodeResult.getREVERT_SECOND_FACTOR_ADDITION()int":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ActionCodeResult.getREVERT_SECOND_FACTOR_ADDITION\");\n            return 6;",
    "org.xms.f.auth.ActionCodeResult.getSIGN_IN_WITH_EMAIL_LINK()int":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ActionCodeResult.getSIGN_IN_WITH_EMAIL_LINK\");\n            return 4;",
    "org.xms.f.auth.ActionCodeResult.getVERIFY_BEFORE_CHANGE_EMAIL()int":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ActionCodeResult.getVERIFY_BEFORE_CHANGE_EMAIL\");\n            return 5;",
    "org.xms.f.auth.ActionCodeResult.getVERIFY_EMAIL()int":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ActionCodeResult.getVERIFY_EMAIL\");\n            return 1;",
    "org.xms.f.auth.ActionCodeResult.isInstance(java.lang.Object)boolean":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.ActionCodeSettings.Builder.setAndroidPackageName(java.lang.Stringbooleanjava.lang.String)org.xms.f.auth.ActionCodeSettings.Builder":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ActionCodeSettings.Builder.setAndroidPackageName(param0, param1, param2)\");\n                return this;",
    "org.xms.f.auth.ActionCodeSettings.Builder.setDynamicLinkDomain(java.lang.String)org.xms.f.auth.ActionCodeSettings.Builder":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ActionCodeSettings.Builder.setDynamicLinkDomain(param0)\");\n                return this;",
    "org.xms.f.auth.ActionCodeSettings.Builder.setHandleCodeInApp(boolean)org.xms.f.auth.ActionCodeSettings.Builder":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ActionCodeSettings.Builder.setHandleCodeInApp(param0)\");\n                return this;",
    "org.xms.f.auth.ActionCodeSettings.Builder.setIOSBundleId(java.lang.String)org.xms.f.auth.ActionCodeSettings.Builder":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ActionCodeSettings.Builder.setIOSBundleId(param0)\");\n                return this;",
    "org.xms.f.auth.ActionCodeSettings.Builder.setUrl(java.lang.String)org.xms.f.auth.ActionCodeSettings.Builder":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ActionCodeSettings.Builder.setUrl(param0)\");\n                return this;",
    "org.xms.f.auth.ActionCodeSettings.canHandleCodeInApp()boolean":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ActionCodeSettings.canHandleCodeInApp()\");\n            return false;",
    "org.xms.f.auth.ActionCodeSettings.getAndroidInstallApp()boolean":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ActionCodeSettings.getAndroidInstallApp()\");\n            return false;",
    "org.xms.f.auth.ActionCodeSettings.getAndroidMinimumVersion()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ActionCodeSettings.getAndroidMinimumVersion()\");\n            return \"17\";",
    "org.xms.f.auth.ActionCodeSettings.getAndroidPackageName()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ActionCodeSettings.getAndroidPackageName()\");\n            return \"\";",
    "org.xms.f.auth.ActionCodeSettings.getIOSBundle()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ActionCodeSettings.getIOSBundle()\");\n            return \"\";",
    "org.xms.f.auth.ActionCodeSettings.getUrl()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ActionCodeSettings.getUrl()\");\n            return \"\";",
    "org.xms.f.auth.AdditionalUserInfo.XImpl.getProviderId()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.agconnect.auth.AGConnectAuth.getInstance().getCurrentUser().getProviderId()\");\n                return com.huawei.agconnect.auth.AGConnectAuth.getInstance().getCurrentUser().getProviderId();",
    "org.xms.f.auth.AdditionalUserInfo.XImpl.getUsername()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.agconnect.auth.AGConnectAuth.getInstance().getCurrentUser().getDisplayName()\");\n                return com.huawei.agconnect.auth.AGConnectAuth.getInstance().getCurrentUser().getDisplayName();",
    "org.xms.f.auth.AdditionalUserInfo.XImpl.isNewUser()boolean":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.AdditionalUserInfo.XImpl.isNewUser\");\n                com.huawei.agconnect.auth.AGConnectUserExtra agConnectUserExtra =\n                        com.huawei.agconnect.auth.AGConnectAuth.getInstance().getCurrentUser().getUserExtra().getResult();\n                return agConnectUserExtra.getCreateTime().equals(agConnectUserExtra.getLastSignInTime());",
    "org.xms.f.auth.AdditionalUserInfo.getHInstanceAdditionalUserInfo()java.lang.Object":"default java.lang.Object getHInstanceAdditionalUserInfo() {\n        if (this instanceof org.xms.g.utils.XGettable) {\n            return ((java.lang.Object) ((org.xms.g.utils.XGettable) this).getHInstance());\n        }\n        return new java.lang.Object();\n    }",
    "org.xms.f.auth.AdditionalUserInfo.isInstance(java.lang.Object)boolean":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.AuthCredential.XImpl.getProvider()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.AuthCredential.XImpl.getProvider()\");\n                return String.valueOf(((com.huawei.agconnect.auth.AGConnectAuthCredential) this.getHInstance()).getProvider());",
    "org.xms.f.auth.EmailAuthCredential.dynamicCast(java.lang.Object)org.xms.f.auth.EmailAuthCredential":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.EmailAuthCredential.getProvider()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.EmailAuthCredential.getProvider()\");\n            return String.valueOf(((com.huawei.agconnect.auth.AGConnectAuthCredential) this.getHInstance()).getProvider());",
    "org.xms.f.auth.EmailAuthCredential.isInstance(java.lang.Object)boolean":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.EmailAuthProvider.getEMAIL_LINK_SIGN_IN_METHOD()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.agconnect.auth.AGConnectAuthCredential.Email_Provider\");\n            return String.valueOf(com.huawei.agconnect.auth.AGConnectAuthCredential.Email_Provider);",
    "org.xms.f.auth.EmailAuthProvider.getEMAIL_PASSWORD_SIGN_IN_METHOD()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.agconnect.auth.AGConnectAuthCredential.Email_Provider\");\n            return String.valueOf(com.huawei.agconnect.auth.AGConnectAuthCredential.Email_Provider);",
    "org.xms.f.auth.EmailAuthProvider.getPROVIDER_ID()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.agconnect.auth.AGConnectAuthCredential.Email_Provider\");\n            return String.valueOf(com.huawei.agconnect.auth.AGConnectAuthCredential.Email_Provider);",
    "org.xms.f.auth.EmailAuthProvider.isInstance(java.lang.Object)boolean":"return ((org.xms.g.utils.XGettable) param0).getHInstance() instanceof com.huawei.agconnect.auth.EmailAuthProvider;",
    "org.xms.f.auth.ExtensionAuth.applyActionCode(java.lang.String)org.xms.g.tasks.Task<java.lang.Void>":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ExtensionAuth.applyActionCode(param0)\");\n            return new org.xms.g.tasks.Task.XImpl(new org.xms.g.utils.XBox(null, new org.xms.f.TaskImpl()));",
    "org.xms.f.auth.ExtensionAuth.checkActionCode(java.lang.String)org.xms.g.tasks.Task<org.xms.f.auth.ActionCodeResult>":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ExtensionAuth.checkActionCode(param0)\");\n            return new org.xms.g.tasks.Task.XImpl(new org.xms.g.utils.XBox(null, new org.xms.f.TaskImpl()));",
    "org.xms.f.auth.ExtensionAuth.fetchSignInMethodsForEmail(java.lang.String)org.xms.g.tasks.Task<org.xms.f.auth.SignInMethodQueryResult>":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ExtensionAuth.fetchSignInMethodsForEmail(param0)\");\n            return new org.xms.g.tasks.Task.XImpl(new org.xms.g.utils.XBox(null, null));",
    "org.xms.f.auth.ExtensionAuth.getApp()org.xms.f.ExtensionApp":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ExtensionAuth.getApp\");\n            return new org.xms.f.ExtensionApp(new org.xms.g.utils.XBox(null, null));",
    "org.xms.f.auth.ExtensionAuth.getFirebaseAuthSettings()org.xms.f.auth.ExtensionAuthSettings":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ExtensionAuth.getFirebaseAuthSettings()\");\n            return new org.xms.f.auth.ExtensionAuthSettings.XImpl(new org.xms.g.utils.XBox(null, null));",
    "org.xms.f.auth.ExtensionAuth.getInstance(org.xms.f.ExtensionApp)org.xms.f.auth.ExtensionAuth":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.agconnect.auth.AGConnectAuth.getInstance()\");\n            com.huawei.agconnect.auth.AGConnectAuth hReturn = com.huawei.agconnect.auth.AGConnectAuth.getInstance();\n            return ((hReturn) == null ? null : (new org.xms.f.auth.ExtensionAuth(new org.xms.g.utils.XBox(null, hReturn))));",
    "org.xms.f.auth.ExtensionAuth.getLanguageCode()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ExtensionAuth.getLanguageCode\");\n            return this.getXLanguageCode();",
    "org.xms.f.auth.ExtensionAuth.isSignInWithEmailLink(java.lang.String)boolean":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ExtensionAuth.isSignInWithEmailLink(param0)\");\n            return false;",
    "org.xms.f.auth.ExtensionAuth.setFirebaseUIVersion(java.lang.String)org.xms.g.tasks.Task<java.lang.Void>":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ExtensionAuth.setFirebaseUIVersion(param0)\");\n            return new org.xms.g.tasks.Task.XImpl(new org.xms.g.utils.XBox(null, new org.xms.f.TaskImpl()));",
    "org.xms.f.auth.ExtensionAuth.setLanguageCode(java.lang.String)void":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ExtensionAuth.setLanguageCode\");\n            this.setXLanguageCode(param0);",
    "org.xms.f.auth.ExtensionAuth.signInWithCustomToken(java.lang.String)org.xms.g.tasks.Task<org.xms.f.auth.AuthResult>":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"((com.huawei.agconnect.auth.AGConnectAuth) this.getHInstance()).signIn(agConnectAuthCredential)\");\n            com.huawei.agconnect.auth.AGConnectAuthCredential agConnectAuthCredential = com.huawei.agconnect.auth.SelfBuildProvider.credentialWithToken(param0);\n            com.huawei.hmf.tasks.Task hReturn = ((com.huawei.agconnect.auth.AGConnectAuth) this.getHInstance()).signIn(agConnectAuthCredential);\n            return ((hReturn) == null ? null : (new org.xms.g.tasks.Task.XImpl(new org.xms.g.utils.XBox(null, hReturn))));",
    "org.xms.f.auth.ExtensionAuth.useAppLanguage()void":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ExtensionAuth.useAppLanguage\");",
    "org.xms.f.auth.ExtensionAuth.verifyPasswordResetCode(java.lang.String)org.xms.g.tasks.Task<java.lang.String>":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ExtensionAuth.verifyPasswordResetCode(param0)\");\n            return new org.xms.g.tasks.Task.XImpl(new org.xms.g.utils.XBox(null, null));",
    "org.xms.f.auth.ExtensionAuthException.ExtensionAuthException(java.lang.Stringjava.lang.String)":"this.setHInstance(new HImpl(param1, Integer.parseInt(param0)));",
    "org.xms.f.auth.ExtensionAuthException.getErrorCode()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"String.valueOf(((com.huawei.agconnect.auth.AGCAuthException) this.getHInstance()).getCode())\");\n                return String.valueOf(((com.huawei.agconnect.auth.AGCAuthException) this.getHInstance()).getCode());",
    "org.xms.f.auth.ExtensionAuthInvalidCredentialsException.ExtensionAuthInvalidCredentialsException(java.lang.Stringjava.lang.String)":"this.setHInstance(new com.huawei.agconnect.auth.AGCAuthException(param1, com.huawei.agconnect.auth.AGCAuthException.SIGNIN_USER_STATUS_ERROR));",
    "org.xms.f.auth.ExtensionAuthInvalidCredentialsException.isInstance(java.lang.Object)boolean":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.ExtensionAuthInvalidUserException.ExtensionAuthInvalidUserException(java.lang.Stringjava.lang.String)":"this.setHInstance(new com.huawei.agconnect.auth.AGCAuthException(param1, com.huawei.agconnect.auth.AGCAuthException.SIGNIN_USER_STATUS_ERROR));",
    "org.xms.f.auth.ExtensionAuthInvalidUserException.isInstance(java.lang.Object)boolean":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.ExtensionAuthProvider.getHInstanceExtensionAuthProvider()java.lang.Object":"default java.lang.Object getHInstanceExtensionAuthProvider() {\n        if (this instanceof org.xms.g.utils.XGettable) {\n            return ((java.lang.Object) ((org.xms.g.utils.XGettable) this).getHInstance());\n        }\n        return new java.lang.Object();\n    }",
    "org.xms.f.auth.ExtensionAuthProvider.getPROVIDER_ID()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ExtensionAuthProvider.getPROVIDER_ID\");\n            return AGC_PROVIDER;",
    "org.xms.f.auth.ExtensionAuthProvider.isInstance(java.lang.Object)boolean":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.ExtensionAuthRecentLoginRequiredException.ExtensionAuthRecentLoginRequiredException(java.lang.Stringjava.lang.String)":"this.setHInstance(new com.huawei.agconnect.auth.AGCAuthException(param1, com.huawei.agconnect.auth.AGCAuthException.SENSITIVE_OPERATION_TIMEOUT));",
    "org.xms.f.auth.ExtensionAuthRecentLoginRequiredException.isInstance(java.lang.Object)boolean":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.ExtensionAuthSettings.XImpl.setAutoRetrievedSmsCodeForPhoneNumber(java.lang.Stringjava.lang.String)void":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ExtensionAuthSettings.XImpl.setAutoRetrievedSmsCodeForPhoneNumber(param0, param1)\");",
    "org.xms.f.auth.ExtensionAuthSettings.isInstance(java.lang.Object)boolean":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.ExtensionAuthWebException.ExtensionAuthWebException(java.lang.Stringjava.lang.String)":"this.setHInstance(new com.huawei.agconnect.auth.AGCAuthException(param1, Integer.parseInt(param0)));",
    "org.xms.f.auth.ExtensionAuthWebException.isInstance(java.lang.Object)boolean":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.ExtensionUser.XImpl.getPhotoUrl()android.net.Uri":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"Uri.parse(((com.huawei.agconnect.auth.AGConnectUser) this.getHInstance()).getPhotoUrl())\");\n                return android.net.Uri.parse(((com.huawei.agconnect.auth.AGConnectUser) this.getHInstance()).getPhotoUrl());",
    "org.xms.f.auth.ExtensionUser.XImpl.isEmailVerified()boolean":"throw new RuntimeException(\"HMS does not support this API.\");",
    "org.xms.f.auth.ExtensionUser.reauthenticateAndRetrieveData(org.xms.f.auth.AuthCredential)org.xms.g.tasks.Task<org.xms.f.auth.AuthResult>":"com.huawei.agconnect.auth.AGConnectAuth.getInstance().signOut();\n            com.huawei.hmf.tasks.Task hReturn = com.huawei.agconnect.auth.AGConnectAuth.getInstance().signIn((com.huawei.agconnect.auth.AGConnectAuthCredential) param0.getHInstance());\n            return ((hReturn) == null ? null : (new org.xms.g.tasks.Task.XImpl(new org.xms.g.utils.XBox(null, hReturn))));",
    "org.xms.f.auth.ExtensionUser.reload()org.xms.g.tasks.Task<java.lang.Void>":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ExtensionUser.reload()\");\n            return new org.xms.g.tasks.Task.XImpl(new org.xms.g.utils.XBox(null, new org.xms.f.TaskImpl()));",
    "org.xms.f.auth.ExtensionUser.unlink(java.lang.String)org.xms.g.tasks.Task<org.xms.f.auth.AuthResult>":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.ExtensionUser.unlink(param0)\");\n            com.huawei.hmf.tasks.Task hReturn = ((com.huawei.agconnect.auth.AGConnectUser) this.getHInstance()).unlink(Integer.parseInt(param0));\n            return ((hReturn) == null ? null : (new org.xms.g.tasks.Task.XImpl(new org.xms.g.utils.XBox(null, hReturn))));",
    "org.xms.f.auth.ExtensionUserMetadata.XImpl.getCreationTimestamp()long":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"Integer.parseInt(((com.huawei.agconnect.auth.AGConnectUserExtra) this.getHInstance()).getCreateTime())\");\n                return Integer.parseInt(((com.huawei.agconnect.auth.AGConnectUserExtra) this.getHInstance()).getCreateTime());",
    "org.xms.f.auth.ExtensionUserMetadata.XImpl.getLastSignInTimestamp()long":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"Integer.parseInt(((com.huawei.agconnect.auth.AGConnectUserExtra) this.getHInstance()).getLastSignInTime())\");\n                return Integer.parseInt(((com.huawei.agconnect.auth.AGConnectUserExtra) this.getHInstance()).getLastSignInTime());",
    "org.xms.f.auth.ExtensionUserMetadata.getHInstanceExtensionUserMetadata()java.lang.Object":"default com.huawei.agconnect.auth.AGConnectUserExtra getHInstanceExtensionUserMetadata() {\n        if (this instanceof org.xms.g.utils.XGettable) {\n            return ((com.huawei.agconnect.auth.AGConnectUserExtra) ((org.xms.g.utils.XGettable) this).getHInstance());\n        }\n        return new com.huawei.agconnect.auth.AGConnectUserExtra() {\n            public String getCreateTime() {\n                return String.valueOf(org.xms.f.auth.ExtensionUserMetadata.this.getCreationTimestamp());\n            }\n            public String getLastSignInTime() {\n                return String.valueOf(org.xms.f.auth.ExtensionUserMetadata.this.getLastSignInTimestamp());\n            }\n        };\n    }",
    "org.xms.f.auth.ExtensionUserMetadata.isInstance(java.lang.Object)boolean":"return ((org.xms.g.utils.XGettable) param0).getHInstance() instanceof com.huawei.agconnect.auth.AGConnectUserExtra;",
    "org.xms.f.auth.FacebookAuthCredential.dynamicCast(java.lang.Object)org.xms.f.auth.FacebookAuthCredential":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.FacebookAuthCredential.getProvider()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.FacebookAuthCredential.getProvider()\");\n            return String.valueOf(((com.huawei.agconnect.auth.AGConnectAuthCredential) this.getHInstance()).getProvider());",
    "org.xms.f.auth.FacebookAuthCredential.isInstance(java.lang.Object)boolean":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.FacebookAuthProvider.getFACEBOOK_SIGN_IN_METHOD()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.agconnect.auth.AGConnectAuthCredential.Facebook_Provider\");\n            return String.valueOf(com.huawei.agconnect.auth.AGConnectAuthCredential.Facebook_Provider);",
    "org.xms.f.auth.FacebookAuthProvider.getPROVIDER_ID()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.agconnect.auth.AGConnectAuthCredential.Facebook_Provider\");\n            return String.valueOf(com.huawei.agconnect.auth.AGConnectAuthCredential.Facebook_Provider);",
    "org.xms.f.auth.GetTokenResult.getClaims()java.util.Map<java.lang.String, java.lang.Object>":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.GetTokenResult.getClaims()\");\n            return new java.util.HashMap<>();",
    "org.xms.f.auth.GetTokenResult.getIssuedAtTimestamp()long":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.GetTokenResult.getIssuedAtTimestamp()\");\n            return 1;",
    "org.xms.f.auth.GetTokenResult.getSignInProvider()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.agconnect.auth.AGConnectAuth.getInstance().getCurrentUser().getProviderId()\");\n            return com.huawei.agconnect.auth.AGConnectAuth.getInstance().getCurrentUser().getProviderId();",
    "org.xms.f.auth.GithubAuthProvider.getGITHUB_SIGN_IN_METHOD()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.GithubAuthProvider.getGITHUB_SIGN_IN_METHOD\");\n            return GITHUB_PROVIDER;",
    "org.xms.f.auth.GithubAuthProvider.getPROVIDER_ID()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.GithubAuthProvider.getGITHUB_SIGN_IN_METHOD\");\n            return GITHUB_PROVIDER;",
    "org.xms.f.auth.GithubAuthProvider.isInstance(java.lang.Object)boolean":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.GoogleAuthCredential.dynamicCast(java.lang.Object)org.xms.f.auth.GoogleAuthCredential":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.GoogleAuthCredential.getProvider()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.GoogleAuthCredential.getProvider()\");\n            return String.valueOf(((com.huawei.agconnect.auth.AGConnectAuthCredential) this.getHInstance()).getProvider());",
    "org.xms.f.auth.GoogleAuthCredential.isInstance(java.lang.Object)boolean":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.GoogleAuthProvider.getCredential(java.lang.Stringjava.lang.String)org.xms.f.auth.AuthCredential":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.google.firebase.auth.GoogleAuthProvider.getCredential(param0, param1)\");\n            com.huawei.agconnect.auth.AGConnectAuthCredential hReturn = com.huawei.agconnect.auth.HwIdAuthProvider.credentialWithToken(param0);\n            return ((hReturn) == null ? null : (new org.xms.f.auth.AuthCredential.XImpl(new org.xms.g.utils.XBox(null, hReturn))));",
    "org.xms.f.auth.GoogleAuthProvider.getGOOGLE_SIGN_IN_METHOD()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.agconnect.auth.AGConnectAuthCredential.HMS_Provider\");\n            return String.valueOf(com.huawei.agconnect.auth.AGConnectAuthCredential.HMS_Provider);",
    "org.xms.f.auth.GoogleAuthProvider.getPROVIDER_ID()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.agconnect.auth.AGConnectAuthCredential.HMS_Provider\");\n            return String.valueOf(com.huawei.agconnect.auth.AGConnectAuthCredential.HMS_Provider);",
    "org.xms.f.auth.GoogleAuthProvider.isInstance(java.lang.Object)boolean":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.MultiFactorInfo.getFACTOR_ID_KEY()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.MultiFactorInfo.getFACTOR_ID_KEY\");\n            return MUITI_KEY;",
    "org.xms.f.auth.MultiFactorInfo.isInstance(java.lang.Object)boolean":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.PhoneAuthCredential.dynamicCast(java.lang.Object)org.xms.f.auth.PhoneAuthCredential":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.PhoneAuthCredential.getProvider()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.PhoneAuthCredential.getProvider()\");\n            return String.valueOf(((com.huawei.agconnect.auth.AGConnectAuthCredential) this.getHInstance()).getProvider());",
    "org.xms.f.auth.PhoneAuthCredential.getSignInMethod()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.PhoneAuthCredential.getSignInMethod()\");\n            return \"\";",
    "org.xms.f.auth.PhoneAuthCredential.getSmsCode()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.PhoneAuthCredential.getSmsCode()\");\n            return \"\";",
    "org.xms.f.auth.PhoneAuthCredential.isInstance(java.lang.Object)boolean":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.PhoneAuthOptions.Builder.Builder(org.xms.f.auth.ExtensionAuth)":"this.setHInstance(null);",
    "org.xms.f.auth.PhoneAuthOptions.Builder.build()org.xms.f.auth.PhoneAuthOptions":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.PhoneAuthOptions.Builder.build()\");\n                return new org.xms.f.auth.PhoneAuthOptions(new org.xms.g.utils.XBox(null, null));",
    "org.xms.f.auth.PhoneAuthOptions.Builder.isInstance(java.lang.Object)boolean":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.PhoneAuthOptions.Builder.requireSmsValidation(boolean)org.xms.f.auth.PhoneAuthOptions.Builder":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.PhoneAuthOptions.Builder.requireSmsValidation(param0)\");\n                return this;",
    "org.xms.f.auth.PhoneAuthOptions.Builder.setActivity(android.app.Activity)org.xms.f.auth.PhoneAuthOptions.Builder":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.PhoneAuthOptions.Builder.setActivity(param0)\");\n                return this;",
    "org.xms.f.auth.PhoneAuthOptions.Builder.setCallbacks(org.xms.f.auth.PhoneAuthProvider.OnVerificationStateChangedCallbacks)org.xms.f.auth.PhoneAuthOptions.Builder":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.PhoneAuthOptions.Builder.setCallbacks(param0)\");\n                return this;",
    "org.xms.f.auth.PhoneAuthOptions.Builder.setExecutor(java.util.concurrent.Executor)org.xms.f.auth.PhoneAuthOptions.Builder":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.PhoneAuthOptions.Builder.setExecutor(param0)\");\n                return this;",
    "org.xms.f.auth.PhoneAuthOptions.Builder.setForceResendingToken(org.xms.f.auth.PhoneAuthProvider.ForceResendingToken)org.xms.f.auth.PhoneAuthOptions.Builder":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.PhoneAuthOptions.Builder.setForceResendingToken(param0)\");\n                return this;",
    "org.xms.f.auth.PhoneAuthOptions.Builder.setMultiFactorHint(org.xms.f.auth.PhoneMultiFactorInfo)org.xms.f.auth.PhoneAuthOptions.Builder":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.PhoneAuthOptions.Builder.setMultiFactorHint(param0)\");\n                return this;",
    "org.xms.f.auth.PhoneAuthOptions.Builder.setMultiFactorSession(org.xms.f.auth.MultiFactorSession)org.xms.f.auth.PhoneAuthOptions.Builder":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.PhoneAuthOptions.Builder.setMultiFactorSession(param0)\");\n                return this;",
    "org.xms.f.auth.PhoneAuthOptions.Builder.setPhoneNumber(java.lang.String)org.xms.f.auth.PhoneAuthOptions.Builder":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.PhoneAuthOptions.Builder.setPhoneNumber(param0)\");\n                return this;",
    "org.xms.f.auth.PhoneAuthOptions.Builder.setTimeout(java.lang.Longjava.util.concurrent.TimeUnit)org.xms.f.auth.PhoneAuthOptions.Builder":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.PhoneAuthOptions.Builder.setTimeout(param0,param1)\");\n                return this;",
    "org.xms.f.auth.PhoneAuthOptions.isInstance(java.lang.Object)boolean":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.PhoneAuthOptions.newBuilder()org.xms.f.auth.PhoneAuthOptions.Builder":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.PhoneAuthOptions.newBuilder()\");\n            return new org.xms.f.auth.PhoneAuthOptions.Builder(new org.xms.g.utils.XBox(null, null));",
    "org.xms.f.auth.PhoneAuthOptions.newBuilder(org.xms.f.auth.ExtensionAuth)org.xms.f.auth.PhoneAuthOptions.Builder":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.PhoneAuthOptions.newBuilder(param0)\");\n            return new org.xms.f.auth.PhoneAuthOptions.Builder(new org.xms.g.utils.XBox(null, null));",
    "org.xms.f.auth.PhoneAuthProvider.OnVerificationStateChangedCallbacks.OnVerificationStateChangedCallbacks()":"this.setHInstance(null);",
    "org.xms.f.auth.PhoneAuthProvider.OnVerificationStateChangedCallbacks.XImpl.onVerificationCompleted(org.xms.f.auth.PhoneAuthCredential)void":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.PhoneAuthProvider.OnVerificationStateChangedCallbacks.XImpl.onVerificationCompleted(param0)\");",
    "org.xms.f.auth.PhoneAuthProvider.OnVerificationStateChangedCallbacks.XImpl.onVerificationFailed(org.xms.f.ExtensionException)void":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.PhoneAuthProvider.OnVerificationStateChangedCallbacks.XImpl.onVerificationFailed(param0)\");",
    "org.xms.f.auth.PhoneAuthProvider.OnVerificationStateChangedCallbacks.isInstance(java.lang.Object)boolean":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.PhoneAuthProvider.OnVerificationStateChangedCallbacks.onCodeAutoRetrievalTimeOut(java.lang.String)void":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.PhoneAuthProvider.OnVerificationStateChangedCallbacks.onCodeAutoRetrievalTimeOut(param0)\");",
    "org.xms.f.auth.PhoneAuthProvider.OnVerificationStateChangedCallbacks.onCodeSent(java.lang.Stringorg.xms.f.auth.PhoneAuthProvider.ForceResendingToken)void":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.PhoneAuthProvider.OnVerificationStateChangedCallbacks.onCodeSent(param0,param1)\");",
    "org.xms.f.auth.PhoneAuthProvider.getInstance()org.xms.f.auth.PhoneAuthProvider":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.PhoneAuthProvider.getInstance()\");\n            return new org.xms.f.auth.PhoneAuthProvider(new org.xms.g.utils.XBox(null, null));",
    "org.xms.f.auth.PhoneAuthProvider.getInstance(org.xms.f.auth.ExtensionAuth)org.xms.f.auth.PhoneAuthProvider":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.PhoneAuthProvider.getInstance(ExtensionAuth)\");\n            return new org.xms.f.auth.PhoneAuthProvider(new org.xms.g.utils.XBox(null, null));",
    "org.xms.f.auth.PhoneAuthProvider.getPHONE_SIGN_IN_METHOD()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.agconnect.auth.AGConnectAuthCredential.Phone_Provider\");\n            return String.valueOf(com.huawei.agconnect.auth.AGConnectAuthCredential.Phone_Provider);",
    "org.xms.f.auth.PhoneAuthProvider.getPROVIDER_ID()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.agconnect.auth.AGConnectAuthCredential.Phone_Provider\");\n            return String.valueOf(com.huawei.agconnect.auth.AGConnectAuthCredential.Phone_Provider);",
    "org.xms.f.auth.PhoneAuthProvider.isInstance(java.lang.Object)boolean":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.PhoneMultiFactorGenerator.getFACTOR_ID()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.PhoneMultiFactorGenerator.getFACTOR_ID\");\n            return PHONE_PROVIDER;",
    "org.xms.f.auth.PhoneMultiFactorGenerator.isInstance(java.lang.Object)boolean":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.PlayGamesAuthCredential.dynamicCast(java.lang.Object)org.xms.f.auth.PlayGamesAuthCredential":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.PlayGamesAuthCredential.getProvider()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.PlayGamesAuthCredential.getProvider()\");\n            return String.valueOf(((com.huawei.agconnect.auth.AGConnectAuthCredential) this.getHInstance()).getProvider());",
    "org.xms.f.auth.PlayGamesAuthCredential.isInstance(java.lang.Object)boolean":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.PlayGamesAuthProvider.getCredential(java.lang.String)org.xms.f.auth.AuthCredential":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.google.firebase.auth.PlayGamesAuthProvider.getCredential(param0)\");\n            com.huawei.agconnect.auth.AGConnectAuthCredential hReturn = new com.huawei.agconnect.auth.HWGameAuthProvider.Builder().build();\n            return ((hReturn) == null ? null : (new org.xms.f.auth.AuthCredential.XImpl(new org.xms.g.utils.XBox(null, hReturn))));",
    "org.xms.f.auth.PlayGamesAuthProvider.getPLAY_GAMES_SIGN_IN_METHOD()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.agconnect.auth.AGConnectAuthCredential.HWGame_Provider\");\n            return String.valueOf(com.huawei.agconnect.auth.AGConnectAuthCredential.HWGame_Provider);",
    "org.xms.f.auth.PlayGamesAuthProvider.getPROVIDER_ID()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.agconnect.auth.AGConnectAuthCredential.HWGame_Provider\");\n            return String.valueOf(com.huawei.agconnect.auth.AGConnectAuthCredential.HWGame_Provider);",
    "org.xms.f.auth.PlayGamesAuthProvider.isInstance(java.lang.Object)boolean":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.SignInMethodQueryResult.XImpl.getSignInMethods()java.util.List<java.lang.String>":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.SignInMethodQueryResult.XImpl.getSignInMethods()\");\n                return java.util.Collections.singletonList(\"\");",
    "org.xms.f.auth.SignInMethodQueryResult.getHInstanceSignInMethodQueryResult()java.lang.Object":"default java.lang.Object getHInstanceSignInMethodQueryResult() {\n        if (this instanceof org.xms.g.utils.XGettable) {\n            return ((java.lang.Object) ((org.xms.g.utils.XGettable) this).getHInstance());\n        }\n        return new java.lang.Object();\n    }",
    "org.xms.f.auth.SignInMethodQueryResult.isInstance(java.lang.Object)boolean":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.TwitterAuthCredential.dynamicCast(java.lang.Object)org.xms.f.auth.TwitterAuthCredential":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.TwitterAuthCredential.getProvider()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.TwitterAuthCredential.getProvider()\");\n            return String.valueOf(((com.huawei.agconnect.auth.AGConnectAuthCredential) this.getHInstance()).getProvider());",
    "org.xms.f.auth.TwitterAuthCredential.isInstance(java.lang.Object)boolean":"throw new java.lang.RuntimeException(\"AppGallery-connect does not support this API.\");",
    "org.xms.f.auth.TwitterAuthProvider.getPROVIDER_ID()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.f.auth.TwitterAuthProvider.getPROVIDER_ID()\");\n            return TWITTER_PROVIDER;",
    "org.xms.f.auth.TwitterAuthProvider.getTWITTER_SIGN_IN_METHOD()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.agconnect.auth.AGConnectAuthCredential.Twitter_Provider\");\n            return String.valueOf(com.huawei.agconnect.auth.AGConnectAuthCredential.Twitter_Provider);",
    "org.xms.f.auth.UserProfileChangeRequest.Builder.setPhotoUri(android.net.Uri)org.xms.f.auth.UserProfileChangeRequest.Builder":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"((com.huawei.agconnect.auth.ProfileRequest.Builder) this.getHInstance()).setPhotoUrl(param0.toString())\");\n                com.huawei.agconnect.auth.ProfileRequest.Builder hReturn = ((com.huawei.agconnect.auth.ProfileRequest.Builder) this.getHInstance()).setPhotoUrl(param0.toString());\n                return ((hReturn) == null ? null : (new org.xms.f.auth.UserProfileChangeRequest.Builder(new org.xms.g.utils.XBox(null, hReturn))));",
    "org.xms.f.auth.UserProfileChangeRequest.getPhotoUri()android.net.Uri":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"Uri.parse(((com.huawei.agconnect.auth.ProfileRequest) this.getHInstance()).getPhotoUrl())\");\n            return android.net.Uri.parse(((com.huawei.agconnect.auth.ProfileRequest) this.getHInstance()).getPhotoUrl());"
}