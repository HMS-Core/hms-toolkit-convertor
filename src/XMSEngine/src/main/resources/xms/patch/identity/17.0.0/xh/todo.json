{
    "USER_CUSTOM_CODE_FOR_METHOD_HEAD_org.xms.g.identity.intents.AddressConstants.ErrorCodes.XImpl.XImpl(org.xms.g.utils.XBox)":"public XImpl(org.xms.g.utils.XBox param0) {",
    "USER_CUSTOM_CODE_FOR_METHOD_HEAD_org.xms.g.identity.intents.AddressConstants.ResultCodes.XImpl.XImpl(org.xms.g.utils.XBox)":"public XImpl(org.xms.g.utils.XBox param0) {",
    "USER_CUSTOM_CODE_FOR_METHOD_HEAD_org.xms.g.identity.intents.AddressConstants.Themes.XImpl.XImpl(org.xms.g.utils.XBox)":"public XImpl(org.xms.g.utils.XBox param0) {",
    "USER_CUSTOM_CODE_IN_CLASS_BODY_org.xms.g.identity.intents.Address":"private static Activity getCurrentActivity() {\n        try {\n            Class activityThreadClass = Class.forName(\"android.app.ActivityThread\");\n            Object activityThread = activityThreadClass.getMethod(\"currentActivityThread\").invoke(\n                    null);\n            Field activitiesField = activityThreadClass.getDeclaredField(\"mActivities\");\n            activitiesField.setAccessible(true);\n            Map activities = (Map) activitiesField.get(activityThread);\n            for (Object activityRecord : activities.values()) {\n                Class activityRecordClass = activityRecord.getClass();\n                Field pausedField = activityRecordClass.getDeclaredField(\"paused\");\n                pausedField.setAccessible(true);\n                if (!pausedField.getBoolean(activityRecord)) {\n                    Field activityField = activityRecordClass.getDeclaredField(\"activity\");\n                    activityField.setAccessible(true);\n                    Activity activity = (Activity) activityField.get(activityRecord);\n                    return activity;\n                }\n            }\n        } catch (ClassNotFoundException e) {\n            org.xms.g.utils.XmsLog.e(\"Address\", \"\", e);\n        } catch (InvocationTargetException e) {\n            org.xms.g.utils.XmsLog.e(\"Address\", \"\", e);\n        } catch (NoSuchMethodException e) {\n            org.xms.g.utils.XmsLog.e(\"Address\", \"\", e);\n        } catch (NoSuchFieldException e) {\n            org.xms.g.utils.XmsLog.e(\"Address\", \"\", e);\n        } catch (IllegalAccessException e) {\n            org.xms.g.utils.XmsLog.e(\"Address\", \"\", e);\n        }\n        return null;\n    }",
    "USER_CUSTOM_CODE_IN_CLASS_BODY_org.xms.g.identity.intents.AddressConstants.ErrorCodes":"int hms_ERROR_CODE_NO_APPLICABLE_ADDRESSES = 555;",
    "USER_CUSTOM_CODE_IN_CLASS_BODY_org.xms.g.identity.intents.AddressConstants.ResultCodes":"int hms_RESULT_ERROR = 1;",
    "USER_CUSTOM_CODE_IN_CLASS_BODY_org.xms.g.identity.intents.AddressConstants.Themes":"int hms_THEME_DARK = 0;\n        int hms_THEME_HOLO_DARK = 0;\n        int hms_THEME_HOLO_LIGHT = 1;\n        int hms_THEME_LIGHT = 1;",
    "USER_CUSTOM_CODE_OUT_CLASS_BODY_org.xms.g.identity.intents.Address":"import java.lang.reflect.Field;\nimport java.lang.reflect.InvocationTargetException;\nimport java.util.Map;\nimport android.app.Activity;\nimport android.content.Context;\nimport android.content.IntentSender;\nimport org.xms.g.common.api.Api;\nimport com.huawei.hmf.tasks.OnFailureListener;\nimport com.huawei.hmf.tasks.OnSuccessListener;\nimport com.huawei.hmf.tasks.Task;\nimport com.huawei.hms.api.HuaweiApiClient;\nimport com.huawei.hms.identity.entity.GetUserAddressResult;\nimport com.huawei.hms.support.api.client.Status;",
    "org.xms.g.identity.intents.Address.Address()":"throw new RuntimeException(\"HMS does not support this API.\");",
    "org.xms.g.identity.intents.Address.Address(org.xms.g.utils.XBox)":"public Address(org.xms.g.utils.XBox param0) {\n        super(param0);\n    }",
    "org.xms.g.identity.intents.Address.AddressOptions.AddressOptions()":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.hms.identity.AddressOptions()\");\n            this.setZInstance(new com.huawei.hms.api.Api.ApiOptions.Optional() {\n                @Override\n                public int hashCode() {\n                    return super.hashCode();\n                }\n                @Override\n                public boolean equals(Object obj) {\n                    return super.equals(obj);\n                }\n                @Override\n                protected Object clone() throws CloneNotSupportedException {\n                    return super.clone();\n                }\n                @Override\n                public String toString() {\n                    return super.toString();\n                }\n                @Override\n                protected void finalize() throws Throwable {\n                    super.finalize();\n                }\n            });",
    "org.xms.g.identity.intents.Address.AddressOptions.AddressOptions(int)":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.hms.identity.AddressOptions()\");\n            this.setZInstance(new com.huawei.hms.api.Api.ApiOptions.Optional() {\n                @Override\n                public int hashCode() {\n                    return super.hashCode();\n                }\n                @Override\n                public boolean equals(Object obj) {\n                    return super.equals(obj);\n                }\n                @Override\n                protected Object clone() throws CloneNotSupportedException {\n                    return super.clone();\n                }\n                @Override\n                public String toString() {\n                    return super.toString();\n                }\n                @Override\n                protected void finalize() throws Throwable {\n                    super.finalize();\n                }\n            });",
    "org.xms.g.identity.intents.Address.AddressOptions.AddressOptions(org.xms.g.utils.XBox)":"public AddressOptions(org.xms.g.utils.XBox param0) {\n            super(param0);\n        }",
    "org.xms.g.identity.intents.Address.AddressOptions.dynamicCast(java.lang.Object)org.xms.g.identity.intents.Address.AddressOptions":"java.lang.Object hReturn = ((java.lang.Object) ((org.xms.g.utils.XGettable) param0).getZInstance());\n                return new org.xms.g.identity.intents.Address.AddressOptions(new org.xms.g.utils.XBox(hReturn));",
    "org.xms.g.identity.intents.Address.AddressOptions.getTheme()int":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.hms.identity.getTheme()\");\n            return 0;",
    "org.xms.g.identity.intents.Address.AddressOptions.isInstance(java.lang.Object)boolean":"throw new RuntimeException(\"HMS does not support this API.\");",
    "org.xms.g.identity.intents.Address.getAPI()org.xms.g.common.api.Api":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.hms.identity.Address.API\");\n        return new Api(new org.xms.g.utils.XBox(new com.huawei.hms.api.Api(\"\")));",
    "org.xms.g.identity.intents.Address.isInstance(java.lang.Object)boolean":"throw new RuntimeException(\"HMS does not support this API.\");",
    "org.xms.g.identity.intents.Address.requestUserAddress(org.xms.g.common.api.ExtensionApiClientorg.xms.g.identity.intents.UserAddressRequestint)void":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.hms.identity.Address.getAddressClient()\");\n        final Context context = ((HuaweiApiClient) param0.getZInstance()).getContext();\n        Task<GetUserAddressResult> task = com.huawei.hms.identity.Address.getAddressClient(context).getUserAddress((com.huawei.hms.identity.entity.UserAddressRequest) param1.getZInstance());\n        task.addOnSuccessListener(new OnSuccessListener<GetUserAddressResult>() {\n            @Override\n            public void onSuccess(GetUserAddressResult result) {\n                Status status = result.getStatus();\n                if (status.hasResolution()) {\n                    try {\n                        status.startResolutionForResult(getCurrentActivity(), param2);\n                    } catch (IntentSender.SendIntentException e) {\n                        org.xms.g.utils.XmsLog.w(\"Address\", \"exception:\", e);\n                    }\n                } else {\n                    org.xms.g.utils.XmsLog.w(\"Address\", \"The status have not resolution.\");\n                }\n            }\n        }).addOnFailureListener(new OnFailureListener() {\n            @Override\n            public void onFailure(Exception e) {\n                org.xms.g.utils.XmsLog.i(\"Address\", \"Failed to get user address\", e);\n            }\n        });",
    "org.xms.g.identity.intents.AddressConstants.ErrorCodes.dynamicCast(java.lang.Object)org.xms.g.identity.intents.AddressConstants.ErrorCodes":"throw new RuntimeException(\"HMS does not support this API.\");",
    "org.xms.g.identity.intents.AddressConstants.ErrorCodes.getERROR_CODE_NO_APPLICABLE_ADDRESSES()int":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.hms.identity.ERROR_CODE_NO_APPLICABLE_ADDRESSES\");\n            return hms_ERROR_CODE_NO_APPLICABLE_ADDRESSES;",
    "org.xms.g.identity.intents.AddressConstants.ErrorCodes.getZInstanceErrorCodes()java.lang.Object":"default java.lang.Object getZInstanceErrorCodes() {\n            if (this instanceof org.xms.g.utils.XGettable) {\n                return ((java.lang.Object) ((org.xms.g.utils.XGettable) this).getZInstance());\n            }\n            return new java.lang.Object();\n        }",
    "org.xms.g.identity.intents.AddressConstants.ErrorCodes.isInstance(java.lang.Object)boolean":"throw new RuntimeException(\"HMS does not support this API.\");",
    "org.xms.g.identity.intents.AddressConstants.ResultCodes.dynamicCast(java.lang.Object)org.xms.g.identity.intents.AddressConstants.ResultCodes":"throw new RuntimeException(\"HMS does not support this API.\");",
    "org.xms.g.identity.intents.AddressConstants.ResultCodes.getRESULT_ERROR()int":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.hms.identity.RESULT_ERROR\");\n            return hms_RESULT_ERROR;",
    "org.xms.g.identity.intents.AddressConstants.ResultCodes.getZInstanceResultCodes()java.lang.Object":"default java.lang.Object getZInstanceResultCodes() {\n            if (this instanceof org.xms.g.utils.XGettable) {\n                return ((java.lang.Object) ((org.xms.g.utils.XGettable) this).getZInstance());\n            }\n            return new java.lang.Object();\n        }",
    "org.xms.g.identity.intents.AddressConstants.ResultCodes.isInstance(java.lang.Object)boolean":"throw new RuntimeException(\"HMS does not support this API.\");",
    "org.xms.g.identity.intents.AddressConstants.Themes.dynamicCast(java.lang.Object)org.xms.g.identity.intents.AddressConstants.Themes":"throw new RuntimeException(\"HMS does not support this API.\");",
    "org.xms.g.identity.intents.AddressConstants.Themes.getTHEME_DARK()int":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.hms.identity.THEME_DARK\");\n            return hms_THEME_DARK;",
    "org.xms.g.identity.intents.AddressConstants.Themes.getTHEME_HOLO_DARK()int":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.hms.identity.THEME_HOLO_DARK\");\n            return hms_THEME_HOLO_DARK;",
    "org.xms.g.identity.intents.AddressConstants.Themes.getTHEME_HOLO_LIGHT()int":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.hms.identity.THEME_HOLO_LIGHT\");\n            return hms_THEME_HOLO_LIGHT;",
    "org.xms.g.identity.intents.AddressConstants.Themes.getTHEME_LIGHT()int":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.hms.identity.THEME_LIGHT\");\n            return hms_THEME_LIGHT;",
    "org.xms.g.identity.intents.AddressConstants.Themes.getZInstanceThemes()java.lang.Object":"default java.lang.Object getZInstanceThemes() {\n            if (this instanceof org.xms.g.utils.XGettable) {\n                return ((java.lang.Object) ((org.xms.g.utils.XGettable) this).getZInstance());\n            }\n            return new java.lang.Object();\n        }",
    "org.xms.g.identity.intents.AddressConstants.Themes.isInstance(java.lang.Object)boolean":"throw new RuntimeException(\"HMS does not support this API.\");",
    "org.xms.g.identity.intents.UserAddressRequest.Builder.Builder(org.xms.g.utils.XBox)":"public Builder(org.xms.g.utils.XBox param0) {\n            super(param0);\n        }",
    "org.xms.g.identity.intents.UserAddressRequest.Builder.addAllowedCountrySpecification(org.xms.g.identity.intents.model.CountrySpecification)org.xms.g.identity.intents.UserAddressRequest.Builder":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.g.identity.intents.UserAddressRequest.Builder(new org.xms.g.utils.XBox(null))\");\n            return new org.xms.g.identity.intents.UserAddressRequest.Builder(new org.xms.g.utils.XBox(null));",
    "org.xms.g.identity.intents.UserAddressRequest.Builder.addAllowedCountrySpecifications(java.util.Collection<org.xms.g.identity.intents.model.CountrySpecification>)org.xms.g.identity.intents.UserAddressRequest.Builder":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.g.identity.intents.UserAddressRequest.Builder(new org.xms.g.utils.XBox(null))\");\n            return new org.xms.g.identity.intents.UserAddressRequest.Builder(new org.xms.g.utils.XBox(null));",
    "org.xms.g.identity.intents.UserAddressRequest.Builder.build()org.xms.g.identity.intents.UserAddressRequest":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.g.identity.intents.UserAddressRequest(new org.xms.g.utils.XBox(new com.huawei.hms.identity.entity.UserAddressRequest()))\");\n            return new org.xms.g.identity.intents.UserAddressRequest(new org.xms.g.utils.XBox(new com.huawei.hms.identity.entity.UserAddressRequest()));",
    "org.xms.g.identity.intents.UserAddressRequest.Builder.isInstance(java.lang.Object)boolean":"throw new RuntimeException(\"HMS does not support this API.\");",
    "org.xms.g.identity.intents.UserAddressRequest.UserAddressRequest(org.xms.g.utils.XBox)":"public UserAddressRequest(org.xms.g.utils.XBox param0) {\n        super(param0);\n    }",
    "org.xms.g.identity.intents.UserAddressRequest.describeContents()int":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.g.identity.intents.UserAddressRequest.describeContents\");\n        return 0;",
    "org.xms.g.identity.intents.UserAddressRequest.isInstance(java.lang.Object)boolean":"throw new RuntimeException(\"HMS does not support this API.\");",
    "org.xms.g.identity.intents.UserAddressRequest.newBuilder()org.xms.g.identity.intents.UserAddressRequest.Builder":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"org.xms.g.identity.intents.UserAddressRequest.newBuilder()\");\n        return new org.xms.g.identity.intents.UserAddressRequest.Builder(new org.xms.g.utils.XBox(null));",
    "org.xms.g.identity.intents.UserAddressRequest.writeToParcel(android.os.Parcelint)void":"throw new RuntimeException(\"HMS does not support this writeToParcel(android.os.Parcel,int) method\");",
    "org.xms.g.identity.intents.model.CountrySpecification.CountrySpecification(java.lang.String)":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.hms.identity.CountrySpecification\");\n        this.setZInstance(null);",
    "org.xms.g.identity.intents.model.CountrySpecification.CountrySpecification(org.xms.g.utils.XBox)":"public CountrySpecification(org.xms.g.utils.XBox param0) {\n        super(param0);\n        wrapper = true;\n    }",
    "org.xms.g.identity.intents.model.CountrySpecification.getCountryCode()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.hms.identity.CountrySpecification.getCountryCode\");\n        return \"\";",
    "org.xms.g.identity.intents.model.CountrySpecification.isInstance(java.lang.Object)boolean":"throw new RuntimeException(\"HMS does not support this API.\");",
    "org.xms.g.identity.intents.model.CountrySpecification.writeToParcel(android.os.Parcelint)void":"throw new RuntimeException(\"HMS does not support this writeToParcel(android.os.Parcel,int) method\");",
    "org.xms.g.identity.intents.model.UserAddress.getSortingCode()java.lang.String":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.hms.identity.getSortingCode()\");\n        return \"\";",
    "org.xms.g.identity.intents.model.UserAddress.isPostBox()boolean":"org.xms.g.utils.XmsLog.d(\"XMSRouter\", \"com.huawei.hms.identity.isPostBox()\");\n        return false;"
}