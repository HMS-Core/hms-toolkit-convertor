{
  "com.google.android.gms.wallet.IsReadyToPayRequest": {
    "classDes": "A Parcelable request that can optionally be passed to isReadyToPay(IsReadyToPayRequest) to specify additional filtering criteria for determining if a user is considered ready to pay.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/IsReadyToPayRequest",
    "methods": {
      "com.google.android.gms.wallet.IsReadyToPayRequest.fromJson(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/IsReadyToPayRequest#fromJson(java.lang.String)",
        "methodDes": "Constructs IsReadyToPayRequest from a JSON object serialized as a string. To convert back to a JSON object serialized as string use toJson(). Note that you shouldn\u0027t rely on the values returned by getters in IsReadyToPayRequest as they will not be populated with the data set in the given JSON. For the expected format of this JSON, please see IsReadyToPayRequest object reference documentation.",
        "params": {
          "isReadyToPayRequestJson": "a JSON object"
        },
        "returns": "com.google.android.gms.wallet.IsReadyToPayRequest:the IsReadyToPayRequest",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.IsReadyToPayRequest.getAllowedCardNetworks()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/IsReadyToPayRequest#getAllowedCardNetworks()",
        "methodDes": "This method is deprecated. Use the JSON request format instead, see fromJson(String).",
        "params": {},
        "returns": "java.util.ArrayList\u003cjava.lang.Integer\u003e:the WalletConstants.CardNetworks that will be used to filter the instruments deemed acceptable by isReadyToPay(IsReadyToPayRequest). If not explicitly set, the default supported networks will be CARD_NETWORK_AMEX, CARD_NETWORK_DISCOVER, CARD_NETWORK_MASTERCARD, and CARD_NETWORK_VISA",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.IsReadyToPayRequest.getAllowedPaymentMethods()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/IsReadyToPayRequest#getAllowedPaymentMethods()",
        "methodDes": "This method is deprecated. Use the JSON request format instead, see fromJson(String).",
        "params": {},
        "returns": "java.util.ArrayList\u003cjava.lang.Integer\u003e:the supported payment credential types defined in WalletConstants.PaymentMethod, or null if no restrictions were specified",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.IsReadyToPayRequest.isExistingPaymentMethodRequired()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/IsReadyToPayRequest#isExistingPaymentMethodRequired()",
        "methodDes": "This method is deprecated. Use the JSON request format instead, see fromJson(String).",
        "params": {},
        "returns": "boolean:whether or not IsReadyToPay will be determined by the user having an existing payment method that matches the other criteria specified in the IsReadyToPayRequest",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.IsReadyToPayRequest.newBuilder()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/IsReadyToPayRequest#newBuilder()",
        "methodDes": "This method is deprecated. Use the JSON request format instead, see fromJson(String).",
        "params": {},
        "returns": "com.google.android.gms.wallet.IsReadyToPayRequest.Builder:a builder for constructing the IsReadyToPayRequest object",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.IsReadyToPayRequest.toJson()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/IsReadyToPayRequest#toJson()",
        "methodDes": "Returns IsReadyToPayRequest in JSON format. Note that this will be null if this request was not constructed using fromJson(String). For the expected format of this JSON, please see IsReadyToPayRequest object reference documentation.",
        "params": {},
        "returns": "java.lang.String:the String",
        "Exceptions": {}
      },
	  "com.google.android.gms.wallet.IsReadyToPayRequest.writeToParcel(android.os.Parcel,int)": {
      "methodUrl": "https://developer.android.com/reference/android/os/Parcelable.html#writeToParcel(android.os.Parcel,%20int)",
      "methodDes": "Flatten this object in to a Parcel.",
      "params": {
        "dest": "The Parcel in which the object should be written",
        "flags": "Additional flags about how the object should be written"
      },
      "returns": "void",
      "Exceptions": {}
      }
    },
    "fields": {
      "com.google.android.gms.wallet.IsReadyToPayRequest.CREATOR": {
        "des": "a public CREATOR field that generates instances of your Parcelable class from a Parcel.",
        "value": "",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/IsReadyToPayRequest"
      }
    }
  },
  "com.google.android.gms.wallet.wobs.UriData": {
    "classDes": "Parcelable representing an uri.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/UriData",
    "methods": {
      "com.google.android.gms.wallet.wobs.UriData.UriData(java.lang.String,java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/UriData#UriData(java.lang.String, java.lang.String)",
        "methodDes": "Constructs uri with given uri value and description.",
        "params": {
          "uri": "A destination for a web page or image",
          "description": "The URI\u0027s title appearing in the Google Wallet app as text. Recommended maximum is 20 characters to ensure full string is displayed on smaller screens. Note that in some contexts this text is not used, such as when description is part of an image"
        },
        "returns": "",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.UriData.getDescription()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/UriData#getDescription()",
        "methodDes": "the uri description.",
        "params": {},
        "returns": "java.lang.String:the uri description",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.UriData.getUri()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/UriData#getUri()",
        "methodDes": "Gets the uri.",
        "params": {},
        "returns": "java.lang.String:the uri",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.UriData.writeToParcel(android.os.Parcel,int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/UriData#writeToParcel(android.os.Parcel, int)",
        "methodDes": "Flatten this object in to a Parcel.",
        "params": {
          "dest": "The Parcel in which the object should be written",
          "flags": "Additional flags about how the object should be written"
        },
        "returns": "void",
        "Exceptions": {}
      }
    },
    "fields": {
      "com.google.android.gms.wallet.wobs.UriData.CREATOR": {
        "des": "a public CREATOR field that generates instances of your Parcelable class from a Parcel.",
        "value": "",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/UriData#CREATOR"
      }
    }
  },
  "com.google.android.gms.wallet.wobs.LabelValueRow.Builder": {
    "classDes": "Builder to create an LabelValueRow.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LabelValueRow.Builder",
    "methods": {
      "com.google.android.gms.wallet.wobs.LabelValueRow.Builder.addColumn(com.google.android.gms.wallet.wobs.LabelValue)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LabelValueRow.Builder#addColumn(com.google.android.gms.wallet.wobs.LabelValue)",
        "methodDes": "Adds the specified column to this builder instance.",
        "params": {
          "column": "The column to add"
        },
        "returns": "com.google.android.gms.wallet.wobs.LabelValueRow.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LabelValueRow.Builder.addColumns(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.LabelValue\u003e)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LabelValueRow.Builder#addColumns(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.LabelValue\u003e)",
        "methodDes": "Adds the specified columns to this builder instance.",
        "params": {
          "columns": "The columns to add"
        },
        "returns": "com.google.android.gms.wallet.wobs.LabelValueRow.Builder:A reference to the invoking instance",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LabelValueRow.Builder.build()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LabelValueRow.Builder#build()",
        "methodDes": "Builder to create an LabelValueRow.",
        "params": {},
        "returns": "com.google.android.gms.wallet.wobs.LabelValueRow:the LabelValueRow",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LabelValueRow.Builder.setHexBackgroundColor(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LabelValueRow.Builder#setHexBackgroundColor(java.lang.String)",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {
          "color": "the background color"
        },
        "returns": "com.google.android.gms.wallet.wobs.LabelValueRow.Builder:A reference to the invoking instance",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LabelValueRow.Builder.setHexFontColor(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LabelValueRow.Builder#setHexFontColor(java.lang.String)",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {
          "color": "the color for the font"
        },
        "returns": "com.google.android.gms.wallet.wobs.LabelValueRow.Builder:A reference to the invoking instance",
        "Exceptions": {}
      }
    },
    "fields": {}
  },
  "com.google.android.gms.wallet.PaymentMethodToken": {
    "classDes": "Parcelable representing payment method token.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentMethodToken",
    "methods": {
      "com.google.android.gms.wallet.PaymentMethodToken.getPaymentMethodTokenizationType()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentMethodToken#getPaymentMethodTokenizationType()",
        "methodDes": "Gets payment method token nization type.",
        "params": {},
        "returns": "int:payment method tokenization type used to create this token. See WalletConstants.PaymentMethodTokenizationType for a list of supported tokenization types",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentMethodToken.getToken()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentMethodToken#getToken()",
        "methodDes": "Gets token.",
        "params": {},
        "returns": "java.lang.String:token for the selected payment method",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentMethodToken.writeToParcel(android.os.Parcel,int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentMethodToken#writeToParcel(android.os.Parcel, int)",
        "methodDes": "Flatten this object in to a Parcel.",
        "params": {
          "out": "The Parcel in which the object should be written",
          "flags": "Additional flags about how the object should be written"
        },
        "returns": "void",
        "Exceptions": {}
      }
    },
    "fields": {
      "com.google.android.gms.wallet.PaymentMethodToken.CREATOR": {
        "des": "a public CREATOR field that generates instances of your Parcelable class from a Parcel.",
        "value": "",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentMethodToken#CREATOR"
      }
    }
  },
  "com.google.android.gms.wallet.wobs.WalletObjectMessage.Builder": {
    "classDes": "Builder to create a WalletObjectMessage.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/WalletObjectMessage.Builder",
    "methods": {
      "com.google.android.gms.wallet.wobs.WalletObjectMessage.Builder.build()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/WalletObjectMessage.Builder#build()",
        "methodDes": "Builder to create a WalletObjectMessage.",
        "params": {},
        "returns": "com.google.android.gms.wallet.wobs.WalletObjectMessage:the WalletObjectMessage",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.WalletObjectMessage.Builder.setActionUri(com.google.android.gms.wallet.wobs.UriData)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/WalletObjectMessage.Builder#setActionUri(com.google.android.gms.wallet.wobs.UriData)",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {
          "uri": "the uri"
        },
        "returns": "com.google.android.gms.wallet.wobs.WalletObjectMessage.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.WalletObjectMessage.Builder.setBody(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/WalletObjectMessage.Builder#setBody(java.lang.String)",
        "methodDes": "Sets the message body. The maximum length is 200 characters for an expanded template with no image or 150 characters if you specify an image.",
        "params": {
          "body": "the message body"
        },
        "returns": "com.google.android.gms.wallet.wobs.WalletObjectMessage.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.WalletObjectMessage.Builder.setDisplayInterval(com.google.android.gms.wallet.wobs.TimeInterval)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/WalletObjectMessage.Builder#setDisplayInterval(com.google.android.gms.wallet.wobs.TimeInterval)",
        "methodDes": "Sets the period of time that the message will be displayed to users. TimeInterval can have both start timestamp and end timestamp defined for each message. A message is displayed immediately after a Wallet Object is inserted unless a startTimeTimestamp is set. The message will appear in a list of messages indefinitely if endTimestamp is not provided.",
        "params": {
          "interval": "the period of time"
        },
        "returns": "com.google.android.gms.wallet.wobs.WalletObjectMessage.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.WalletObjectMessage.Builder.setHeader(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/WalletObjectMessage.Builder#setHeader(java.lang.String)",
        "methodDes": "Sets the message header. The maximum length is 35 characters for an expanded template with no image or 25 characters if you specify an image.",
        "params": {
          "interval": "the period of time"
        },
        "returns": "com.google.android.gms.wallet.wobs.WalletObjectMessage.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.WalletObjectMessage.Builder.setImageUri(com.google.android.gms.wallet.wobs.UriData)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/WalletObjectMessage.Builder#setImageUri(com.google.android.gms.wallet.wobs.UriData)",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {
          "uri": "the uri of the image"
        },
        "returns": "com.google.android.gms.wallet.wobs.WalletObjectMessage.Builder:the Builder",
        "Exceptions": {}
      }
    },
    "fields": {}
  },
  "com.google.android.gms.wallet.OfferWalletObject": {
    "classDes": "Parcelable representing an offer wallet object. This could represent an offer from the merchant such as a coupon, etc. It has a buyerId that identifies the user to the merchant. If the offer is associated to a loyalty program, then this could be an identifier for that program. The offer also has a redemptionCode that will typically be used in the transaction, like a discount code or similar that the user would otherwise have to enter manually.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject",
    "methods": {
      "com.google.android.gms.wallet.OfferWalletObject.getBarcodeAlternateText()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject#getBarcodeAlternateText()",
        "methodDes": "Gets the barcode alternate text by this object.",
        "params": {},
        "returns": "java.lang.String:Human-readable text to display to the user in addition to the encoded barcode value (ex: \"3492013\")",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.getBarcodeLabel()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject#getBarcodeLabel()",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {},
        "returns": "java.lang.String:Barcode label",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.getBarcodeType()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject#getBarcodeType()",
        "methodDes": "Gets the barcode alternate text by this object.",
        "params": {},
        "returns": "java.lang.String:Barcode type. Possible values include \"codabar\", \"qrCode\", \"textOnly\", etc",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.getBarcodeValue()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject#getBarcodeValue()",
        "methodDes": "Gets the encoded barcode value.",
        "params": {},
        "returns": "java.lang.String:Encoded barcode value",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.getClassId()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject#getClassId()",
        "methodDes": "Return offer Class Id.",
        "params": {},
        "returns": "java.lang.String:Offer Class Id",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.getId()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject#getId()",
        "methodDes": "Return The unique identifier for this Wallet Object.",
        "params": {},
        "returns": "java.lang.String:The unique identifier for this Wallet Object",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.getImageModuleDataMainImageUris()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject#getImageModuleDataMainImageUris()",
        "methodDes": "Return Image module main image uris.",
        "params": {},
        "returns": "java.util.ArrayList\u003ccom.google.android.gms.wallet.wobs.UriData\u003e:Image module main image uris",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.getInfoModuleDataHexBackgroundColor()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject#getInfoModuleDataHexBackgroundColor()",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {},
        "returns": "java.lang.String:Info module\u0027s hex background color",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.getInfoModuleDataHexFontColor()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject#getInfoModuleDataHexFontColor()",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {},
        "returns": "java.lang.String:Info module hex font color",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.getInfoModuleDataLabelValueRows()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject#getInfoModuleDataLabelValueRows()",
        "methodDes": "Gets a collection of info module data label value rows.",
        "params": {},
        "returns": "java.util.ArrayList\u003ccom.google.android.gms.wallet.wobs.LabelValueRow\u003e:Info module label value rows",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.getInfoModuleDataShowLastUpdateTime()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject#getInfoModuleDataShowLastUpdateTime()",
        "methodDes": "Gets the flag which determines whether to display the last update time of the Wallet Object.",
        "params": {},
        "returns": "boolean:Info module show last update time flag",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.getIssuerName()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject#getIssuerName()",
        "methodDes": "Return Offer issuer name.",
        "params": {},
        "returns": "java.lang.String:Offer issuer name",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.getLinksModuleDataUris()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject#getLinksModuleDataUris()",
        "methodDes": "Gets a collection of links module data.",
        "params": {},
        "returns": "java.util.ArrayList\u003ccom.google.android.gms.wallet.wobs.UriData\u003e:Links module uris",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.getLocations()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject#getLocations()",
        "methodDes": "Rreturn Locations where the object is considered valid.",
        "params": {},
        "returns": "java.util.ArrayList\u003ccom.google.android.gms.maps.model.LatLng\u003e:Locations where the object is considered valid",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.getMessages()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject#getMessages()",
        "methodDes": "Gets a collection of messages to be associated with this object.",
        "params": {},
        "returns": "java.util.ArrayList\u003ccom.google.android.gms.wallet.wobs.WalletObjectMessage\u003e:Offer Object messages",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.getRedemptionCode()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject#getRedemptionCode()",
        "methodDes": "Gets the redemption code of the offer wallet object.",
        "params": {},
        "returns": "java.lang.String:The redemption code of the offer. This would be a coupon code or similar that user could enter to gain a discount, reward, etc",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.getState()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject#getState()",
        "methodDes": "Gets offer wallet Object state.",
        "params": {},
        "returns": "int:Offer Object state",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.getTextModulesData()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject#getTextModulesData()",
        "methodDes": "Gets a collection of text modules data.",
        "params": {},
        "returns": "java.util.ArrayList\u003ccom.google.android.gms.wallet.wobs.TextModuleData\u003e:Text modules",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.getTitle()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject#getTitle()",
        "methodDes": "Gets the title of the offer wallet object.",
        "params": {},
        "returns": "java.lang.String:The title of the offer",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.getValidTimeInterval()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject#getValidTimeInterval()",
        "methodDes": "Gets Time interval within which the object is considered valid.",
        "params": {},
        "returns": "com.google.android.gms.wallet.wobs.TimeInterval:Time interval within which the object is considered valid",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.getVersionCode()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject#getVersionCode()",
        "methodDes": "Gets versionCode.",
        "params": {},
        "returns": "int:the int",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.newBuilder()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject#newBuilder()",
        "methodDes": "Builder to create a OfferWalletObject.",
        "params": {},
        "returns": "com.google.android.gms.wallet.OfferWalletObject.Builder:a new OfferWalletObject.Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.writeToParcel(android.os.Parcel,int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject#writeToParcel(android.os.Parcel, int)",
        "methodDes": "Flatten this object in to a Parcel.",
        "params": {
          "dest": "The Parcel in which the object should be written",
          "flags": "Additional flags about how the object should be written"
        },
        "returns": "void",
        "Exceptions": {}
      }
    },
    "fields": {
      "com.google.android.gms.wallet.OfferWalletObject.CREATOR": {
        "des": "a public CREATOR field that generates instances of your Parcelable class from a Parcel.",
        "value": "",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject#CREATOR"
      }
    }
  },
  "com.google.android.gms.wallet.CardRequirements": {
    "classDes": "Card requirements for the returned payment card. Examples include which card networks are allowed (See WalletConstants.CardNetwork) and whether prepaid card is allowed.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CardRequirements",
    "methods": {
      "com.google.android.gms.wallet.CardRequirements.allowPrepaidCards()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CardRequirements#allowPrepaidCards()",
        "methodDes": "Whether a prepaid card may be used as the backing card for this transaction.",
        "params": {},
        "returns": "boolean:whether a prepaid card may be used as the backing card for this transaction",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.CardRequirements.getAllowedCardNetworks()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CardRequirements#getAllowedCardNetworks()",
        "methodDes": "Returns the types of WalletConstants.",
        "params": {},
        "returns": "java.util.ArrayList\u003cjava.lang.Integer\u003e:the types of WalletConstants.CardNetwork that are allowed for this purchase, or null if no restrictions were specified",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.CardRequirements.getBillingAddressFormat()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CardRequirements#getBillingAddressFormat()",
        "methodDes": "Returns The billing address format.",
        "params": {},
        "returns": "int:The billing address format. See WalletConstants.BillingAddressFormat for more info",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.CardRequirements.isBillingAddressRequired()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CardRequirements#isBillingAddressRequired()",
        "methodDes": "Whether a billing address is required to be returned.",
        "params": {},
        "returns": "boolean:whether a billing address is required to be returned",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.CardRequirements.newBuilder()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CardRequirements#newBuilder()",
        "methodDes": "Builder to create a CardRequirements.",
        "params": {},
        "returns": "com.google.android.gms.wallet.CardRequirements.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.CardRequirements.writeToParcel(android.os.Parcel,int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CardRequirements#writeToParcel(android.os.Parcel, int)",
        "methodDes": "Flatten this object in to a Parcel.",
        "params": {
          "out": "The Parcel in which the object should be written",
          "flags": "Additional flags about how the object should be written"
        },
        "returns": "void",
        "Exceptions": {}
      }
    },
    "fields": {
      "com.google.android.gms.wallet.CardRequirements.CREATOR": {
        "des": "A public CREATOR field that generates instances of your Parcelable class from a Parcel.",
        "value": "",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CardRequirements#CREATOR"
      }
    }
  },
  "com.google.android.gms.wallet.GiftCardWalletObject": {
    "classDes": "Parcelable representing a gift card wallet object.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject",
    "methods": {
      "com.google.android.gms.wallet.GiftCardWalletObject.getBalanceCurrencyCode()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#getBalanceCurrencyCode()",
        "methodDes": "Gets currency code for the current value of the gift card.",
        "params": {},
        "returns": "java.lang.String:The currency code for the balance",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.getBalanceMicros()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#getBalanceMicros()",
        "methodDes": "Gets the amount in the card balance, value represents micros.",
        "params": {},
        "returns": "long:Balance for this card",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.getBalanceUpdateTime()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#getBalanceUpdateTime()",
        "methodDes": "Gets a value indicating when was this card last updated, value represents milliseconds in UNIX epoch.",
        "params": {},
        "returns": "long:Timestamp when the card balance was last updated",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.getBarcodeAlternateText()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#getBarcodeAlternateText()",
        "methodDes": "Gets barcode alternate text.",
        "params": {},
        "returns": "java.lang.String:Human-readable text to display to the user in addition to the encoded barcode value (ex: \"3492013\")",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.getBarcodeLabel()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#getBarcodeLabel()",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {},
        "returns": "java.lang.String:Barcode label",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.getBarcodeType()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#getBarcodeType()",
        "methodDes": "Gets the type of the barcode.",
        "params": {},
        "returns": "java.lang.String:Barcode type. Possible values include \"codabar\", \"qrCode\", \"textOnly\", etc",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.getBarcodeValue()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#getBarcodeValue()",
        "methodDes": "Gets the value encoded in the barcode.",
        "params": {},
        "returns": "java.lang.String:Encoded barcode value",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.getCardIdentifier()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#getCardIdentifier()",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {},
        "returns": "java.lang.String:Identifier for the card",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.getCardNumber()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#getCardNumber()",
        "methodDes": "Gets the number identifying this card.",
        "params": {},
        "returns": "java.lang.String:Number identifiyng this card",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.getClassId()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#getClassId()",
        "methodDes": "Gets the id of the class associated with this object.",
        "params": {},
        "returns": "java.lang.String:Gift card Class Id",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.getEventNumber()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#getEventNumber()",
        "methodDes": "Gets the card\\u0027s event number, an optional field used by some gift cards.",
        "params": {},
        "returns": "java.lang.String:The card\u0027s event number, an optional field used by some gift cards",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.getId()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#getId()",
        "methodDes": "Gets gift card wallet object\\u0027s id.",
        "params": {},
        "returns": "java.lang.String:The unique identifier for this Wallet Object",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.getImageModuleDataMainImageUris()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#getImageModuleDataMainImageUris()",
        "methodDes": "Gets a collection of image module data image uris.",
        "params": {},
        "returns": "java.util.ArrayList\u003ccom.google.android.gms.wallet.wobs.UriData\u003e:Image module main image uris",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.getInfoModuleDataHexBackgroundColor()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#getInfoModuleDataHexBackgroundColor()",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {},
        "returns": "java.lang.String:Info module\u0027s hex background color",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.getInfoModuleDataHexFontColor()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#getInfoModuleDataHexFontColor()",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {},
        "returns": "java.lang.String:Info module hex font color",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.getInfoModuleDataLabelValueRows()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#getInfoModuleDataLabelValueRows()",
        "methodDes": "Gets a collection of info module data label value rows.",
        "params": {},
        "returns": "java.util.ArrayList\u003ccom.google.android.gms.wallet.wobs.LabelValueRow\u003e:Info module label value rows",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.getInfoModuleDataShowLastUpdateTime()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#getInfoModuleDataShowLastUpdateTime()",
        "methodDes": "Gets the flag which determines whether to display the last update time of the Wallet Object.",
        "params": {},
        "returns": "boolean:Info module show last update time flag",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.getIssuerName()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#getIssuerName()",
        "methodDes": "Gets the issuer name of this gift card object.",
        "params": {},
        "returns": "java.lang.String:Gift card issuer name",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.getLinksModuleDataUris()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#getLinksModuleDataUris()",
        "methodDes": "Gets a collection of links module data.",
        "params": {},
        "returns": "java.util.ArrayList\u003ccom.google.android.gms.wallet.wobs.UriData\u003e:Links module uris",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.getLocations()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#getLocations()",
        "methodDes": "Gets the collection of locations where the Wallet Object can be used.",
        "params": {},
        "returns": "java.util.ArrayList\u003ccom.google.android.gms.maps.model.LatLng\u003e:Locations where the object is considered valid",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.getMessages()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#getMessages()",
        "methodDes": "Gets a collection of messages to be associated with this object.",
        "params": {},
        "returns": "java.util.ArrayList\u003ccom.google.android.gms.wallet.wobs.WalletObjectMessage\u003e:Gift card Object messages",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.getPin()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#getPin()",
        "methodDes": "Gets the card PIN.",
        "params": {},
        "returns": "java.lang.String:PIN to access this card",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.getState()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#getState()",
        "methodDes": "Gets gift card object state.",
        "params": {},
        "returns": "int:Gift card Object state",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.getTextModulesData()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#getTextModulesData()",
        "methodDes": "Gets a collection of text modules data.",
        "params": {},
        "returns": "java.util.ArrayList\u003ccom.google.android.gms.wallet.wobs.TextModuleData\u003e:Text modules",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.getTitle()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#getTitle()",
        "methodDes": "Gets the gift card title.",
        "params": {},
        "returns": "java.lang.String:Title of the gift card",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.getValidTimeInterval()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#getValidTimeInterval()",
        "methodDes": "Gets the time period this object will be active and can be used.",
        "params": {},
        "returns": "com.google.android.gms.wallet.wobs.TimeInterval:Time interval within which the object is considered valid",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.newBuilder()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#newBuilder()",
        "methodDes": "Creates a helper instance whose implementation follows the builder pattern to create new objects of GiftCardWalletObject.",
        "params": {},
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:A new builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.writeToParcel(android.os.Parcel,int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#writeToParcel(android.os.Parcel, int)",
        "methodDes": "Flatten this object in to a Parcel.",
        "params": {
          "dest": "The Parcel in which the object should be written",
          "flags": "Additional flags about how the object should be written"
        },
        "returns": "void",
        "Exceptions": {}
      }
    },
    "fields": {
      "com.google.android.gms.wallet.GiftCardWalletObject.CREATOR": {
        "des": "A public CREATOR field that generates instances of your Parcelable class from a Parcel.",
        "value": "",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject#CREATOR"
      }
    }
  },
  "com.google.android.gms.wallet.PaymentDataRequest.Builder": {
    "classDes": "This class is deprecated. Use the JSON request format instead, see fromJson(String). Builder to create a PaymentDataRequest.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentDataRequest.Builder",
    "methods": {
      "com.google.android.gms.wallet.PaymentDataRequest.Builder.addAllowedPaymentMethod(int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentDataRequest.Builder#addAllowedPaymentMethod(int)",
        "methodDes": "Adds an allowed payment method. See WalletConstants.PaymentMethod for available options. Note that at least one allowed payment method must be explicitly set using either this method or addAllowedPaymentMethods(Collection).",
        "params": {
          "allowedPaymentMethod": "an allowed payment method"
        },
        "returns": "com.google.android.gms.wallet.PaymentDataRequest.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentDataRequest.Builder.addAllowedPaymentMethods(java.util.Collection\u003cjava.lang.Integer\u003e)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentDataRequest.Builder#addAllowedPaymentMethods(java.util.Collection\u003cjava.lang.Integer\u003e)",
        "methodDes": "Adds a collection of allowed payment methods. See WalletConstants.PaymentMethod for available options. Note that at least one allowed payment method must be explicitly set using either this method or addAllowedPaymentMethod(int).",
        "params": {
          "allowedPaymentMethods": "a collection of allowed payment methods"
        },
        "returns": "com.google.android.gms.wallet.PaymentDataRequest.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentDataRequest.Builder.build()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentDataRequest.Builder#build()",
        "methodDes": "Builder to create a PaymentDataRequest.",
        "params": {},
        "returns": "com.google.android.gms.wallet.PaymentDataRequest:the actual PaymentDataRequest created using the data passed to the Builder object",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentDataRequest.Builder.setCardRequirements(com.google.android.gms.wallet.CardRequirements)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentDataRequest.Builder#setCardRequirements(com.google.android.gms.wallet.CardRequirements)",
        "methodDes": "Sets the card requirements. This is a required field.",
        "params": {
          "cardRequirements": "the card requirements"
        },
        "returns": "com.google.android.gms.wallet.PaymentDataRequest.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentDataRequest.Builder.setEmailRequired(boolean)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentDataRequest.Builder#setEmailRequired(boolean)",
        "methodDes": "Sets whether buyer\u0027s email is required. If omitted, defaults to false.",
        "params": {
          "emailRequired": "whether buyer\u0027s email is required"
        },
        "returns": "com.google.android.gms.wallet.PaymentDataRequest.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentDataRequest.Builder.setPaymentMethodTokenizationParameters(com.google.android.gms.wallet.PaymentMethodTokenizationParameters)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentDataRequest.Builder#setPaymentMethodTokenizationParameters(com.google.android.gms.wallet.PaymentMethodTokenizationParameters)",
        "methodDes": "Sets payment method tokenization parameters which will be used to tokenize the payment method returned within getPaymentMethodToken(). This is an optional field. It should be set if the getPaymentMethodToken() is required. Otherwise, it can be left unset and the getPaymentMethodToken() won\u0027t be returned. When the getPaymentMethodToken() is not required, this field should be left unset to minimize latency. This will be the case for example if you only want to provide a way for the buyer to change their payment selection when the UI is skipped during the purchase flow (see setUiRequired(boolean)).",
        "params": {
          "paymentMethodTokenizationParameters": "payment method tokenization parameters"
        },
        "returns": "com.google.android.gms.wallet.PaymentDataRequest.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentDataRequest.Builder.setPhoneNumberRequired(boolean)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentDataRequest.Builder#setPhoneNumberRequired(boolean)",
        "methodDes": "Sets whether a phone number is additionally required from the buyer in both shipping and billing addresses (the phone number will only be returned if an address is required, otherwise this is a no-op). If omitted, defaults to false. Note that you should only request the phone number when it\u0027s required to process the order since it can increase friction during the checkout process and can lead to a lower conversion rate.",
        "params": {
          "phoneNumberRequired": "whether a phone number is additionally required"
        },
        "returns": "com.google.android.gms.wallet.PaymentDataRequest.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentDataRequest.Builder.setShippingAddressRequired(boolean)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentDataRequest.Builder#setShippingAddressRequired(boolean)",
        "methodDes": "Sets whether a shipping address is required from the buyer. The returned shipping address could be retrieved from getShippingAddress(). If omitted, defaults to false. Optionally, when shipping address is required, extra requirements of the returned shipping address could be set through setShippingAddressRequirements(ShippingAddressRequirements). If no requirements are set, shipping addresses from all supported countries may be returned.",
        "params": {
          "shippingAddressRequirements": "the shipping address requirements"
        },
        "returns": "com.google.android.gms.wallet.PaymentDataRequest.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentDataRequest.Builder.setShippingAddressRequirements(com.google.android.gms.wallet.ShippingAddressRequirements)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentDataRequest.Builder#setShippingAddressRequirements(com.google.android.gms.wallet.ShippingAddressRequirements)",
        "methodDes": "Sets the shipping address requirements. If omitted, shipping addresses from all supported countries may be returned.",
        "params": {
          "shippingAddressRequirements": "the shipping address requirements"
        },
        "returns": "com.google.android.gms.wallet.PaymentDataRequest.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentDataRequest.Builder.setTransactionInfo(com.google.android.gms.wallet.TransactionInfo)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentDataRequest.Builder#setTransactionInfo(com.google.android.gms.wallet.TransactionInfo)",
        "methodDes": "Sets detailed transaction info. This field is required if getPaymentMethodToken() is required. See setPaymentMethodTokenizationParameters(PaymentMethodTokenizationParameters).",
        "params": {
          "transactionInfo": "detailed transaction info"
        },
        "returns": "com.google.android.gms.wallet.PaymentDataRequest.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentDataRequest.Builder.setUiRequired(boolean)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentDataRequest.Builder#setUiRequired(boolean)",
        "methodDes": "Sets whether the UI to show the payment method or shipping address selection is required to be shown in the purchase flow. If omitted, defaults to true and the UI will always be shown. When this is set to false, loadPaymentData(PaymentDataRequest) will attempt to skip the UI and directly return the data from the buyer\u0027s previous selection, if the following conditions are met: The buyer has made previous selections in this app before that still meet the requirements in this request. The buyer has consented to reuse their previous selections in subsequent purchases. The merchant is whitelisted for not showing UI. Please contact Google if you think your use case would benefit from skipping UI. Note that even if all of the conditions above are met, UI may still be shown to the buyer (e.g. if an update to their selections is required or if further user authentication is needed). When this is set to false, you should ensure the buyer can still change their selections within your app (e.g. providing an option on a confirmation page or on a settings page where this API can be called again with this field set to true).",
        "params": {
          "uiRequired": "whether the UI to show the payment method or shipping address selection is required to be shown in the purchase flow"
        },
        "returns": "com.google.android.gms.wallet.PaymentDataRequest.Builder:the Builder",
        "Exceptions": {}
      }
    },
    "fields": {}
  },
  "com.google.android.gms.wallet.ShippingAddressRequirements": {
    "classDes": "Optional shipping address requirements for the returned shipping address.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/ShippingAddressRequirements",
    "methods": {
      "com.google.android.gms.wallet.ShippingAddressRequirements.getAllowedCountryCodes()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/ShippingAddressRequirements#getAllowedCountryCodes()",
        "methodDes": "Gets allowed country codes.",
        "params": {},
        "returns": "java.util.ArrayList\u003cjava.lang.String\u003e:a list of country codes representing the countries to which shipping is allowed for this transaction or null if no restrictions were specified",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.ShippingAddressRequirements.newBuilder()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/ShippingAddressRequirements#newBuilder()",
        "methodDes": "Builder to create a ShippingAddressRequirements.",
        "params": {},
        "returns": "com.google.android.gms.wallet.ShippingAddressRequirements.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.ShippingAddressRequirements.writeToParcel(android.os.Parcel,int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/ShippingAddressRequirements#writeToParcel(android.os.Parcel, int)",
        "methodDes": "Flatten this object in to a Parcel.",
        "params": {
          "out": "The Parcel in which the object should be written",
          "flags": "Additional flags about how the object should be written"
        },
        "returns": "void",
        "Exceptions": {}
      }
    },
    "fields": {
      "com.google.android.gms.wallet.ShippingAddressRequirements.CREATOR": {
        "des": "A public CREATOR field that generates instances of your Parcelable class from a Parcel.",
        "value": "",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/ShippingAddressRequirements#CREATOR"
      }
    }
  },
  "com.google.android.gms.wallet.PaymentMethodTokenizationParameters.Builder": {
    "classDes": "Builder to create a PaymentMethodTokenizationParameters.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentMethodTokenizationParameters.Builder",
    "methods": {
      "com.google.android.gms.wallet.PaymentMethodTokenizationParameters.Builder.addParameter(java.lang.String,java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentMethodTokenizationParameters.Builder#addParameter(java.lang.String, java.lang.String)",
        "methodDes": "Adds tokenization specific parameters. This method is useful when in addition to tokenization type integrator needs to use custom options. For example when integrator wants to use a gateway for tokenization the following parameters could be used: Gateway name (lowercase): name: \"gateway\" value: \"example\" Gateway merchant identifier (value varies by gateway): name: \"gatewayMerchantId\" value: \"exampleGatewayMerchantId\" Sample configuration: PaymentMethodTokenizationParameters parameters \u003d PaymentMethodTokenizationParameters.newBuilder() .setPaymentMethodTokenizationType( WalletConstants.PAYMENT_METHOD_TOKENIZATION_TYPE_PAYMENT_GATEWAY) .addParameter(\"gateway\", \"example\") .addParameter(\"gatewayMerchantId\", \"exampleGatewayMerchantId\") .buid().",
        "params": {
          "name": "the name of the parameter",
          "value": "the value of the parameter"
        },
        "returns": "com.google.android.gms.wallet.PaymentMethodTokenizationParameters:Returns a PaymentMethodTokenizationParameters",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentMethodTokenizationParameters.Builder.build()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentMethodTokenizationParameters.Builder#build()",
        "methodDes": "Builder to create a PaymentMethodTokenizationParameters.",
        "params": {},
        "returns": "com.google.android.gms.wallet.PaymentMethodTokenizationParameters:the PaymentMethodTokenizationParameters",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentMethodTokenizationParameters.Builder.setPaymentMethodTokenizationType(int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentMethodTokenizationParameters.Builder#setPaymentMethodTokenizationType(int)",
        "methodDes": "Sets payment method tokenization type. See WalletConstants.PaymentMethodTokenizationType for suported tokenization types.",
        "params": {
          "tokenizationType": "payment method tokenization type"
        },
        "returns": "com.google.android.gms.wallet.PaymentMethodTokenizationParameters.Builder:the Builder",
        "Exceptions": {}
      }
    },
    "fields": {}
  },
  "com.google.android.gms.wallet.IsReadyToPayRequest.Builder": {
    "classDes": "This class is deprecated. Use the JSON request format instead, see fromJson(String). Builder for creating an IsReadyToPayRequest.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/IsReadyToPayRequest.Builder",
    "methods": {
      "com.google.android.gms.wallet.IsReadyToPayRequest.Builder.addAllowedCardNetwork(int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/IsReadyToPayRequest.Builder#addAllowedCardNetwork(int)",
        "methodDes": "Adds a card network for cards allowed in the purchase. See WalletConstants.CardNetwork for available options. If not explicitly set via this or addAllowedCardNetworks(Collection), the default supported networks will be CARD_NETWORK_AMEX, CARD_NETWORK_DISCOVER, CARD_NETWORK_MASTERCARD, and CARD_NETWORK_VISA.",
        "params": {
          "allowedCardNetwork": "a card network"
        },
        "returns": "com.google.android.gms.wallet.IsReadyToPayRequest.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.IsReadyToPayRequest.Builder.addAllowedCardNetworks(java.util.Collection\u003cjava.lang.Integer\u003e)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/IsReadyToPayRequest.Builder#addAllowedCardNetworks(java.util.Collection\u003cjava.lang.Integer\u003e)",
        "methodDes": "Adds a collection of card networks for cards allowed in the purchase. See WalletConstants.CardNetwork for available options. If not explicitly set via this or addAllowedCardNetwork(int), the default supported networks will be CARD_NETWORK_AMEX, CARD_NETWORK_DISCOVER, CARD_NETWORK_MASTERCARD, and CARD_NETWORK_VISA.",
        "params": {
          "allowedCardNetworks": "a collection of card networks"
        },
        "returns": "com.google.android.gms.wallet.IsReadyToPayRequest.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.IsReadyToPayRequest.Builder.addAllowedPaymentMethod(int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/IsReadyToPayRequest.Builder#addAllowedPaymentMethod(int)",
        "methodDes": "Adds an allowed payment method. See WalletConstants.PaymentMethod for available options. If not explicitly set via this or addAllowedPaymentMethods(Collection), then the default allowed payment method will be PAYMENT_METHOD_TOKENIZED_CARD.",
        "params": {
          "allowedPaymentMethod": "an allowed payment method"
        },
        "returns": "com.google.android.gms.wallet.IsReadyToPayRequest.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.IsReadyToPayRequest.Builder.addAllowedPaymentMethods(java.util.Collection\u003cjava.lang.Integer\u003e)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/IsReadyToPayRequest.Builder#addAllowedPaymentMethods(java.util.Collection\u003cjava.lang.Integer\u003e)",
        "methodDes": "Adds a collection of allowed payment methods. See WalletConstants.PaymentMethod for available options. If not explicitly set via this or addAllowedPaymentMethod(int), then the default allowed payment method will be PAYMENT_METHOD_TOKENIZED_CARD.",
        "params": {
          "allowedPaymentMethods": "a collection of allowed payment methods"
        },
        "returns": "com.google.android.gms.wallet.IsReadyToPayRequest.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.IsReadyToPayRequest.Builder.build()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/IsReadyToPayRequest.Builder#build()",
        "methodDes": "a builder for constructing the IsReadyToPayRequest object.",
        "params": {},
        "returns": "com.google.android.gms.wallet.IsReadyToPayRequest:The actual IsReadyToPayRequest created using the data passed to the Builder object",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.IsReadyToPayRequest.Builder.setExistingPaymentMethodRequired(boolean)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/IsReadyToPayRequest.Builder#setExistingPaymentMethodRequired(boolean)",
        "methodDes": "If set to true, then IsReadyToPay will only return true if the user has an existing payment method that matches the other criteria specified in the IsReadyToPayRequest. If you set this to true, make sure to call isReadyToPay(IsReadyToPayRequest) as early as possible in your flow as the call may take longer to resolve due to the extra check for an existing payment method.",
        "params": {
          "existingPaymentMethodRequired": "true or false"
        },
        "returns": "com.google.android.gms.wallet.IsReadyToPayRequest.Builder:the Builder",
        "Exceptions": {}
      }
    },
    "fields": {}
  },
  "com.google.android.gms.wallet.wobs.WalletObjectsConstants.State": {
    "classDes": "The state of the Wallet Object. This type is used to determine how a Wallet Object is displayed in the Google Wallet app. For example, an inactive object is no longer displayed in the Google Wallet app.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/WalletObjectsConstants.State",
    "methods": {},
    "fields": {
      "com.google.android.gms.wallet.wobs.WalletObjectsConstants.State.ACTIVE": {
        "des": "Object is active and displayed in Google Wallet app.",
        "value": "1",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/WalletObjectsConstants.State#INACTIVE"
      },
      "com.google.android.gms.wallet.wobs.WalletObjectsConstants.State.COMPLETED": {
        "des": "Object has been used and is displayed with other used and expired objects.",
        "value": "2",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/WalletObjectsConstants.State#COMPLETED"
      },
      "com.google.android.gms.wallet.wobs.WalletObjectsConstants.State.EXPIRED": {
        "des": "Wallet Object is expired. A wallet object may expire if it was created to be active for limited time only. Object is no longer valid. The object was created for a limited time and is now expired.",
        "value": "4",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/WalletObjectsConstants.State#EXPIRED"
      },
      "com.google.android.gms.wallet.wobs.WalletObjectsConstants.State.INACTIVE": {
        "des": "Object is inactive and hidden from view.",
        "value": "5",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/WalletObjectsConstants.State#INACTIVE"
      }
    }
  },
  "com.google.android.gms.wallet.PaymentMethodTokenizationParameters": {
    "classDes": "Tokenization parameters passed by the integrator used to tokenize the credit card selected by the user. In order to configure gateway tokenization the tokenization type should be set to PAYMENT_METHOD_TOKENIZATION_TYPE_PAYMENT_GATEWAY and gateway specific parameters should be passed as key/value pairs by calling addParameter(String, String). When using gateway tokenization the parameters must include a parameter with name \"gateway\" and value set to one of the supported gateways. Note: parameters will be validated and error code ERROR_CODE_INVALID_PARAMETERS will be returned if they happen to be invalid e.g. missing required parameter for a gateway or unexpected parameter is used. An example of a tokenization configuration: PaymentMethodTokenizationParameters parameters \u003d PaymentMethodTokenizationParameters.newBuilder() .setPaymentMethodTokenizationType(WalletConstants.PAYMENT_GATEWAY) .addParameter(\"gateway\", \"example\") .addParameter(\"gatewayMerchantId\", \"exampleGatewayMerchantId\") .build().",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentMethodTokenizationParameters",
    "methods": {
      "com.google.android.gms.wallet.PaymentMethodTokenizationParameters.getParameters()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentMethodTokenizationParameters#getParameters()",
        "methodDes": "Payment method tokenization parameters.",
        "params": {},
        "returns": "android.os.Bundle:payment method tokenization parameters",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentMethodTokenizationParameters.getPaymentMethodTokenizationType()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentMethodTokenizationParameters#getPaymentMethodTokenizationType()",
        "methodDes": "Payment method tokenization type. See WalletConstants.PaymentMethodTokenizationType for a list of supported tokenization types.",
        "params": {},
        "returns": "int:payment method tokenization type",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentMethodTokenizationParameters.newBuilder()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentMethodTokenizationParameters#newBuilder()",
        "methodDes": "Builder to create a PaymentMethodTokenizationParameters.",
        "params": {},
        "returns": "com.google.android.gms.wallet.PaymentMethodTokenizationParameters.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentMethodTokenizationParameters.writeToParcel(android.os.Parcel,int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentMethodTokenizationParameters#writeToParcel(android.os.Parcel, int)",
        "methodDes": "Flatten this object in to a Parcel.",
        "params": {
          "out": "The Parcel in which the object should be written",
          "flags": "Additional flags about how the object should be written"
        },
        "returns": "void",
        "Exceptions": {}
      }
    },
    "fields": {
      "com.google.android.gms.wallet.PaymentMethodTokenizationParameters.CREATOR": {
        "des": "A public CREATOR field that generates instances of your Parcelable class from a Parcel.",
        "value": "",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentMethodTokenizationParameters#CREATOR"
      }
    }
  },
  "com.google.android.gms.wallet.GiftCardWalletObject.Builder": {
    "classDes": "Builder for GiftCardWalletObject.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder",
    "methods": {
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.addImageModuleDataMainImageUri(com.google.android.gms.wallet.wobs.UriData)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#addImageModuleDataMainImageUri(com.google.android.gms.wallet.wobs.UriData)",
        "methodDes": "Adds an image module data image uri. If image modules data is also defined on the class, the ones defined here on the object will be displayed first, followed by those defined on the class.",
        "params": {
          "uri": "an image module data image uri"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.addImageModuleDataMainImageUris(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.UriData\u003e)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#addImageModuleDataMainImageUris(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.UriData\u003e)",
        "methodDes": "Adds a collection of image module data image uris. If image modules data is also defined on the class, the ones defined here on the object will be displayed first, followed by those defined on the class.",
        "params": {
          "uris": "a collection of image module data image uri"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.addInfoModuleDataLabelValueRow(com.google.android.gms.wallet.wobs.LabelValueRow)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#addInfoModuleDataLabelValueRow(com.google.android.gms.wallet.wobs.LabelValueRow)",
        "methodDes": "Adds an info module data label value row. If info module data is also defined on the class, the one defined here on the object will be displayed first, followed by the one defined on the class.",
        "params": {
          "row": "an info module data label value row"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.addInfoModuleDataLabelValueRows(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.LabelValueRow\u003e)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#addInfoModuleDataLabelValueRows(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.LabelValueRow\u003e)",
        "methodDes": "Adds a collection of info module data label value rows. If info module data is also defined on the class, the one defined here on the object will be displayed first, followed by the one defined on the class.",
        "params": {
          "rows": "a collection of info module data label value rows"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.addLinksModuleDataUri(com.google.android.gms.wallet.wobs.UriData)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#addLinksModuleDataUri(com.google.android.gms.wallet.wobs.UriData)",
        "methodDes": "Add a links module data. If links module data is also defined on the class, the one defined here on the object will be displayed first, followed by those defined on the class.",
        "params": {
          "uri": "a links module data"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.addLinksModuleDataUris(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.UriData\u003e)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#addLinksModuleDataUris(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.UriData\u003e)",
        "methodDes": "Adds a collection of links module data. If links module data is also defined on the class, the one defined here on the object will be displayed first, followed by those defined on the class.",
        "params": {
          "uris": "a collection of links module data"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.addLocation(com.google.android.gms.maps.model.LatLng)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#addLocation(com.google.android.gms.maps.model.LatLng)",
        "methodDes": "Adds the location where the Wallet Object can be used. The Wallet Object platform uses this information to trigger geolocated notifications to users. Note that locations in the object override locations in the class which override locations in the Google Places ID.",
        "params": {
          "location": "the location where the Wallet Object can be used"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.addLocations(java.util.Collection\u003ccom.google.android.gms.maps.model.LatLng\u003e)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#addLocations(java.util.Collection\u003ccom.google.android.gms.maps.model.LatLng\u003e)",
        "methodDes": "Adds the collection of locations where the Wallet Object can be used. The Wallet Object platform uses this information to trigger geolocated notifications to users. Note that locations in the object override locations in the class which override locations in the Google Places ID.",
        "params": {
          "locations": "the collection of locations where the Wallet Object can be used"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.addMessage(com.google.android.gms.wallet.wobs.WalletObjectMessage)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#addMessage(com.google.android.gms.wallet.wobs.WalletObjectMessage)",
        "methodDes": "Adds a message to be associated with this object. All users of this Wallet Object will receive its associated messages.",
        "params": {
          "message": "a message to be associated with this object"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.addMessages(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.WalletObjectMessage\u003e)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#addMessages(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.WalletObjectMessage\u003e)",
        "methodDes": "Adds a collection of messages to be associated with this object. All users of this Wallet Object will receive its associated messages.",
        "params": {
          "messages": "a collection of messages to be associated with this object"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.addTextModuleData(com.google.android.gms.wallet.wobs.TextModuleData)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#addTextModuleData(com.google.android.gms.wallet.wobs.TextModuleData)",
        "methodDes": "Adds a text module data. If text module data is also defined on the class, the ones defined here on the object will be displayed first, followed by those defined on the class.",
        "params": {
          "data": "a text module data"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.addTextModulesData(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.TextModuleData\u003e)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#addTextModulesData(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.TextModuleData\u003e)",
        "methodDes": "Adds a collection of text modules data. If text module data is also defined on the class, the ones defined here on the object will be displayed first, followed by those defined on the class.",
        "params": {
          "data": "a collection of text modules data"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.build()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#build()",
        "methodDes": "Builder for GiftCardWalletObject.",
        "params": {},
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject:the GiftCardWalletObject",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.setBalanceCurrencyCode(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#setBalanceCurrencyCode(java.lang.String)",
        "methodDes": "Set the currency code for the current value of the gift card.",
        "params": {
          "currencyCode": "the currency code for the current value of the gift card"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:A reference to the object invoking the method to enable a fluent interface",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.setBalanceMicros(long)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#setBalanceMicros(long)",
        "methodDes": "Sets the amount in the card balance, value represents micros.",
        "params": {
          "valueMicros": "the amount in the card balance, value represents micros"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:A reference to the object invoking the method to enable a fluent interface",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.setBalanceUpdateTime(long)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#setBalanceUpdateTime(long)",
        "methodDes": "Sets a value indicating when was this card last updated, value represents milliseconds in UNIX epoch.",
        "params": {
          "balanceUpdateTimeStamp": "a value indicating when was this card last updated"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:A reference to the object invoking the method to enable a fluent interface",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.setBarcodeAlternateText(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#setBarcodeAlternateText(java.lang.String)",
        "methodDes": "",
        "params": {
          "barcodeAlternateText": "the barcode alternate text"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.setBarcodeLabel(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#setBarcodeLabel(java.lang.String)",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {
          "barcodeLabel": "the barcode label describing the contents of the barcode"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.setBarcodeType(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#setBarcodeType(java.lang.String)",
        "methodDes": "Sets the type of the barcode. Acceptable values are: \"aztec\" \"codabar\" \"code128\" \"code39\" \"dataMatrix\" \"ean13\" \"ean8\" \"itf14\" \"pdf417\" \"qrCode\" \"textOnly\" \"upcA\" \"upcE\".",
        "params": {
          "barcodeType": "the type of the barcode"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.setBarcodeValue(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#setBarcodeValue(java.lang.String)",
        "methodDes": "Sets the value encoded in the barcode.",
        "params": {
          "barcodeValue": "the value encoded in the barcode"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.setCardIdentifier(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#setCardIdentifier(java.lang.String)",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {
          "cardIdentifier": "the vendor assigned gift card identifier"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:A reference to the object invoking the method to enable a fluent interface",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.setCardNumber(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#setCardNumber(java.lang.String)",
        "methodDes": "Sets the number identifying this card.",
        "params": {
          "cardNumber": "The card number, this field is required"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:A reference to the object invoking the method to enable a fluent interface",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.setClassId(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#setClassId(java.lang.String)",
        "methodDes": "Sets the id of the class associated with this object.",
        "params": {
          "classId": "the id of the class associated with this object"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.setEventNumber(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#setEventNumber(java.lang.String)",
        "methodDes": "The card\u0027s event number, an optional field used by some gift cards.",
        "params": {
          "eventNumber": "the card\u0027s event number"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:A reference to the object invoking the method to enable a fluent interface",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.setId(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#setId(java.lang.String)",
        "methodDes": "",
        "params": {
          "id": ""
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.setInfoModuleDataHexBackgroundColor(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#setInfoModuleDataHexBackgroundColor(java.lang.String)",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {
          "color": "the background color"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.setInfoModuleDataHexFontColor(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#setInfoModuleDataHexFontColor(java.lang.String)",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {
          "color": "the color for the font"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.setInfoModuleDataShowLastUpdateTime(boolean)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#setInfoModuleDataShowLastUpdateTime(boolean)",
        "methodDes": "Sets the flag which determines whether to display the last update time of the Wallet Object.",
        "params": {
          "show": "the flag which determines"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.setIssuerName(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#setIssuerName(java.lang.String)",
        "methodDes": "Sets the issuer name of this gift card object. This field is required and should match issuer name specified for the corresponding gift card class of the gift card object being created. It will be displayed to the user in the accepting gift card object confirmation screen.",
        "params": {
          "issuerName": "the issuer name of this gift card object"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.setPin(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#setPin(java.lang.String)",
        "methodDes": "Sets the card PIN.",
        "params": {
          "pin": "the card PIN"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:A reference to the object invoking the method to enable a fluent interface",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.setState(int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#setState(int)",
        "methodDes": "Sets gift card object state. Supported states are defined by WalletObjectsConstants.State.",
        "params": {
          "state": "gift card object state"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.setTitle(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#setTitle(java.lang.String)",
        "methodDes": "Sets the gift card title. This field is required and should match the title specified for the corresponding gift card class of the gift card object being created. It will be displayed to the user in the accepting gift card object confirmation screen.",
        "params": {
          "title": "the gift card title"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.GiftCardWalletObject.Builder.setValidTimeInterval(com.google.android.gms.wallet.wobs.TimeInterval)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder#setValidTimeInterval(com.google.android.gms.wallet.wobs.TimeInterval)",
        "methodDes": "Sets the time period this object will be active and can be used. An object\u0027s state will be changed to expired when this time period has passed.",
        "params": {
          "interval": "the time period this object"
        },
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject.Builder:the Builder",
        "Exceptions": {}
      }
    },
    "fields": {}
  },
  "com.google.android.gms.wallet.wobs.LoyaltyPoints.Builder": {
    "classDes": "Builder to create a LoyaltyPoints.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPoints.Builder",
    "methods": {
      "com.google.android.gms.wallet.wobs.LoyaltyPoints.Builder.build()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPoints.Builder#build()",
        "methodDes": "Builder to create a LoyaltyPoints.",
        "params": {},
        "returns": "com.google.android.gms.wallet.wobs.LoyaltyPoints:the LoyaltyPoints",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LoyaltyPoints.Builder.setBalance(com.google.android.gms.wallet.wobs.LoyaltyPointsBalance)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPoints.Builder#setBalance(com.google.android.gms.wallet.wobs.LoyaltyPointsBalance)",
        "methodDes": "Sets the loyalty point balance, such as \"500\" or \"$10.00.\".",
        "params": {
          "balance": "the loyalty point balance"
        },
        "returns": "com.google.android.gms.wallet.wobs.LoyaltyPoints.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LoyaltyPoints.Builder.setLabel(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPoints.Builder#setLabel(java.lang.String)",
        "methodDes": "Sets the loyalty points label, such as \"Points.\".",
        "params": {
          "label": "the loyalty points label"
        },
        "returns": "com.google.android.gms.wallet.wobs.LoyaltyPoints.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LoyaltyPoints.Builder.setType(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPoints.Builder#setType(java.lang.String)",
        "methodDes": "This method is deprecated. This value is no longer used.",
        "params": {
          "type": "the the loyalty points type"
        },
        "returns": "com.google.android.gms.wallet.wobs.LoyaltyPoints.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LoyaltyPoints.Builder.setValidTimeInterval(com.google.android.gms.wallet.wobs.TimeInterval)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPoints.Builder#setValidTimeInterval(com.google.android.gms.wallet.wobs.TimeInterval)",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {
          "interval": "the time interval"
        },
        "returns": "com.google.android.gms.wallet.wobs.LoyaltyPoints.Builder:the Builder",
        "Exceptions": {}
      }
    },
    "fields": {}
  },
  "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance": {
    "classDes": "Parcelable representing loyalty points balance.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPointsBalance",
    "methods": {
      "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance.getCurrencyCode()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPointsBalance#getCurrencyCode()",
        "methodDes": "Gets cueeency code from this instance.",
        "params": {},
        "returns": "java.lang.String:the balance currency code",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance.getCurrencyMicros()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPointsBalance#getCurrencyMicros()",
        "methodDes": "Gets cueeency micros from this instance.",
        "params": {},
        "returns": "long:the balance currency micros",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance.getDouble()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPointsBalance#getDouble()",
        "methodDes": "Gets double value from this instance.",
        "params": {},
        "returns": "double:the balance double value",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance.getInt()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPointsBalance#getInt()",
        "methodDes": "Gets int value from this instance.",
        "params": {},
        "returns": "int:the balance int value",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance.getString()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPointsBalance#getString()",
        "methodDes": "Gets string value from this instance.",
        "params": {},
        "returns": "java.lang.String:the balance string value",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance.getType()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPointsBalance#getType()",
        "methodDes": "Gets type from this instance.",
        "params": {},
        "returns": "int:the balance type",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance.newBuilder()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPointsBalance#newBuilder()",
        "methodDes": "Builder to create a LoyaltyPointsBalance.",
        "params": {},
        "returns": "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance.writeToParcel(android.os.Parcel,int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPointsBalance#writeToParcel(android.os.Parcel, int)",
        "methodDes": "Flatten this object in to a Parcel.",
        "params": {
          "dest": "The Parcel in which the object should be written",
          "flags": "Additional flags about how the object should be written"
        },
        "returns": "void",
        "Exceptions": {}
      }
    },
    "fields": {
      "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance.CREATOR": {
        "des": "A public CREATOR field that generates instances of your Parcelable class from a Parcel.",
        "value": "",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPointsBalance#CREATOR"
      }
    }
  },
  "com.google.android.gms.wallet.AutoResolvableVoidResult": {
    "classDes": "A Void result that is an AutoResolvableResult. This is returned as the Task result type for APIs that do not return data beyond an error code on failures but that still show UI and can be handled using AutoResolveHelper.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/AutoResolvableVoidResult",
    "methods": {
      "com.google.android.gms.wallet.AutoResolvableVoidResult.AutoResolvableVoidResult()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/AutoResolvableVoidResult#AutoResolvableVoidResult()",
        "methodDes": "constructor of AutoResolvableVoidResult.",
        "params": {},
        "returns": "",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.AutoResolvableVoidResult.putIntoIntent(android.content.Intent)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/AutoResolvableResult#putIntoIntent(android.content.Intent)",
        "methodDes": "Saves the intent as an extra into the given Intent. Generally speaking, any classes that implement this interface will also have a static method called getFromIntent(Intent) to do the opposite operation.",
        "params": {
          "intent": "the intent as an extra"
        },
        "returns": "void",
        "Exceptions": {}
      }
    },
    "fields": {}
  },
  "com.google.android.gms.wallet.wobs.WalletObjectMessage": {
    "classDes": "Parcelable representing a message associated with the wallet object. For example a message for a new Baconrista loyalty card could have a header: \"Jane, welcome to Banconrista Rewards!\" and body: \"Thanks for joining our program. Show this message to our barista for your first free coffee on us!\".",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/WalletObjectMessage",
    "methods": {
      "com.google.android.gms.wallet.wobs.WalletObjectMessage.getActionUri()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/WalletObjectMessage#getActionUri()",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {},
        "returns": "com.google.android.gms.wallet.wobs.UriData:the action uri",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.WalletObjectMessage.getBody()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/WalletObjectMessage#getBody()",
        "methodDes": "Gets body from this instance.",
        "params": {},
        "returns": "java.lang.String:the body",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.WalletObjectMessage.getDisplayInterval()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/WalletObjectMessage#getDisplayInterval()",
        "methodDes": "Gets display interval from this instance.",
        "params": {},
        "returns": "com.google.android.gms.wallet.wobs.TimeInterval:the display interval",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.WalletObjectMessage.getHeader()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/WalletObjectMessage#getHeader()",
        "methodDes": "Gets header from this instance.",
        "params": {},
        "returns": "java.lang.String:the header",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.WalletObjectMessage.getImageUri()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/WalletObjectMessage#getImageUri()",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {},
        "returns": "com.google.android.gms.wallet.wobs.UriData:the image uri",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.WalletObjectMessage.newBuilder()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/WalletObjectMessage#newBuilder()",
        "methodDes": "Create a WalletObjectMessage builder.",
        "params": {},
        "returns": "com.google.android.gms.wallet.wobs.WalletObjectMessage.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.WalletObjectMessage.writeToParcel(android.os.Parcel,int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/WalletObjectMessage#writeToParcel(android.os.Parcel, int)",
        "methodDes": "Flatten this object in to a Parcel.",
        "params": {
          "dest": "The Parcel in which the object should be written",
          "flags": "Additional flags about how the object should be written"
        },
        "returns": "void",
        "Exceptions": {}
      }
    },
    "fields": {
      "com.google.android.gms.wallet.wobs.WalletObjectMessage.CREATOR": {
        "des": "A public CREATOR field that generates instances of your Parcelable class from a Parcel.",
        "value": "",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/WalletObjectMessage#CREATOR"
      }
    }
  },
  "com.google.android.gms.wallet.wobs.TextModuleData": {
    "classDes": "Parcelable representing data for text module associated with wallet object.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/TextModuleData",
    "methods": {
      "com.google.android.gms.wallet.wobs.TextModuleData.TextModuleData(java.lang.String,java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/TextModuleData#TextModuleData(java.lang.String, java.lang.String)",
        "methodDes": "Creates an instance of TextModule with given header and body.",
        "params": {
          "header": "the header of the text module",
          "body": "the body of the text module"
        },
        "returns": "",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.TextModuleData.getBody()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/TextModuleData#getBody()",
        "methodDes": "Gets body from this instance.",
        "params": {},
        "returns": "java.lang.String:the text module body",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.TextModuleData.getHeader()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/TextModuleData#getHeader()",
        "methodDes": "Gets header from this instance.",
        "params": {},
        "returns": "java.lang.String:the text module header",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.TextModuleData.writeToParcel(android.os.Parcel,int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/TextModuleData#writeToParcel(android.os.Parcel, int)",
        "methodDes": "Flatten this object in to a Parcel.",
        "params": {
          "dest": "The Parcel in which the object should be written",
          "flags": "Additional flags about how the object should be written"
        },
        "returns": "void",
        "Exceptions": {}
      }
    },
    "fields": {
      "com.google.android.gms.wallet.wobs.TextModuleData.CREATOR": {
        "des": "A public CREATOR field that generates instances of your Parcelable class from a Parcel.",
        "value": "",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/TextModuleData#CREATOR"
      }
    }
  },
  "com.google.android.gms.wallet.wobs.WalletObjectsConstants": {
    "classDes": "Collection of constant values used by wallet objects.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/WalletObjectsConstants",
    "methods": {},
    "fields": {}
  },
  "com.google.android.gms.wallet.PaymentData": {
    "classDes": "Parcelable representing a payment data response, which contains the necessary payment result to complete the payment. See the available fields for more information.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentData",
    "methods": {
      "com.google.android.gms.wallet.PaymentData.fromJson(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentDataRequest#fromJson(java.lang.String)",
        "methodDes": "Constructs PaymentData from a JSON object serialized as a string. To convert back to a JSON object serialized as string use toJson(). Note that you shouldn\u0027t rely on the values returned by getters in PaymentData as they will not be populated with the data set in the given JSON. For the expected format of this JSON, please see PaymentData object reference documentation.",
        "params": {
          "paymentDataJson": "a JSON object serialized as a string"
        },
        "returns": "com.google.android.gms.wallet.PaymentData:the PaymentData",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentData.getCardInfo()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentData#getCardInfo()",
        "methodDes": "This method is deprecated. Instead use the JSON request format (see fromJson(String)) which will allow you to get the same data in JSON response format (see toJson()).",
        "params": {},
        "returns": "com.google.android.gms.wallet.CardInfo:info about the card used in the transaction",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentData.getEmail()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentData#getEmail()",
        "methodDes": "This method is deprecated. Instead use the JSON request format (see fromJson(String)) which will allow you to get the same data in JSON response format (see toJson()).",
        "params": {},
        "returns": "java.lang.String:the buyer\u0027s email if requested",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentData.getExtraData()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentData#getExtraData()",
        "methodDes": "This method is deprecated. Instead use the JSON request format (see fromJson(String)) which will allow you to get the same data in JSON response format (see toJson()).",
        "params": {},
        "returns": "android.os.Bundle:Additional payment data pertaining to the transaction",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentData.getFromIntent(android.content.Intent)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentData#getFromIntent(android.content.Intent)",
        "methodDes": "Gets the PaymentData stored in the given Intent extra. Use this method to extract PaymentData from the Intent received in onActivityResult(int, int, Intent).",
        "params": {
          "intent": "the given Intent extra"
        },
        "returns": "com.google.android.gms.wallet.PaymentData:the PaymentData",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentData.getGoogleTransactionId()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentData#getGoogleTransactionId()",
        "methodDes": "This method is deprecated. Instead use the JSON request format (see fromJson(String)) which will allow you to get the same data in JSON response format (see toJson()).",
        "params": {},
        "returns": "java.lang.String:The unique ID assigned to this payment transaction by Google",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentData.getPaymentMethodToken()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentData#getPaymentMethodToken()",
        "methodDes": "This method is deprecated. Instead use the JSON request format (see fromJson(String)) which will allow you to get the same data in JSON response format (see toJson()).",
        "params": {},
        "returns": "com.google.android.gms.wallet.PaymentMethodToken:the payment method token or null if PaymentMethodTokenizationParameters is not set. See setPaymentMethodTokenizationParameters(PaymentMethodTokenizationParameters)",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentData.getShippingAddress()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentData#getShippingAddress()",
        "methodDes": "This method is deprecated. Instead use the JSON request format (see fromJson(String)) which will allow you to get the same data in JSON response format (see toJson()).",
        "params": {},
        "returns": "com.google.android.gms.identity.intents.model.UserAddress:the buyer\u0027s shipping address if requested",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentData.putIntoIntent(android.content.Intent)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/AutoResolvableResult#putIntoIntent(android.content.Intent)",
        "methodDes": "Saves the current PaymentData instance as an extra in the given Intent.",
        "params": {
          "intent": "an extra in the given Intent"
        },
        "returns": "void",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentData.toJson()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentData#toJson()",
        "methodDes": "Returns PaymentData in JSON format. Note that this will be null if PaymentDataRequest was not constructed using fromJson(String). For the expected format of this JSON, please see PaymentData object reference documentation.",
        "params": {},
        "returns": "java.lang.String:the String",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentData.writeToParcel(android.os.Parcel,int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentData#writeToParcel(android.os.Parcel, int)",
        "methodDes": "Flatten this object in to a Parcel.",
        "params": {
          "dest": "The Parcel in which the object should be written",
          "flags": "Additional flags about how the object should be written"
        },
        "returns": "void",
        "Exceptions": {}
      }
    },
    "fields": {
      "com.google.android.gms.wallet.PaymentData.CREATOR": {
        "des": "A public CREATOR field that generates instances of your Parcelable class from a Parcel.",
        "value": "",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentData#CREATOR"
      }
    }
  },
  "com.google.android.gms.wallet.LoyaltyWalletObject.Builder": {
    "classDes": "Builder to create a LoyaltyWalletObject.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder",
    "methods": {
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.addImageModuleDataMainImageUri(com.google.android.gms.wallet.wobs.UriData)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#addImageModuleDataMainImageUri(com.google.android.gms.wallet.wobs.UriData)",
        "methodDes": "Adds an image module data image uri. If image modules data is also defined on the class, the ones defined here on the object will be displayed first, followed by those defined on the class.",
        "params": {
          "uri": "an image module data image uri"
        },
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.addImageModuleDataMainImageUris(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.UriData\u003e)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#addImageModuleDataMainImageUris(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.UriData\u003e)",
        "methodDes": "Adds a collection of image module data image uris. If image modules data is also defined on the class, the ones defined here on the object will be displayed first, followed by those defined on the class.",
        "params": {
          "uris": "a collection of image module data image uris"
        },
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.addInfoModuleDataLabeValueRow(com.google.android.gms.wallet.wobs.LabelValueRow)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#addInfoModuleDataLabeValueRow(com.google.android.gms.wallet.wobs.LabelValueRow)",
        "methodDes": "Adds an info module data label value row. If info module data is also defined on the class, the one defined here on the object will be displayed first, followed by the one defined on the class.",
        "params": {
          "row": "an info module data label value row"
        },
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.addInfoModuleDataLabelValueRows(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.LabelValueRow\u003e)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#addInfoModuleDataLabelValueRows(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.LabelValueRow\u003e)",
        "methodDes": "Adds a collection of info module data label value rows. If info module data is also defined on the class, the one defined here on the object will be displayed first, followed by the one defined on the class.",
        "params": {
          "rows": "an info module data label value row"
        },
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.addLinksModuleDataUri(com.google.android.gms.wallet.wobs.UriData)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#addLinksModuleDataUri(com.google.android.gms.wallet.wobs.UriData)",
        "methodDes": "Add a links module data. If links module data is also defined on the class, the one defined here on the object will be displayed first, followed by those defined on the class.",
        "params": {
          "uri": "a links module data"
        },
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.addLinksModuleDataUris(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.UriData\u003e)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#addLinksModuleDataUris(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.UriData\u003e)",
        "methodDes": "Adds a collection of links module data. If links module data is also defined on the class, the one defined here on the object will be displayed first, followed by those defined on the class.",
        "params": {
          "uris": "a collection of links module data"
        },
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.addLocation(com.google.android.gms.maps.model.LatLng)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#addLocation(com.google.android.gms.maps.model.LatLng)",
        "methodDes": "Adds the location where the Wallet Object can be used. The Wallet Object platform uses this information to trigger geolocated notifications to users. Note that locations in the object override locations in the class which override locations in the Google Places ID.",
        "params": {
          "location": "the location"
        },
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.addLocations(java.util.Collection\u003ccom.google.android.gms.maps.model.LatLng\u003e)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#addLocations(java.util.Collection\u003ccom.google.android.gms.maps.model.LatLng\u003e)",
        "methodDes": "Adds the collection of locations where the Wallet Object can be used. The Wallet Object platform uses this information to trigger geolocated notifications to users. Note that locations in the object override locations in the class which override locations in the Google Places ID.",
        "params": {
          "locations": "the collection of locations"
        },
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.addMessage(com.google.android.gms.wallet.wobs.WalletObjectMessage)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#addMessage(com.google.android.gms.wallet.wobs.WalletObjectMessage)",
        "methodDes": "Adds a message to be associated with this object. All users of this Wallet Object will receive its associated messages.",
        "params": {
          "message": "a message to be associated with this object"
        },
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.addMessages(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.WalletObjectMessage\u003e)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#addMessages(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.WalletObjectMessage\u003e)",
        "methodDes": "Adds a collection of messages to be associated with this object. All users of this Wallet Object will receive its associated messages.",
        "params": {
          "messages": "a collection of messages to be associated with this object"
        },
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.addTextModuleData(com.google.android.gms.wallet.wobs.TextModuleData)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#addTextModuleData(com.google.android.gms.wallet.wobs.TextModuleData)",
        "methodDes": "Adds a text module data. If text module data is also defined on the class, the ones defined here on the object will be displayed first, followed by those defined on the class.",
        "params": {
          "data": "a text module data"
        },
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.addTextModulesData(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.TextModuleData\u003e)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#addTextModulesData(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.TextModuleData\u003e)",
        "methodDes": "Adds a collection of text modules data. If text module data is also defined on the class, the ones defined here on the object will be displayed first, followed by those defined on the class.",
        "params": {
          "data": "a collection of text modules data"
        },
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.build()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#build()",
        "methodDes": "Builder to create a LoyaltyWalletObject.",
        "params": {},
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject:the LoyaltyWalletObject",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.setAccountId(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#setAccountId(java.lang.String)",
        "methodDes": "Sets account id by LoyaltyWalletObject.",
        "params": {
          "accountId": "the account id"
        },
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.setAccountName(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#setAccountName(java.lang.String)",
        "methodDes": "Sets accountName by LoyaltyWalletObject.",
        "params": {
          "accountName": "the account name"
        },
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.setBarcodeAlternateText(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#setBarcodeAlternateText(java.lang.String)",
        "methodDes": "Sets barcode alternate text with LoyaltyWalletObject.",
        "params": {
          "barcodeAlternateText": "the barcode alternate text"
        },
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.setBarcodeLabel(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#setBarcodeLabel(java.lang.String)",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {
          "barcodeLabel": "the label of the barcode"
        },
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.setBarcodeType(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#setBarcodeType(java.lang.String)",
        "methodDes": "Sets the type of the barcode. Acceptable values are: \"aztec\" \"codabar\" \"code128\" \"code39\" \"dataMatrix\" \"ean13\" \"ean8\" \"itf14\" \"pdf417\" \"qrCode\" \"textOnly\" \"upcA\" \"upcE\".",
        "params": {
          "barcodeType": "the type of the barcode"
        },
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.setBarcodeValue(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#setBarcodeValue(java.lang.String)",
        "methodDes": "Sets the value encoded in the barcode.",
        "params": {
          "barcodeValue": "the value encoded in the barcode"
        },
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.setClassId(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#setClassId(java.lang.String)",
        "methodDes": "Sets the id of the class associated with this object.",
        "params": {
          "classId": "the id of the class"
        },
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.setId(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#setId(java.lang.String)",
        "methodDes": "",
        "params": {
          "id": "the loyalty wallet object id"
        },
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.setInfoModuleDataHexBackgroundColor(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#setInfoModuleDataHexBackgroundColor(java.lang.String)",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {
          "color": "the background color"
        },
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.setInfoModuleDataHexFontColor(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#setInfoModuleDataHexFontColor(java.lang.String)",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {
          "color": "the color for the font"
        },
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.setInfoModuleDataShowLastUpdateTime(boolean)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#setInfoModuleDataShowLastUpdateTime(boolean)",
        "methodDes": "Sets the flag which determines whether to display the last update time of the Wallet Object.",
        "params": {
          "show": " the flag which determines"
        },
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.setIssuerName(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#setIssuerName(java.lang.String)",
        "methodDes": "Sets the issuer name of this loyalty program. This field is required and should match issuer name specified for the corresponding loyalty class of the loyalty object being created. It will be displayed to the user in the accepting loyalty program confirmation screen.",
        "params": {
          "issuerName": "the issuer name"
        },
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.setLoyaltyPoints(com.google.android.gms.wallet.wobs.LoyaltyPoints)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#setLoyaltyPoints(com.google.android.gms.wallet.wobs.LoyaltyPoints)",
        "methodDes": "Sets the loyalty reward points.",
        "params": {
          "loyaltyPoints": "the loyalty reward points"
        },
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.setProgramName(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#setProgramName(java.lang.String)",
        "methodDes": "Sets the loyalty program name. This field is required and should match program name specified for the corresponding loyalty class of the loyalty object being created. It will be displayed to the user in the accepting loyalty program confirmation screen.",
        "params": {
          "programName": "the loyalty program name"
        },
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.setState(int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#setState(int)",
        "methodDes": "Sets loyalty wallet object state. Supported states are defined by WalletObjectsConstants.State.",
        "params": {
          "state": "loyalty wallet object state"
        },
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.Builder.setValidTimeInterval(com.google.android.gms.wallet.wobs.TimeInterval)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder#setValidTimeInterval(com.google.android.gms.wallet.wobs.TimeInterval)",
        "methodDes": "Sets the time period this object will be active and can be used. An object\u0027s state will be changed to expired when this time period has passed.",
        "params": {
          "interval": "the time period this object"
        },
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      }
    },
    "fields": {}
  },
  "com.google.android.gms.wallet.Wallet.WalletOptions.Builder": {
    "classDes": "Wallet builder.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/Wallet.WalletOptions.Builder",
    "methods": {
      "com.google.android.gms.wallet.Wallet.WalletOptions.Builder.Builder()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/Wallet.WalletOptions.Builder#Wallet.WalletOptions.Builder()",
        "methodDes": "Create WalletOptions object.",
        "params": {},
        "returns": "",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.Wallet.WalletOptions.Builder.build()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/Wallet.WalletOptions.Builder#build()",
        "methodDes": "Create WalletOptions object.",
        "params": {},
        "returns": "com.google.android.gms.wallet.Wallet.WalletOptions:the WalletOptions",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.Wallet.WalletOptions.Builder.setEnvironment(int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/Wallet.WalletOptions.Builder#setEnvironment(int)",
        "methodDes": "Builder a WalletOptions set environment.",
        "params": {
          "environment": "the walletOptions environment"
        },
        "returns": "com.google.android.gms.wallet.Wallet.WalletOptions.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.Wallet.WalletOptions.Builder.setTheme(int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/Wallet.WalletOptions.Builder#setTheme(int)",
        "methodDes": "Builder a WalletOptions set theme.",
        "params": {
          "theme": "the walletOptions theme"
        },
        "returns": "com.google.android.gms.wallet.Wallet.WalletOptions.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.Wallet.WalletOptions.Builder.useGoogleWallet()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/Wallet.WalletOptions.Builder#useGoogleWallet()",
        "methodDes": "This method is deprecated. Google Wallet is deprecated and will be removed.",
        "params": {},
        "returns": "com.google.android.gms.wallet.Wallet.WalletOptions.Builder:the Builder",
        "Exceptions": {}
      }
    },
    "fields": {}
  },
  "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance.Type": {
    "classDes": "Type of the loyalty points balance.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPointsBalance.Type",
    "methods": {},
    "fields": {
      "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance.Type.DOUBLE": {
        "des": "Balance is a value of type double.",
        "value": "2",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPointsBalance.Type#DOUBLE"
      },
      "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance.Type.INT": {
        "des": "Balance is a value of type integer.",
        "value": "0",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPointsBalance.Type#INT"
      },
      "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance.Type.MONEY": {
        "des": "Balance is a value representing money with currency code and amount of money in micros.",
        "value": "3",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPointsBalance.Type#MONEY"
      },
      "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance.Type.STRING": {
        "des": "Balance is a value of type string.",
        "value": "1",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPointsBalance.Type#STRING"
      },
      "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance.Type.UNDEFINED": {
        "des": "Balance is not set explicitly.",
        "value": "-1",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPointsBalance.Type#UNDEFINED"
      }
    }
  },
  "com.google.android.gms.wallet.wobs.WalletObjects": {
    "classDes": "Entry point for Wallet objects functionality.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/WalletObjects",
    "methods": {
      "com.google.android.gms.wallet.wobs.WalletObjects.createWalletObjects(com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.wallet.CreateWalletObjectsRequest,int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/WalletObjects#createWalletObjects(com.google.android.gms.common.api.GoogleApiClient, com.google.android.gms.wallet.CreateWalletObjectsRequest, int)",
        "methodDes": "Launches a UI allowing the user to save a Loyalty Card wallet object to their Wallet.",
        "params": {
          "googleApiClient": "An instance of GoogleApiClient configured to use the Wallet API",
          "request": "An instance of CreateWalletObjectsRequest which specifies actual objects to be created",
          "requestCode": "will be passed back in onActivityResult(int, int, Intent) where you can check if request was successful"
        },
        "returns": "void",
        "Exceptions": {}
      }
    },
    "fields": {}
  },
  "com.google.android.gms.wallet.CreateWalletObjectsRequest.Builder": {
    "classDes": "Builder to create a CreateWalletObjectsRequest.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CreateWalletObjectsRequest.Builder",
    "methods": {
      "com.google.android.gms.wallet.CreateWalletObjectsRequest.Builder.build()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CreateWalletObjectsRequest.Builder#build()",
        "methodDes": "Builder to create a CreateWalletObjectsRequest.",
        "params": {},
        "returns": "com.google.android.gms.wallet.CreateWalletObjectsRequest:the CreateWalletObjectsRequest created using the data passed to the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.CreateWalletObjectsRequest.Builder.setCreateMode(int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CreateWalletObjectsRequest.Builder#setCreateMode(int)",
        "methodDes": "Sets the creation mode to use. If the value is SHOW_SAVE_PROMPT, it means a save prompt dialog should be shown, with a save button that the user must click before the save actually happens. If the value is REQUEST_IMMEDIATE_SAVE it means that when possible, the save will happen immediately, followed by a confirmation dialog shown to the user if the save was successful. Note that it is the calling application\u0027s responsibility to ensure that REQUEST_IMMEDIATE_SAVE is only used if the user has indicated their intention to actually have the Wallet Object be saved to Google Pay, such as by clicking a button in the calling application with the label \"Save to Google Pay\". Sometimes the SHOW_SAVE_PROMPT mode will still be used by the implementation, even when REQUEST_IMMEDIATE_SAVE is specified by the caller. For example, if there are multiple Google accounts on the device, the implementation may still show the save prompt dialog in order to allow the user to select which account they want saved to.",
        "params": {
          "createMode": "the creation mode to use"
        },
        "returns": "com.google.android.gms.wallet.CreateWalletObjectsRequest.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.CreateWalletObjectsRequest.Builder.setGiftCardWalletObject(com.google.android.gms.wallet.GiftCardWalletObject)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CreateWalletObjectsRequest.Builder#setGiftCardWalletObject(com.google.android.gms.wallet.GiftCardWalletObject)",
        "methodDes": "Sets the Gift Card wallet object to be created.",
        "params": {
          "giftCardWalletObject": "the Gift Card wallet object"
        },
        "returns": "com.google.android.gms.wallet.CreateWalletObjectsRequest.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.CreateWalletObjectsRequest.Builder.setLoyaltyWalletObject(com.google.android.gms.wallet.LoyaltyWalletObject)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CreateWalletObjectsRequest.Builder#setLoyaltyWalletObject(com.google.android.gms.wallet.LoyaltyWalletObject)",
        "methodDes": "Sets the Loyalty wallet object to be created.",
        "params": {
          "loyaltyWalletObject": "the Loyalty wallet object"
        },
        "returns": "com.google.android.gms.wallet.CreateWalletObjectsRequest.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.CreateWalletObjectsRequest.Builder.setOfferWalletObject(com.google.android.gms.wallet.OfferWalletObject)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CreateWalletObjectsRequest.Builder#setOfferWalletObject(com.google.android.gms.wallet.OfferWalletObject)",
        "methodDes": "Sets the Offer wallet object to be created.",
        "params": {
          "offerWalletObject": "the Offer wallet objec"
        },
        "returns": "com.google.android.gms.wallet.CreateWalletObjectsRequest.Builder:the Builder",
        "Exceptions": {}
      }
    },
    "fields": {}
  },
  "com.google.android.gms.wallet.AutoResolvableResult": {
    "classDes": "Marks Task results which may involve showing UI to be resolved through ResolvableApiException and that support automatic resolution through the use of AutoResolveHelper.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/AutoResolvableResult",
    "methods": {
      "com.google.android.gms.wallet.AutoResolvableResult.putIntoIntent(android.content.Intent)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/AutoResolvableResult#putIntoIntent(android.content.Intent)",
        "methodDes": "Saves the intent as an extra into the given Intent. Generally speaking, any classes that implement this interface will also have a static method called getFromIntent(Intent) to do the opposite operation.",
        "params": {
          "intent": "an extra into the given Intent"
        },
        "returns": "void",
        "Exceptions": {}
      }
    },
    "fields": {}
  },
  "com.google.android.gms.wallet.Wallet.WalletOptions": {
    "classDes": "Options for using the Wallet API. To create an instance, use the Wallet.WalletOptions.Builder.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/Wallet.WalletOptions",
    "methods": {
      "com.google.android.gms.wallet.Wallet.WalletOptions.equals(java.lang.Object)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/Wallet.WalletOptions#equals(java.lang.Object)",
        "methodDes": "Override equals(Object object) method of java.lang.Object.",
        "params": {
          "other": "the input object"
        },
        "returns": "boolean:the boolean",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.Wallet.WalletOptions.getAccount()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/Wallet.WalletOptions#getAccount()",
        "methodDes": "Gets account by this object.",
        "params": {},
        "returns": "android.accounts.Account:the Account",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.Wallet.WalletOptions.hashCode()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/Wallet.WalletOptions#hashCode()",
        "methodDes": "Obtains the hash code of the object.",
        "params": {},
        "returns": "int:the int",
        "Exceptions": {}
      }
    },
    "fields": {
      "com.google.android.gms.wallet.Wallet.WalletOptions.environment": {
        "des": "The environment to use.",
        "value": "",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/Wallet.WalletOptions#public-final-int-environment"
      },
      "com.google.android.gms.wallet.Wallet.WalletOptions.theme": {
        "des": "The theme to use for Wallet screens.",
        "value": "",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/Wallet.WalletOptions#public-final-int-theme"
      }

    }
  },
  "com.google.android.gms.wallet.InstrumentInfo": {
    "classDes": "Parcelable representing more detailed information about a payment instrument.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/InstrumentInfo",
    "methods": {
      "com.google.android.gms.wallet.InstrumentInfo.getCardClass()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/InstrumentInfo#getCardClass()",
        "methodDes": "Class of a card that is either credit, debit or prepaid. See InstrumentInfo.CardClass for the expected card class values. This class should not be displayed to the user, but can be used when the details of a user\u0027s instrument are needed. An example would be selecting a processor that gives better interchange rates for certain card classes or applying a discount based on the card class. Note that class unknown may be returned if it can not be determined. Also, class will only be populated for the cards with InstrumentType VISA, MASTERCARD, DISCOVER, AMEX (See getInstrumentType() for all expected InstrumentType).",
        "params": {},
        "returns": "int:InstrumentInfo.CardClass of the instrument",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.InstrumentInfo.getInstrumentDetails()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/InstrumentInfo#getInstrumentDetails()",
        "methodDes": "Details of an instrument that has a finite set of formats. These details should not be displayed to the user, but can be used when the details of a user\u0027s instrument are needed. An example would be a customer support call when the user only knows that one of their credit cards were charged. You can rely on the format of instrument details not changing once it is defined for a given form of payment in a transaction (i.e. Instrument details of a credit card are always the last four digits of the card). However, you should be able to handle new formats that could be introduced in the future (i.e. when support is added for a new form of payment where last four credit card digits has no meaning and other information is returned). Current expected formats for elements of this array are: Credit cards return the last four digits of the card selected.",
        "params": {},
        "returns": "java.lang.String:instrument details that will not be null, but can be the empty string",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.InstrumentInfo.getInstrumentType()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/InstrumentInfo#getInstrumentType()",
        "methodDes": "Type of an instrument that has a finite set of values. This type should not be displayed to the user, but can be used when the details of a user\u0027s instrument are needed. An example would be a customer support call when the user only knows that one of their credit cards were charged. You can rely on an instrument type not changing once it is defined for a given instrument in a transaction (i.e. purchasing with a single Visa card will always return VISA). However, you should be able to handle elements that are not defined in the expected list below (i.e. when support is added for a new form of of payment not listed below). Current expected values for elements of this array are: VISA MASTERCARD DISCOVER AMEX.",
        "params": {},
        "returns": "java.lang.String:an instrument type that will be non-empty",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.InstrumentInfo.writeToParcel(android.os.Parcel,int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/InstrumentInfo#writeToParcel(android.os.Parcel, int)",
        "methodDes": "Flatten this object in to a Parcel.",
        "params": {
          "out": "The Parcel in which the object should be written",
          "flags": "Additional flags about how the object should be written"
        },
        "returns": "void",
        "Exceptions": {}
      }
    },
    "fields": {
      "com.google.android.gms.wallet.InstrumentInfo.CARD_CLASS_CREDIT": {
        "des": "A credit card.",
        "value": "1",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/InstrumentInfo#CARD_CLASS_CREDIT"
      },
      "com.google.android.gms.wallet.InstrumentInfo.CARD_CLASS_DEBIT": {
        "des": "A debit card.",
        "value": "2",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/InstrumentInfo#CARD_CLASS_DEBIT"
      },
      "com.google.android.gms.wallet.InstrumentInfo.CARD_CLASS_PREPAID": {
        "des": "A prepaid card.",
        "value": "3",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/InstrumentInfo#CARD_CLASS_PREPAID"
      },
      "com.google.android.gms.wallet.InstrumentInfo.CARD_CLASS_UNKNOWN": {
        "des": "A unknown card.",
        "value": "0",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/InstrumentInfo#CARD_CLASS_UNKNOWN"
      },
      "com.google.android.gms.wallet.InstrumentInfo.CREATOR": {
        "des": "A public CREATOR field that generates instances of your Parcelable class from a Parcel.",
        "value": "",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/InstrumentInfo#CREATOR"
      }
    }
  },
  "com.google.android.gms.wallet.TransactionInfo": {
    "classDes": "Parcelable representing the detailed info about the transaction.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/TransactionInfo",
    "methods": {
      "com.google.android.gms.wallet.TransactionInfo.getCurrencyCode()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/TransactionInfo#getCurrencyCode()",
        "methodDes": "Gets the currency code.",
        "params": {},
        "returns": "java.lang.String:the currency code",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.TransactionInfo.getTotalPrice()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/TransactionInfo#getTotalPrice()",
        "methodDes": "Gets the total price.",
        "params": {},
        "returns": "java.lang.String:the total price, or null if not set",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.TransactionInfo.getTotalPriceStatus()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/TransactionInfo#getTotalPriceStatus()",
        "methodDes": "Gets the total price status.",
        "params": {},
        "returns": "int:the total price status. See WalletConstants.TotalPriceStatus for available options",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.TransactionInfo.newBuilder()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/TransactionInfo#newBuilder()",
        "methodDes": "Builder to create a TransactionInfo.",
        "params": {},
        "returns": "com.google.android.gms.wallet.TransactionInfo.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.TransactionInfo.writeToParcel(android.os.Parcel,int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/TransactionInfo#writeToParcel(android.os.Parcel, int)",
        "methodDes": "Flatten this object in to a Parcel.",
        "params": {
          "out": "The Parcel in which the object should be written",
          "flags": "Additional flags about how the object should be written"
        },
        "returns": "void",
        "Exceptions": {}
      }
    },
    "fields": {
      "com.google.android.gms.wallet.TransactionInfo.CREATOR": {
        "des": "A public CREATOR field that generates instances of your Parcelable class from a Parcel.",
        "value": "",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/TransactionInfo#CREATOR"
      }
    }
  },
  "com.google.android.gms.wallet.AutoResolveHelper": {
    "classDes": "Helper to auto resolve Tasks that may throw ResolvableApiException to request UI being shown before returning the result. By calling resolveTask(Task, Activity, int) with your task, this helper will make sure that it shows any UI if necessary and at the end will return the result back to your activity\u0027s onActivityResult(int, int, Intent). This is useful for handling Google Play Services APIs that may have to show UI to the user before returning their results back. Note that only APIs whose results implement the AutoResolvableResult are compatible with this helper. Below is an example of an hypothetical loadFoo API that returns a FooResult but that may require the user to consent to sharing the resultData in FooResult the first time before returning it to you. public static class SampleActivity extends Activity { private static final int REQUEST_CODE_FOO \u003d 1234; @Override public onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); if (savedInstanceState \u003d\u003d null) { // Loading Foo FooClient fooClient \u003d Foo.getFooClient(...); Task fooTask \u003d fooClient.loadFoo(); // Asking AutoResolveHelper to take care of resolving // any ResolvableApiExceptions, showing UI if necessary // and just piping FooResult to onActivityResult. AutoResolveHelper.resolveTask(fooTask, this, REQUEST_CODE_FOO); } } @Override protected void onActivityResult(int requestCode, int resultCode, Intent resultData) { switch (requestCode) { case REQUEST_CODE_FOO: if (resultCode \u003d\u003d Activity.RESULT_OK) { FooResult fooResult \u003d FooResult.getFromIntent(resultData); // Result loaded, use it ... } else if (resultCode \u003d\u003d Activity.RESULT_CANCELLED) { // user cancelled ... } else if (resultCode \u003d\u003d AutoResolveHelper.RESULT_ERROR) { // there was an error, handle it or ignore ... int errorCode \u003d AutoResolvableHelper.getStatusFromIntent(resultData); // handle the error, log, ... } break; default: super.onActivityResult(requestCode, resultCode, resultData); } } } Notes from the example above: You will receive a response back with requestCode matching the one you originally passed in the call to resolveTask(Task, Activity, int). You will receive resultCode equal to RESULT_OK when the call has been successful and you should be able to retrieve the actual result object from the resultData param. By convention result classes that can be used with this helper should have a getFromIntent(Intent) method that you can use to retrieve the result object. You will receive resultCode equal to RESULT_CANCELED when the user has cancelled the UI that this helper has shown. You will receive resultCode equal to RESULT_ERROR when an error occurs resolving the result of the given Task. In that case, you may call getStatusFromIntent(Intent) passing resultData param to get the Status with the details about the error.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/AutoResolveHelper",
    "methods": {
      "com.google.android.gms.wallet.AutoResolveHelper.getStatusFromIntent(android.content.Intent)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/AutoResolveHelper#getStatusFromIntent(android.content.Intent)",
        "methodDes": "Returns the Status from the Intent received in onActivityResult(int, int, Intent). This method is expected to be called from onActivityResult(int, int, Intent) of activities passed to resolveTask(Task, Activity, int). Note this method will return null if resultCode was not set to RESULT_ERROR.",
        "params": {
          "data": "the Intent received in onActivityResult(int, int, Intent)"
        },
        "returns": "com.google.android.gms.common.api.Status:the Status",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.AutoResolveHelper.putStatusIntoIntent(android.content.Intent,com.google.android.gms.common.api.Status)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/AutoResolveHelper#putStatusIntoIntent(android.content.Intent, com.google.android.gms.common.api.Status)",
        "methodDes": "Saves the given Status as an extra in the given Intent. The saved Status can be read back by calling getStatusFromIntent(Intent).",
        "params": {
          "data": "an extra into the given Intent",
          "status": "the given Status"
        },
        "returns": "void",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.AutoResolveHelper.resolveTask(com.google.android.gms.tasks.Task\u003cTResult\u003e,android.app.Activity,int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/AutoResolveHelper#resolveTask(com.google.android.gms.tasks.Task\u003cTResult\u003e, android.app.Activity, int)",
        "methodDes": "Resolves the given task result showing UI if necessary and pipes back the final result back to the given activity\u0027s onActivityResult(int, int, Intent) callback. Note that this method adds a Fragment to your activity, so only call this method if FragmentManager is in a state where it can execute fragment transactions without state loss. The added fragment will be auto removed after the task result is delivered to your activity.",
        "params": {
          "task": "the given task result",
          "activity": "the given activity",
          "requestCode": "the activity request code"
        },
        "returns": "void",
        "Exceptions": {}
      }
    },
    "fields": {
      "com.google.android.gms.wallet.AutoResolveHelper.RESULT_ERROR": {
        "des": "The result code that an Activity passed to resolveTask(Task, Activity, int) will receive in case an error happend.",
        "value": "1",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/AutoResolveHelper#RESULT_ERROR"
      }
    }
  },
  "com.google.android.gms.wallet.WalletObjectsClient": {
    "classDes": "Entry point for Wallet objects functionality.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletObjectsClient",
    "methods": {
      "com.google.android.gms.wallet.WalletObjectsClient.createWalletObjects(com.google.android.gms.wallet.CreateWalletObjectsRequest)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletObjectsClient#createWalletObjects(com.google.android.gms.wallet.CreateWalletObjectsRequest)",
        "methodDes": "Launches a UI allowing the user to save a wallet object (loyalty card, gift card, or offer) to Google Pay. This API conforms to the protocol defined by AutoResolveHelper, so instead of handling the returned exceptions yourself when UI needs to be shown (i.e. ResolvableApiException), you should use the AutoResolveHelper to pipe the results back to onActivityResult(int, int, android.content.Intent). This frees your code from having to handle receiving the result differently depending on UI being shown or not.",
        "params": {
          "request": "An instance of CreateWalletObjectsRequest which specifies actual objects to be created"
        },
        "returns": "com.google.android.gms.tasks.Task\u003ccom.google.android.gms.wallet.AutoResolvableVoidResult\u003e:A Task that should be resolved with resolveTask(Task, Activity, int)",
        "Exceptions": {}
      }
    },
    "fields": {}
  },
  "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance.Builder": {
    "classDes": "Builder to create a LoyaltyPointsBalance. IMPORTANT: Loyalty points balance can be exactly of one of the following types: integer, string, double or money represented by currency code and amount of money in micros.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPointsBalance.Builder",
    "methods": {
      "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance.Builder.build()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPointsBalance.Builder#build()",
        "methodDes": "Builder to create a LoyaltyPointsBalance.",
        "params": {},
        "returns": "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance:the LoyaltyPointsBalance",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance.Builder.setDouble(double)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPointsBalance.Builder#setDouble(double)",
        "methodDes": "The double form of a balance.",
        "params": {
          "balance": "The double form of a balance"
        },
        "returns": "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance.Builder.setInt(int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPointsBalance.Builder#setInt(int)",
        "methodDes": "The integer form of a balance.",
        "params": {
          "balance": "The integer form of a balance"
        },
        "returns": "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance.Builder.setMoney(java.lang.String,long)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPointsBalance.Builder#setMoney(java.lang.String, long)",
        "methodDes": "The money form of a balance.",
        "params": {
          "currencyCode": "The currency code, such as \"USD\" or \"EUR.\"",
          "currencyMicros": "The unit of money amount in micros. For example, $1 USD would be represented as 1000000 micros"
        },
        "returns": "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance.Builder.setString(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPointsBalance.Builder#setString(java.lang.String)",
        "methodDes": "The string form of a balance.",
        "params": {
          "balance":"the string form of a balance"
        },
        "returns": "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance.Builder:the Builder",
        "Exceptions": {}
      }
    },
    "fields": {}
  },
  "com.google.android.gms.wallet.PaymentInstrumentType": {
    "classDes": "Payment instrument types that a merchant can support. The values match CreditCardFormFields.FopType, except UNKNOWN, which is not a valid payment instrument type for a merchant to support.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentInstrumentType",
    "methods": {
      "com.google.android.gms.wallet.PaymentInstrumentType.PaymentInstrumentType()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentInstrumentType#PaymentInstrumentType()",
        "methodDes": "Constructor of null.",
        "params": {},
        "returns": "",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentInstrumentType.getAll()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentInstrumentType#getAll()",
        "methodDes": "Gets all types by payment.",
        "params": {},
        "returns": "java.util.ArrayList\u003cjava.lang.Integer\u003e:the ArrayList",
        "Exceptions": {}
      }
    },
    "fields": {
      "com.google.android.gms.wallet.PaymentInstrumentType.AMEX": {
        "des": "Constant of AMEX.",
        "value": "3",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentInstrumentType#AMEX"
      },
      "com.google.android.gms.wallet.PaymentInstrumentType.DISCOVER": {
        "des": "Constant of DISCOVER.",
        "value": "4",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentInstrumentType#DISCOVER"
      },
      "com.google.android.gms.wallet.PaymentInstrumentType.JCB": {
        "des": "Constant of JCB.",
        "value": "5",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentInstrumentType#JCB"
      },
      "com.google.android.gms.wallet.PaymentInstrumentType.MASTER_CARD": {
        "des": "Constant of MASTER_CARD.",
        "value": "2",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentInstrumentType#MASTER_CARD"
      },
      "com.google.android.gms.wallet.PaymentInstrumentType.VISA": {
        "des": "Constant of VISA.",
        "value": "1",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentInstrumentType#VISA"
      }
    }
  },
  "com.google.android.gms.wallet.TransactionInfo.Builder": {
    "classDes": "Builder to create a TransactionInfo.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/TransactionInfo.Builder",
    "methods": {
      "com.google.android.gms.wallet.TransactionInfo.Builder.build()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/TransactionInfo.Builder#build()",
        "methodDes": "Builder to create a TransactionInfo.",
        "params": {},
        "returns": "com.google.android.gms.wallet.TransactionInfo:the actual TransactionInfo created using the data passed to the Builder object",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.TransactionInfo.Builder.setCurrencyCode(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/TransactionInfo.Builder#setCurrencyCode(java.lang.String)",
        "methodDes": "Sets the ISO 4217 alphabetic currency code of the transaction. This is a required field.",
        "params": {
          "currencyCode": "the ISO 4217 alphabetic currency code"
        },
        "returns": "com.google.android.gms.wallet.TransactionInfo.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.TransactionInfo.Builder.setTotalPrice(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/TransactionInfo.Builder#setTotalPrice(java.lang.String)",
        "methodDes": "Sets the total price of this transaction. The format of this string should follow the regex format: [0-9]+(\\.[0-9][0-9])? (e.g., \"10.45\") This field is required if total price status is set to TOTAL_PRICE_STATUS_ESTIMATED or TOTAL_PRICE_STATUS_FINAL.",
        "params": {
          "totalPrice": "the total price of this transaction"
        },
        "returns": "com.google.android.gms.wallet.TransactionInfo.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.TransactionInfo.Builder.setTotalPriceStatus(int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/TransactionInfo.Builder#setTotalPriceStatus(int)",
        "methodDes": "Sets the status of this transaction\u0027s total price. See WalletConstants.TotalPriceStatus for available options. This is a required field.",
        "params": {
          "totalPriceStatus": "the status of this transaction\u0027s total price"
        },
        "returns": "com.google.android.gms.wallet.TransactionInfo.Builder:the Builder",
        "Exceptions": {}
      }
    },
    "fields": {}
  },
  "com.google.android.gms.wallet.CardRequirements.Builder": {
    "classDes": "Builder to create a CardRequirements.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CardRequirements.Builder",
    "methods": {
      "com.google.android.gms.wallet.CardRequirements.Builder.addAllowedCardNetwork(int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CardRequirements.Builder#addAllowedCardNetwork(int)",
        "methodDes": "Adds a card network supported for this purchase. See WalletConstants.CardNetwork for available options. Allowed card networks must be explicitly set using either this method or addAllowedCardNetworks(Collection).",
        "params": {
          "allowedCardNetwork": "a card network supported for this purchase"
        },
        "returns": "com.google.android.gms.wallet.CardRequirements.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.CardRequirements.Builder.addAllowedCardNetworks(java.util.Collection\u003cjava.lang.Integer\u003e)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CardRequirements.Builder#addAllowedCardNetworks(java.util.Collection\u003cjava.lang.Integer\u003e)",
        "methodDes": "Adds a set of card networks supported for this purchase. See WalletConstants.CardNetwork for available options. Allowed card networks must be explicitly set using either this method or addAllowedCardNetwork(int).",
        "params": {
          "allowedCardNetworks": "a set of card networks supported for this purchase"
        },
        "returns": "com.google.android.gms.wallet.CardRequirements.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.CardRequirements.Builder.build()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CardRequirements.Builder#build()",
        "methodDes": "Builder to create a CardRequirements.",
        "params": {},
        "returns": "com.google.android.gms.wallet.CardRequirements:the actual CardRequirements created using the data passed to the Builder object",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.CardRequirements.Builder.setAllowPrepaidCards(boolean)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CardRequirements.Builder#setAllowPrepaidCards(boolean)",
        "methodDes": "Sets whether a prepaid card may be used for this transaction. If omitted, defaults to true.",
        "params": {
          "allowPrepaidCards": "whether a prepaid card may be used for this transaction"
        },
        "returns": "com.google.android.gms.wallet.CardRequirements.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.CardRequirements.Builder.setBillingAddressFormat(int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CardRequirements.Builder#setBillingAddressFormat(int)",
        "methodDes": "Sets billing address format. See WalletConstants.BillingAddressFormat for more info. If omitted, defaults to BILLING_ADDRESS_FORMAT_MIN. Note that you should only set the format to BILLING_ADDRESS_FORMAT_FULL when it\u0027s required to process the order since it can increase friction during the checkout process and can lead to a lower conversion rate.",
        "params": {
          "billingAddressFormat": "the billing address format"
        },
        "returns": "com.google.android.gms.wallet.CardRequirements.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.CardRequirements.Builder.setBillingAddressRequired(boolean)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CardRequirements.Builder#setBillingAddressRequired(boolean)",
        "methodDes": "Sets whether a billing address is required from the buyer. The returned billing address can be retrieved by getBillingAddress() in getCardInfo(). If omitted, defaults to false. Optionally, when a billing address is required, extra format requirements can be set through setBillingAddressFormat(int).",
        "params": {
          "billingAddressRequired": "whether a billing address is required from the buyer"
        },
        "returns": "com.google.android.gms.wallet.CardRequirements.Builder:the Builder",
        "Exceptions": {}
      }
    },
    "fields": {}
  },
  "com.google.android.gms.wallet.WalletConstants": {
    "classDes": "Collection of constant values used by the ClientLibrary.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants",
    "methods": {},
    "fields": {
      "com.google.android.gms.wallet.WalletConstants.ACTION_ENABLE_WALLET_OPTIMIZATION": {
        "des": "Name of an action to use in an IntentFilter for a BroadcastReceiver that is a signal from your application that it uses Wallet, and thus the system should make the appropriate optimizations.",
        "value": "com.google.android.gms.wallet.ENABLE_WALLET_OPTIMIZATION",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#ACTION_ENABLE_WALLET_OPTIMIZATION"
      },
      "com.google.android.gms.wallet.WalletConstants.BILLING_ADDRESS_FORMAT_FULL": {
        "des": "When this format is used, the billing address returned will be the full address.",
        "value": "1",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#BILLING_ADDRESS_FORMAT_FULL"
      },
      "com.google.android.gms.wallet.WalletConstants.BILLING_ADDRESS_FORMAT_MIN": {
        "des": "When this format is used, the billing address returned will only contain the minimal info, including name, country code, and postal code.",
        "value": "0",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#BILLING_ADDRESS_FORMAT_MIN"
      },
      "com.google.android.gms.wallet.WalletConstants.CARD_CLASS_CREDIT": {
        "des": "A credit card.",
        "value": "1",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#CARD_CLASS_CREDIT"
      },
      "com.google.android.gms.wallet.WalletConstants.CARD_CLASS_DEBIT": {
        "des": "A debit card.",
        "value": "2",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#CARD_CLASS_DEBIT"
      },
      "com.google.android.gms.wallet.WalletConstants.CARD_CLASS_PREPAID": {
        "des": "A prepaid or gift card.",
        "value": "3",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#CARD_CLASS_PREPAID"
      },
      "com.google.android.gms.wallet.WalletConstants.CARD_CLASS_UNKNOWN": {
        "des": "A unknown card.",
        "value": "0",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#CARD_CLASS_UNKNOWN"
      },
      "com.google.android.gms.wallet.WalletConstants.CARD_NETWORK_AMEX": {
        "des": "Card network American Express.",
        "value": "1",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#CARD_NETWORK_AMEX"
      },
      "com.google.android.gms.wallet.WalletConstants.CARD_NETWORK_DISCOVER": {
        "des": "Card network Discover.",
        "value": "2",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#CARD_NETWORK_DISCOVER"
      },
      "com.google.android.gms.wallet.WalletConstants.CARD_NETWORK_INTERAC": {
        "des": "Card network interac.",
        "value": "6",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#CARD_NETWORK_INTERAC"
      },
      "com.google.android.gms.wallet.WalletConstants.CARD_NETWORK_JCB": {
        "des": "Card network JCB.",
        "value": "3",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#CARD_NETWORK_JCB"
      },
      "com.google.android.gms.wallet.WalletConstants.CARD_NETWORK_MASTERCARD": {
        "des": "Card network Mastercard.",
        "value": "4",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#CARD_NETWORK_MASTERCARD"
      },
      "com.google.android.gms.wallet.WalletConstants.CARD_NETWORK_OTHER": {
        "des": "This shouldn\u0027t be passed as part of a request but it can be used as a sentinel value when applying logic related to card networks.",
        "value": "1000",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#CARD_NETWORK_OTHER"
      },
      "com.google.android.gms.wallet.WalletConstants.CARD_NETWORK_VISA": {
        "des": "Card network Visa.",
        "value": "5",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#CARD_NETWORK_VISA"
      },
      "com.google.android.gms.wallet.WalletConstants.ENVIRONMENT_PRODUCTION": {
        "des": "Environment constant for running in production with the most stringent application merchant requirements.",
        "value": "1",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#ENVIRONMENT_PRODUCTION"
      },
      "com.google.android.gms.wallet.WalletConstants.ENVIRONMENT_SANDBOX": {
        "des": "This constant is deprecated.",
        "value": "0",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#ENVIRONMENT_SANDBOX"
      },
      "com.google.android.gms.wallet.WalletConstants.ENVIRONMENT_STRICT_SANDBOX": {
        "des": "This constant is deprecated.",
        "value": "2",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#ENVIRONMENT_STRICT_SANDBOX"
      },
      "com.google.android.gms.wallet.WalletConstants.ENVIRONMENT_TEST": {
        "des": "Environment constant for running in the test environment with relaxed application /merchant requirements. This environment is suggested for early development and for easily testing the Wallet SDK.",
        "value": "3",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#ENVIRONMENT_TEST"
      },
      "com.google.android.gms.wallet.WalletConstants.ERROR_CODE_AUTHENTICATION_FAILURE": {
        "des": "Not immediately recoverable error. There was a failure in retrieving an authentication token for the buyer\u0027s Google Account. This could be because Google\u0027s AbstractAccountAuthenticator is not installed or failed to respond, or could be due to an invalid Google account, or could be caused by some internal error. Note however that this error will NOT be returned if authentication failed because of a network error or because the buyer cancelled the operation.",
        "value": "411",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#ERROR_CODE_AUTHENTICATION_FAILURE"
      },
      "com.google.android.gms.wallet.WalletConstants.ERROR_CODE_BUYER_ACCOUNT_ERROR": {
        "des": "Not immediately recoverable error. There are problems with the buyer\u0027s account (e.g closed account, unsupported country).",
        "value": "409",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#ERROR_CODE_BUYER_ACCOUNT_ERROR"
      },
      "com.google.android.gms.wallet.WalletConstants.ERROR_CODE_DEVELOPER_ERROR": {
        "des": "See Also DEVELOPER_ERROR.",
        "value": "10",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#ERROR_CODE_DEVELOPER_ERROR"
      },
      "com.google.android.gms.wallet.WalletConstants.ERROR_CODE_INTERNAL_ERROR": {
        "des": "An internal error occurred.Retrying should resolve the problem.",
        "value": "8",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#ERROR_CODE_INTERNAL_ERROR"
      },
      "com.google.android.gms.wallet.WalletConstants.ERROR_CODE_INVALID_PARAMETERS": {
        "des": "Not immediately recoverable error. The request had missing or invalid parameters.",
        "value": "404",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#ERROR_CODE_INVALID_PARAMETERS"
      },
      "com.google.android.gms.wallet.WalletConstants.ERROR_CODE_INVALID_TRANSACTION": {
        "des": "Not immediately recoverable error. loadFullWallet or changeMaskedWallet was called outside the context of a transaction. For example, loadFullWallet was called without a successful call to loadMaskedWallet.",
        "value": "410",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#ERROR_CODE_INVALID_TRANSACTION"
      },
      "com.google.android.gms.wallet.WalletConstants.ERROR_CODE_MERCHANT_ACCOUNT_ERROR": {
        "des": "Not immediately recoverable error. Your app needs to be enabled for access to this API, please see documentation for instructions on how to get access.",
        "value": "405",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#ERROR_CODE_MERCHANT_ACCOUNT_ERROR"
      },
      "com.google.android.gms.wallet.WalletConstants.ERROR_CODE_SERVICE_UNAVAILABLE": {
        "des": "Not immediately recoverable error. The service is temporarily off-line for all requests.",
        "value": "402",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#ERROR_CODE_SERVICE_UNAVAILABLE"
      },
      "com.google.android.gms.wallet.WalletConstants.ERROR_CODE_SPENDING_LIMIT_EXCEEDED": {
        "des": "This constant is deprecated.",
        "value": "406",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#ERROR_CODE_SPENDING_LIMIT_EXCEEDED"
      },
      "com.google.android.gms.wallet.WalletConstants.ERROR_CODE_UNKNOWN": {
        "des": "Not immediately recoverable error. An unknown type of error has occurred.",
        "value": "413",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#ERROR_CODE_UNKNOWN"
      },
      "com.google.android.gms.wallet.WalletConstants.ERROR_CODE_UNSUPPORTED_API_VERSION": {
        "des": "Not immediately recoverable error. The server API version of the request is no longer supported. This error is not recoverable and should be treated as fatal.",
        "value": "412",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#ERROR_CODE_UNSUPPORTED_API_VERSION"
      },
      "com.google.android.gms.wallet.WalletConstants.EXTRA_ERROR_CODE": {
        "des": "Extra for retrieving an error code from the Intent passed to onActivityResult.",
        "value": "com.google.android.gms.wallet.EXTRA_ERROR_CODE",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#EXTRA_ERROR_CODE"
      },
      "com.google.android.gms.wallet.WalletConstants.EXTRA_IS_READY_TO_PAY": {
        "des": "Extra for retrieving a boolean indicating with high, but not complete, confidence that the user is capable of making a payment using Google Pay.",
        "value": "com.google.android.gms.wallet.EXTRA_IS_READY_TO_PAY",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#EXTRA_IS_READY_TO_PAY"
      },
      "com.google.android.gms.wallet.WalletConstants.EXTRA_IS_USER_PREAUTHORIZED": {
        "des": "Extra for retrieving a boolean indicating if the user has pre-authorized your app or not.",
        "value": "com.google.android.gm.wallet.EXTRA_IS_USER_PREAUTHORIZED",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#EXTRA_IS_USER_PREAUTHORIZED"
      },
      "com.google.android.gms.wallet.WalletConstants.METADATA_TAG_WALLET_API_ENABLED": {
        "des": "Name of the metadata tag that is a signal from your application that it uses Wallet APIs. Note: In future versions this metadata tag will be required in your application manifest to use Wallet APIs in your app.",
        "value": "com.google.android.gms.wallet.api.enabled",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#METADATA_TAG_WALLET_API_ENABLED"
      },
      "com.google.android.gms.wallet.WalletConstants.PAYMENT_METHOD_CARD": {
        "des": "This payment method represents a credit or debit card, which contains the card number, and the expiration date.",
        "value": "1",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#PAYMENT_METHOD_CARD"
      },
      "com.google.android.gms.wallet.WalletConstants.PAYMENT_METHOD_TOKENIZATION_TYPE_DIRECT": {
        "des": "When this type is used the payment method selected by the buyer will be returned directly to the integrator.",
        "value": "3",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#PAYMENT_METHOD_TOKENIZATION_TYPE_DIRECT"
      },
      "com.google.android.gms.wallet.WalletConstants.PAYMENT_METHOD_TOKENIZATION_TYPE_NETWORK_TOKEN": {
        "des": "When this type is used the card selected by the buyer will be tokenized using network token APIs.",
        "value": "2",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#PAYMENT_METHOD_TOKENIZATION_TYPE_NETWORK_TOKEN"
      },
      "com.google.android.gms.wallet.WalletConstants.PAYMENT_METHOD_TOKENIZATION_TYPE_PAYMENT_GATEWAY": {
        "des": "When this type is used the payment method selected by the buyer will be tokenized using the payment gateway API. In this case the corresponding PaymentData will contain the token that the integrator can then use directly with their gateway to process the charge. See PaymentMethodTokenizationParameters for more details.",
        "value": "1",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#PAYMENT_METHOD_TOKENIZATION_TYPE_PAYMENT_GATEWAY"
      },
      "com.google.android.gms.wallet.WalletConstants.PAYMENT_METHOD_TOKENIZED_CARD": {
        "des": "This payment method represents the tokenized card in Google Pay, which contains a card number and cryptogram associated with the device and the token expiration date.",
        "value": "2",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#PAYMENT_METHOD_TOKENIZED_CARD"
      },
      "com.google.android.gms.wallet.WalletConstants.PAYMENT_METHOD_UNKNOWN": {
        "des": "Unknown payment method.",
        "value": "0",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#PAYMENT_METHOD_UNKNOWN"
      },
      "com.google.android.gms.wallet.WalletConstants.RESULT_ERROR": {
        "des": "Response code passed to onActivityResult in the case of an error.",
        "value": "1",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#RESULT_ERROR"
      },
      "com.google.android.gms.wallet.WalletConstants.THEME_DARK": {
        "des": "Deprecated theme constant passed to setTheme(int) which should not be used. This constant was available in older versions, but no dark theme was implemented in these versions. For compatibility reasons, a light theme will continue to be used for this constant.",
        "value": "0",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#THEME_DARK"
      },
      "com.google.android.gms.wallet.WalletConstants.THEME_HOLO_DARK": {
        "des": "Theme constant passed to setTheme(int) to use Holo Dark theme for Wallet on Android OS with SDK_INT \u003e\u003d HONEYCOMB.",
        "value": "0",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#THEME_HOLO_DARK"
      },
      "com.google.android.gms.wallet.WalletConstants.THEME_HOLO_LIGHT": {
        "des": "Theme constant passed to setTheme(int) to use Holo Light theme for Wallet on Android OS with SDK_INT \u003e\u003d HONEYCOMB.",
        "value": "1",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#THEME_HOLO_LIGHT"
      },
      "com.google.android.gms.wallet.WalletConstants.THEME_LIGHT": {
        "des": "Theme constant passed to setTheme(int) to use a light theme for Wallet screens.",
        "value": "1",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#THEME_LIGHT"
      },
      "com.google.android.gms.wallet.WalletConstants.TOTAL_PRICE_STATUS_ESTIMATED": {
        "des": "The total price is an estimated price. The final price may still change depending on the selected shipping address.",
        "value": "2",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#TOTAL_PRICE_STATUS_ESTIMATED"
      },
      "com.google.android.gms.wallet.WalletConstants.TOTAL_PRICE_STATUS_FINAL": {
        "des": "The total price is the final total price of the transaction, and will not change based on the selection made by the buyer.",
        "value": "3",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#TOTAL_PRICE_STATUS_FINAL"
      },
      "com.google.android.gms.wallet.WalletConstants.TOTAL_PRICE_STATUS_NOT_CURRENTLY_KNOWN": {
        "des": "The total price is not known currently.",
        "value": "1",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants#TOTAL_PRICE_STATUS_NOT_CURRENTLY_KNOWN"
      }
    }
  },
  "com.google.android.gms.wallet.wobs.LabelValue": {
    "classDes": "Parcelable representing label value.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LabelValue",
    "methods": {
      "com.google.android.gms.wallet.wobs.LabelValue.LabelValue(java.lang.String,java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LabelValue#LabelValue(java.lang.String, java.lang.String)",
        "methodDes": "Constructs a label to describe wallet object\u0027s custom properties.",
        "params": {
          "label": "the name of the label",
          "value": "the value of the label"
        },
        "returns": "",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LabelValue.getLabel()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LabelValue#getLabel()",
        "methodDes": "Gets label by this object.",
        "params": {},
        "returns": "java.lang.String:the name of the label",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LabelValue.getValue()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LabelValue#getValue()",
        "methodDes": "Gets value by this object.",
        "params": {},
        "returns": "java.lang.String:the value of the label",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LabelValue.writeToParcel(android.os.Parcel,int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LabelValue#writeToParcel(android.os.Parcel, int)",
        "methodDes": "Flatten this object in to a Parcel.",
        "params": {
          "dest": "The Parcel in which the object should be written",
          "flags": "Additional flags about how the object should be written"
        },
        "returns": "void",
        "Exceptions": {}
      }
    },
    "fields": {
      "com.google.android.gms.wallet.wobs.LabelValue.CREATOR": {
        "des": "A public CREATOR field that generates instances of your Parcelable class from a Parcel.",
        "value": "",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LabelValue#CREATOR"
      }
    }
  },
  "com.google.android.gms.wallet.CardInfo": {
    "classDes": "Parcelable representing more detailed information about a payment card.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CardInfo",
    "methods": {
      "com.google.android.gms.wallet.CardInfo.getBillingAddress()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CardInfo#getBillingAddress()",
        "methodDes": "Gets the billing address associated with buyer\u0027s payment card. Note this billing address will only be populated when billing address is set as required through setBillingAddressRequired(boolean). Also, how the billing address will look like also depends on the optional setting in setBillingAddressFormat(int).",
        "params": {},
        "returns": "com.google.android.gms.identity.intents.model.UserAddress:the billing address if requested, or null otherwise",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.CardInfo.getCardClass()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CardInfo#getCardClass()",
        "methodDes": "Gets the card class which can be either credit, debit or prepaid. See WalletConstants.CardClass for the expected card class values. This class should not be displayed to the buyer, but can be used when the details of a buyer\u0027s card are needed. An example would be selecting a processor that gives better interchange rates or applying a discount depending on the card class.",
        "params": {},
        "returns": "int:WalletConstants.CardClass of the buyer\u0027s selected card, but can be unknown if it can not be determined",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.CardInfo.getCardDescription()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CardInfo#getCardDescription()",
        "methodDes": "Gets a user-facing message to describe the card selected for funding this payment transaction. You are required to show this to inform the buyer of their funding source. Please refer to the documentation for more information. IMPORTANT: Do not attempt to parse the contents of this string as the format, contents and length may change at any time. If you need finer grain details, see getCardNetwork(), getCardDetails(), and getCardClass() for stable card information.",
        "params": {},
        "returns": "java.lang.String:a user-facing message about the selected card used for payment",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.CardInfo.getCardDetails()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CardInfo#getCardDetails()",
        "methodDes": "Gets the last four digits of the selected card. These details should not be displayed to the buyer, but can be used when the details of a buyer\u0027s card are needed. An example would be for customer support to help the buyer identify the card used for this transaction.",
        "params": {},
        "returns": "java.lang.String:the card details",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.CardInfo.getCardNetwork()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CardInfo#getCardNetwork()",
        "methodDes": "Gets the card network of the selected card. Card network has a finite set of values. This card network should not be displayed to the buyer, but can be used when the details of a buyer\u0027s card are needed. An example would be for customer support to help the buyer identify the card used for this transaction. You can rely on the card network not changing once it is defined for a given card in a transaction (i.e. purchasing with a single Visa card will always return VISA). Examples of currently expected values for elements returned are: VISA MASTERCARD DISCOVER AMEX.",
        "params": {},
        "returns": "java.lang.String:the card network of the buyer\u0027s selected card",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.CardInfo.writeToParcel(android.os.Parcel,int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CardInfo#writeToParcel(android.os.Parcel, int)",
        "methodDes": "Flatten this object in to a Parcel.",
        "params": {
          "out": "The Parcel in which the object should be written",
          "flags": "Additional flags about how the object should be written"
        },
        "returns": "void",
        "Exceptions": {}
      }
    },
    "fields": {
      "com.google.android.gms.wallet.CardInfo.CREATOR": {
        "des": "A public CREATOR field that generates instances of your Parcelable class from a Parcel.",
        "value": "",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CardInfo#CREATOR"
      }
    }
  },
  "com.google.android.gms.wallet.OfferWalletObject.Builder": {
    "classDes": "Builder to create a OfferWalletObject.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder",
    "methods": {
      "com.google.android.gms.wallet.OfferWalletObject.Builder.addImageModuleDataMainImageUri(com.google.android.gms.wallet.wobs.UriData)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder#addImageModuleDataMainImageUri(com.google.android.gms.wallet.wobs.UriData)",
        "methodDes": "Adds an image module data image uri. If image modules data is also defined on the class, the ones defined here on the object will be displayed first, followed by those defined on the class.",
        "params": {
          "uri": "an image module data image uri"
        },
        "returns": "com.google.android.gms.wallet.OfferWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.Builder.addImageModuleDataMainImageUris(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.UriData\u003e)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder#addImageModuleDataMainImageUris(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.UriData\u003e)",
        "methodDes": "Adds a collection of image module data image uris. If image modules data is also defined on the class, the ones defined here on the object will be displayed first, followed by those defined on the class.",
        "params": {
          "uris": "a collection of image module data image uris"
        },
        "returns": "com.google.android.gms.wallet.OfferWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.Builder.addInfoModuleDataLabelValueRow(com.google.android.gms.wallet.wobs.LabelValueRow)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder#addInfoModuleDataLabelValueRow(com.google.android.gms.wallet.wobs.LabelValueRow)",
        "methodDes": "Adds an info module data label value row. If info module data is also defined on the class, the one defined here on the object will be displayed first, followed by the one defined on the class.",
        "params": {
          "row": "an info module data label value row"
        },
        "returns": "com.google.android.gms.wallet.OfferWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.Builder.addInfoModuleDataLabelValueRows(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.LabelValueRow\u003e)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder#addInfoModuleDataLabelValueRows(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.LabelValueRow\u003e)",
        "methodDes": "Adds a collection of info module data label value rows. If info module data is also defined on the class, the one defined here on the object will be displayed first, followed by the one defined on the class.",
        "params": {
          "rows": "a collection of info module data label value rows"
        },
        "returns": "com.google.android.gms.wallet.OfferWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.Builder.addLinksModuleDataUri(com.google.android.gms.wallet.wobs.UriData)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder#addLinksModuleDataUri(com.google.android.gms.wallet.wobs.UriData)",
        "methodDes": "Add a links module data. If links module data is also defined on the class, the one defined here on the object will be displayed first, followed by those defined on the class.",
        "params": {
          "uri": "a links module data"
        },
        "returns": "com.google.android.gms.wallet.OfferWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.Builder.addLinksModuleDataUris(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.UriData\u003e)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder#addLinksModuleDataUris(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.UriData\u003e)",
        "methodDes": "Adds a collection of links module data. If links module data is also defined on the class, the one defined here on the object will be displayed first, followed by those defined on the class.",
        "params": {
          "uris": "a collection of links module data"
        },
        "returns": "com.google.android.gms.wallet.OfferWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.Builder.addLocation(com.google.android.gms.maps.model.LatLng)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder#addLocation(com.google.android.gms.maps.model.LatLng)",
        "methodDes": "Adds the location where the Wallet Object can be used. The Wallet Object platform uses this information to trigger geolocated notifications to users. Note that locations in the object override locations in the class which override locations in the Google Places ID.",
        "params": {
          "location": "the location where the Wallet Object can be used"
        },
        "returns": "com.google.android.gms.wallet.OfferWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.Builder.addLocations(java.util.Collection\u003ccom.google.android.gms.maps.model.LatLng\u003e)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder#addLocations(java.util.Collection\u003ccom.google.android.gms.maps.model.LatLng\u003e)",
        "methodDes": "Adds the collection of locations where the Wallet Object can be used. The Wallet Object platform uses this information to trigger geolocated notifications to users. Note that locations in the object override locations in the class which override locations in the Google Places ID.",
        "params": {
          "locations": "the collection of locations where the Wallet Object can be used"
        },
        "returns": "com.google.android.gms.wallet.OfferWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.Builder.addMessage(com.google.android.gms.wallet.wobs.WalletObjectMessage)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder#addMessage(com.google.android.gms.wallet.wobs.WalletObjectMessage)",
        "methodDes": "Adds a message to be associated with this object. All users of this Wallet Object will receive its associated messages.",
        "params": {
          "message": "a message to be associated with this object"
        },
        "returns": "com.google.android.gms.wallet.OfferWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.Builder.addMessages(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.WalletObjectMessage\u003e)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder#addMessages(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.WalletObjectMessage\u003e)",
        "methodDes": "Adds a collection of messages to be associated with this object. All users of this Wallet Object will receive its associated messages.",
        "params": {
          "messages": "a collection of messages to be associated with this object"
        },
        "returns": "com.google.android.gms.wallet.OfferWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.Builder.addTextModuleData(com.google.android.gms.wallet.wobs.TextModuleData)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder#addTextModuleData(com.google.android.gms.wallet.wobs.TextModuleData)",
        "methodDes": "Adds a text module data. If text module data is also defined on the class, the ones defined here on the object will be displayed first, followed by those defined on the class.",
        "params": {
          "data": "a text module data"
        },
        "returns": "com.google.android.gms.wallet.OfferWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.Builder.addTextModulesData(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.TextModuleData\u003e)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder#addTextModulesData(java.util.Collection\u003ccom.google.android.gms.wallet.wobs.TextModuleData\u003e)",
        "methodDes": "Adds a collection of text modules data. If text module data is also defined on the class, the ones defined here on the object will be displayed first, followed by those defined on the class.",
        "params": {
          "data": "a collection of text modules data"
        },
        "returns": "com.google.android.gms.wallet.OfferWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.Builder.build()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder#build()",
        "methodDes": "Builder to create a OfferWalletObject.",
        "params": {},
        "returns": "com.google.android.gms.wallet.OfferWalletObject:the OfferWalletObject",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.Builder.setBarcodeAlternateText(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder#setBarcodeAlternateText(java.lang.String)",
        "methodDes": "Sets barcode alternate text with OfferWalletObject.",
        "params": {
          "barcodeAlternateText": "the barcode alternate text"
        },
        "returns": "com.google.android.gms.wallet.OfferWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.Builder.setBarcodeLabel(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder#setBarcodeLabel(java.lang.String)",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {
          "barcodeLabel": "the barcode label"
        },
        "returns": "com.google.android.gms.wallet.OfferWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.Builder.setBarcodeType(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder#setBarcodeType(java.lang.String)",
        "methodDes": "Sets the type of the barcode. Acceptable values are: \"aztec\" \"codabar\" \"code128\" \"code39\" \"dataMatrix\" \"ean13\" \"ean8\" \"itf14\" \"pdf417\" \"qrCode\" \"textOnly\" \"upcA\" \"upcE\".",
        "params": {
          "barcodeType": "the barcode type"
        },
        "returns": "com.google.android.gms.wallet.OfferWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.Builder.setBarcodeValue(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder#setBarcodeValue(java.lang.String)",
        "methodDes": "Sets the value encoded in the barcode.",
        "params": {
          "barcodeValue": "the value encoded in the barcode"
        },
        "returns": "com.google.android.gms.wallet.OfferWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.Builder.setClassId(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder#setClassId(java.lang.String)",
        "methodDes": "Sets the id of the class associated with this object.",
        "params": {
          "classId": "the id of the class associated with this object"
        },
        "returns": "com.google.android.gms.wallet.OfferWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.Builder.setId(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder#setId(java.lang.String)",
        "methodDes": "Sets Id with OfferWalletObject.",
        "params": {
          "id": "the id of this object"
        },
        "returns": "com.google.android.gms.wallet.OfferWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.Builder.setInfoModuleDataHexBackgroundColor(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder#setInfoModuleDataHexBackgroundColor(java.lang.String)",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {
          "color": "the background color"
        },
        "returns": "com.google.android.gms.wallet.OfferWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.Builder.setInfoModuleDataHexFontColor(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder#setInfoModuleDataHexFontColor(java.lang.String)",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {
          "color": "the color for the font"
        },
        "returns": "com.google.android.gms.wallet.OfferWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.Builder.setInfoModuleDataShowLastUpdateTime(boolean)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder#setInfoModuleDataShowLastUpdateTime(boolean)",
        "methodDes": "Sets the flag which determines whether to display the last update time of the Wallet Object.",
        "params": {
          "show": "the flag which determines"
        },
        "returns": "com.google.android.gms.wallet.OfferWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.Builder.setIssuerName(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder#setIssuerName(java.lang.String)",
        "methodDes": "Sets the issuer name of this offer object. This field is required and should match issuer name specified for the corresponding offer class of the offer object being created. It will be displayed to the user in the accepting offer object confirmation screen.",
        "params": {
          "issuerName": "the issuer name of this offer object"
        },
        "returns": "com.google.android.gms.wallet.OfferWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.Builder.setRedemptionCode(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder#setRedemptionCode(java.lang.String)",
        "methodDes": "Sets the redemption code of the offer wallet object.",
        "params": {
          "redemptionCode": "The redemption code of the offer wallet object"
        },
        "returns": "com.google.android.gms.wallet.OfferWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.Builder.setState(int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder#setState(int)",
        "methodDes": "Sets offer object state. Supported states are defined by WalletObjectsConstants.State.",
        "params": {
          "state": "offer object state"
        },
        "returns": "com.google.android.gms.wallet.OfferWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.Builder.setTitle(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder#setTitle(java.lang.String)",
        "methodDes": "Sets the offer title. This field is required and should match the title specified for the corresponding offer class of the offer object being created. It will be displayed to the user in the accepting offer object confirmation screen.",
        "params": {
          "title": "the offer title"
        },
        "returns": "com.google.android.gms.wallet.OfferWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.OfferWalletObject.Builder.setValidTimeInterval(com.google.android.gms.wallet.wobs.TimeInterval)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder#setValidTimeInterval(com.google.android.gms.wallet.wobs.TimeInterval)",
        "methodDes": "Sets the time period this object will be active and can be used. An object\u0027s state will be changed to expired when this time period has passed.",
        "params": {
          "interval": "the time period this object will be active and can be used"
        },
        "returns": "com.google.android.gms.wallet.OfferWalletObject.Builder:the Builder",
        "Exceptions": {}
      }
    },
    "fields": {}
  },
  "com.google.android.gms.wallet.WalletConstants.CardNetwork": {
    "classDes": "Credit card networks. Different APIs may support only a subset of these. Available options: CARD_NETWORK_AMEX CARD_NETWORK_DISCOVER CARD_NETWORK_JCB CARD_NETWORK_MASTERCARD CARD_NETWORK_VISA CARD_NETWORK_INTERAC CARD_NETWORK_OTHER When used with Google Pay, the following networks use EMV cryptograms instead of 3DS cryptograms as part of the payment credentials: CARD_NETWORK_INTERAC See Also EMV (Wikipedia) 3-D_Secure (Wikipedia).",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants.CardNetwork",
    "methods": {},
    "fields": {
      "com.google.android.gms.wallet.WalletConstants.CardNetwork.AMEX": {
        "des": "Deprecated. Use CARD_NETWORK_AMEX instead.",
        "value": "1",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants.CardNetwork#AMEX"
      },
      "com.google.android.gms.wallet.WalletConstants.CardNetwork.DISCOVER": {
        "des": "Deprecated. Use CARD_NETWORK_DISCOVER instead.",
        "value": "2",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants.CardNetwork#DISCOVER"
      },
      "com.google.android.gms.wallet.WalletConstants.CardNetwork.INTERAC": {
        "des": "Deprecated. Use CARD_NETWORK_INTERAC instead.",
        "value": "6",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants.CardNetwork#INTERAC"
      },
      "com.google.android.gms.wallet.WalletConstants.CardNetwork.JCB": {
        "des": "Deprecated. Use CARD_NETWORK_JCB instead.",
        "value": "3",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants.CardNetwork#JCB"
      },
      "com.google.android.gms.wallet.WalletConstants.CardNetwork.MASTERCARD": {
        "des": "Deprecated. Use CARD_NETWORK_MASTERCARD instead.",
        "value": "4",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants.CardNetwork#MASTERCARD"
      },
      "com.google.android.gms.wallet.WalletConstants.CardNetwork.OTHER": {
        "des": "Deprecated. Use CARD_NETWORK_OTHER instead.",
        "value": "1000",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants.CardNetwork#OTHER"
      },
      "com.google.android.gms.wallet.WalletConstants.CardNetwork.VISA": {
        "des": "Deprecated. Use CARD_NETWORK_VISA instead.",
        "value": "5",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants.CardNetwork#VISA"
      }
    }
  },
  "com.google.android.gms.wallet.CreateWalletObjectsRequest": {
    "classDes": "Parcelable representing request to create wallet objects.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CreateWalletObjectsRequest",
    "methods": {
      "com.google.android.gms.wallet.CreateWalletObjectsRequest.CreateWalletObjectsRequest(com.google.android.gms.wallet.LoyaltyWalletObject)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CreateWalletObjectsRequest#public-createwalletobjectsrequest-loyaltywalletobject-loyaltywalletobject",
        "methodDes": "This constructor is deprecated. Use newBuilder() to create a CreateWalletObjectsRequest.Builder instead.",
        "params": {
          "giftCardWalletObject": "the loyalty card to be created"
        },
        "returns": "",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.CreateWalletObjectsRequest.CreateWalletObjectsRequest(com.google.android.gms.wallet.OfferWalletObject)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CreateWalletObjectsRequest#public-createwalletobjectsrequest-offerwalletobject-offerwalletobject",
        "methodDes": "This constructor is deprecated. Use newBuilder() to create a CreateWalletObjectsRequest.Builder instead.",
        "params": {
          "giftCardWalletObject": "the offer object to be created"
        },
        "returns": "",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.CreateWalletObjectsRequest.CreateWalletObjectsRequest(com.google.android.gms.wallet.GiftCardWalletObject)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CreateWalletObjectsRequest#public-createwalletobjectsrequest-giftcardwalletobject-giftcardwalletobject",
        "methodDes": "This constructor is deprecated. Use newBuilder() to create a CreateWalletObjectsRequest.Builder instead.",
        "params": {
          "giftCardWalletObject": "the gift card to be created"
        },
        "returns": "",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.CreateWalletObjectsRequest.getCreateMode()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CreateWalletObjectsRequest#getCreateMode()",
        "methodDes": "Gets The creation mode that will be used when the request is made.",
        "params": {},
        "returns": "int:The creation mode that will be used when the request is made",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.CreateWalletObjectsRequest.getGiftCardWalletObject()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CreateWalletObjectsRequest#getGiftCardWalletObject()",
        "methodDes": "Gets the gift card wallet object.",
        "params": {},
        "returns": "com.google.android.gms.wallet.GiftCardWalletObject:the GiftCardWalletObject",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.CreateWalletObjectsRequest.getLoyaltyWalletObject()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CreateWalletObjectsRequest#getLoyaltyWalletObject()",
        "methodDes": "Gets the loyalty wallet object.",
        "params": {},
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject:the LoyaltyWalletObject",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.CreateWalletObjectsRequest.getOfferWalletObject()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CreateWalletObjectsRequest#getOfferWalletObject()",
        "methodDes": "Gets the offer wallet object.",
        "params": {},
        "returns": "com.google.android.gms.wallet.OfferWalletObject:the OfferWalletObject",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.CreateWalletObjectsRequest.newBuilder()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CreateWalletObjectsRequest#newBuilder()",
        "methodDes": "Create a CreateWalletObjectsRequest.Builder for building a CreateWalletObjectsRequest.",
        "params": {},
        "returns": "com.google.android.gms.wallet.CreateWalletObjectsRequest.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.CreateWalletObjectsRequest.writeToParcel(android.os.Parcel,int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CreateWalletObjectsRequest#writeToParcel(android.os.Parcel, int)",
        "methodDes": "Flatten this object in to a Parcel.",
        "params": {
          "dest": "The Parcel in which the object should be written",
          "flags": "Additional flags about how the object should be written"
        },
        "returns": "void",
        "Exceptions": {}
      }
    },
    "fields": {
      "com.google.android.gms.wallet.CreateWalletObjectsRequest.REQUEST_IMMEDIATE_SAVE": {
        "des": "Constants of REQUEST_IMMEDIATE_SAVE.",
        "value": "1",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CreateWalletObjectsRequest#REQUEST_IMMEDIATE_SAVE"
      },
      "com.google.android.gms.wallet.CreateWalletObjectsRequest.SHOW_SAVE_PROMPT": {
        "des": "Constants of SHOW_SAVE_PROMPT.",
        "value": "0",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CreateWalletObjectsRequest#SHOW_SAVE_PROMPT"
      },
      "com.google.android.gms.wallet.CreateWalletObjectsRequest.CREATOR": {
        "des": "A public CREATOR field that generates instances of your Parcelable class from a Parcel.",
        "value": "",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/CreateWalletObjectsRequest#CREATOR"
      }
    }
  },
  "com.google.android.gms.wallet.ShippingAddressRequirements.Builder": {
    "classDes": "Builder to create a ShippingAddressRequirements.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/ShippingAddressRequirements.Builder",
    "methods": {
      "com.google.android.gms.wallet.ShippingAddressRequirements.Builder.addAllowedCountryCode(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/ShippingAddressRequirements.Builder#addAllowedCountryCode(java.lang.String)",
        "methodDes": "Adds a country code of the country to which shipping is allowed in this transaction. If not specified here nor via addAllowedCountryCodes(Collection), all countries are considered to be allowed.",
        "params": {
          "allowedCountryCode": "an ISO 3166-1 alpha-2 formatted country code (e.g., \"US\", \"CA\", \"JP\")"
        },
        "returns": "com.google.android.gms.wallet.ShippingAddressRequirements.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.ShippingAddressRequirements.Builder.addAllowedCountryCodes(java.util.Collection\u003cjava.lang.String\u003e)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/ShippingAddressRequirements.Builder#addAllowedCountryCodes(java.util.Collection\u003cjava.lang.String\u003e)",
        "methodDes": "Adds a collection of country codes of the countries to which shipping is allowed in this transaction. If not specified here nor via addAllowedCountryCode(String), all countries are considered to be allowed.",
        "params": {
          "allowedCountryCodes": "a collection of ISO 3166-1 alpha-2 formatted country code (e.g., \"US\", \"CA\", \"JP\")"
        },
        "returns": "com.google.android.gms.wallet.ShippingAddressRequirements.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.ShippingAddressRequirements.Builder.build()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/ShippingAddressRequirements.Builder#build()",
        "methodDes": "Builder to create a ShippingAddressRequirements.",
        "params": {},
        "returns": "com.google.android.gms.wallet.ShippingAddressRequirements:the actual ShippingAddressRequirements created using the data passed to the Builder object",
        "Exceptions": {}
      }
    },
    "fields": {}
  },
  "com.google.android.gms.wallet.wobs.LabelValueRow": {
    "classDes": "Parcelable representing label value row data.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LabelValueRow",
    "methods": {
      "com.google.android.gms.wallet.wobs.LabelValueRow.getColumns()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LabelValueRow#getColumns()",
        "methodDes": "Gets cloumns by this object.",
        "params": {},
        "returns": "java.util.ArrayList\u003ccom.google.android.gms.wallet.wobs.LabelValue\u003e:the columns",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LabelValueRow.getHexBackgroundColor()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LabelValueRow#getHexBackgroundColor()",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {},
        "returns": "java.lang.String:the color of the row\u0027s background",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LabelValueRow.getHexFontColor()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LabelValueRow#getHexFontColor()",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {},
        "returns": "java.lang.String:the color of the row\u0027s font",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LabelValueRow.newBuilder()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LabelValueRow#newBuilder()",
        "methodDes": "Builder to create an LabelValueRow.",
        "params": {},
        "returns": "com.google.android.gms.wallet.wobs.LabelValueRow.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LabelValueRow.writeToParcel(android.os.Parcel,int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LabelValueRow#writeToParcel(android.os.Parcel, int)",
        "methodDes": "Flatten this object in to a Parcel.",
        "params": {
          "dest": "The Parcel in which the object should be written",
          "flags": "Additional flags about how the object should be written"
        },
        "returns": "void",
        "Exceptions": {}
      }
    },
    "fields": {
      "com.google.android.gms.wallet.wobs.LabelValueRow.CREATOR": {
        "des": "A public CREATOR field that generates instances of your Parcelable class from a Parcel.",
        "value": "",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LabelValueRow#CREATOR"
      }
    }
  },
  "com.google.android.gms.wallet.wobs.TimeInterval": {
    "classDes": "Parcelable representing a time interval.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/TimeInterval",
    "methods": {
      "com.google.android.gms.wallet.wobs.TimeInterval.TimeInterval(long,long)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/TimeInterval#TimeInterval(long, long)",
        "methodDes": "Creates an instance of TimeInterval defined by given start and end timestamps.",
        "params": {
          "startTimestamp": "Start time of the interval in milliseconds since epoch",
          "endTimestamp": "End time of the interval in milliseconds since epoch"
        },
        "returns": "",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.TimeInterval.getEndTimestamp()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/TimeInterval#getEndTimestamp()",
        "methodDes": "Gets end timestamp from this instance.",
        "params": {},
        "returns": "long:the end timestamp",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.TimeInterval.getStartTimestamp()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/TimeInterval#getStartTimestamp()",
        "methodDes": "Gets start timestamp from this instance.",
        "params": {},
        "returns": "long:the start timestamp",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.TimeInterval.writeToParcel(android.os.Parcel,int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/TimeInterval#writeToParcel(android.os.Parcel, int)",
        "methodDes": "Flatten this object in to a Parcel.",
        "params": {
          "dest": "The Parcel in which the object should be written",
          "flags": "Additional flags about how the object should be written"
        },
        "returns": "void",
        "Exceptions": {}
      }
    },
    "fields": {
      "com.google.android.gms.wallet.wobs.TimeInterval.CREATOR": {
        "des": "A public CREATOR field that generates instances of your Parcelable class from a Parcel.",
        "value": "",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/TimeInterval#CREATOR"
      }
    }
  },
  "com.google.android.gms.wallet.PaymentsClient": {
    "classDes": "Client for interacting with the Google Pay API. See GoogleApi for details about how the connection between your app and Google Play services is managed.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentsClient",
    "methods": {
      "com.google.android.gms.wallet.PaymentsClient.isReadyToPay(com.google.android.gms.wallet.IsReadyToPayRequest)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentsClient#isReadyToPay(com.google.android.gms.wallet.IsReadyToPayRequest)",
        "methodDes": "Determines if the user can make payments using the Google Pay API. We recommend to call this method before showing an option to pay using the Google Pay API. This API checks the following minimum requirements to finish a transaction using the Google Pay API: Device is running on a supported Android system version and also has a supported version of Google Play services installed. Google Pay API has launched in the user\u0027s country. User either has or can add a card in flow according to the specifications given in the IsReadyToPayRequest. Note that the requirements mentioned above are non-exhaustive and may change over time.",
        "params": {
          "request": "An instance of IsReadyToPayRequest used to specify additional filtering criteria"
        },
        "returns": "com.google.android.gms.tasks.Task<java.lang.Boolean>:the boolean",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentsClient.loadPaymentData(com.google.android.gms.wallet.PaymentDataRequest)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentsClient#loadPaymentData(com.google.android.gms.wallet.PaymentDataRequest)",
        "methodDes": "Requests PaymentData, which contains the necessary information to complete a payment. Note that this action will generally require UI to be shown to the users so they can select a payment method. This API conforms to the protocol defined by AutoResolveHelper. Instead of handling the returned exceptions yourself when the Google Pay payment sheet needs to be shown (i.e. ResolvableApiException), you should use the AutoResolveHelper to pipe the results back to onActivityResult(int, int, android.content.Intent). This implementation frees your code from having to handle receiving the result differently depending on the display of the Google Pay payment sheet.",
        "params": {
          "request": "An instance of PaymentDataRequest used to specify additional settings"
        },
        "returns": "com.google.android.gms.tasks.Task\u003ccom.google.android.gms.wallet.PaymentData\u003e:the Task",
        "Exceptions": {}
      }
    },
    "fields": {}
  },
  "com.google.android.gms.wallet.PaymentDataRequest": {
    "classDes": "Parcelable representing a payment data request, which provides necessary information to support a payment. See the available fields for more information.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentDataRequest",
    "methods": {
      "com.google.android.gms.wallet.PaymentDataRequest.fromJson(java.lang.String)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentDataRequest#fromJson(java.lang.String)",
        "methodDes": "Constructs PaymentDataRequest from a JSON object serialized as a string. To convert back to a JSON object serialized as string use toJson(). Note that you shouldn\u0027t rely on the values returned by getters in PaymentDataRequest as they will not be populated with the data set in the given JSON. For the expected format of this JSON, please see PaymentDataRequest object reference documentation.",
        "params": {
          "paymentDataRequestJson": "a JSON object"
        },
        "returns": "com.google.android.gms.wallet.PaymentDataRequest:the PaymentDataRequest",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentDataRequest.getAllowedPaymentMethods()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentDataRequest#getAllowedPaymentMethods()",
        "methodDes": "This method is deprecated. Use the JSON request format instead, see fromJson(String).",
        "params": {},
        "returns": "java.util.ArrayList\u003cjava.lang.Integer\u003e:allowed payment methods. See WalletConstants.PaymentMethod for more info",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentDataRequest.getCardRequirements()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentDataRequest#getCardRequirements()",
        "methodDes": "This method is deprecated. Use the JSON request format instead, see fromJson(String).",
        "params": {},
        "returns": "com.google.android.gms.wallet.CardRequirements:card requirements or null if no requirements were specified",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentDataRequest.getPaymentMethodTokenizationParameters()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentDataRequest#getPaymentMethodTokenizationParameters()",
        "methodDes": "This method is deprecated. Use the JSON request format instead, see fromJson(String).",
        "params": {},
        "returns": "com.google.android.gms.wallet.PaymentMethodTokenizationParameters:payment method tokenization parameters",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentDataRequest.getShippingAddressRequirements()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentDataRequest#getShippingAddressRequirements()",
        "methodDes": "This method is deprecated. Use the JSON request format instead, see fromJson(String).",
        "params": {},
        "returns": "com.google.android.gms.wallet.ShippingAddressRequirements:shipping address requirements or null if no requirements were specified",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentDataRequest.getTransactionInfo()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentDataRequest#getTransactionInfo()",
        "methodDes": "This method is deprecated. Use the JSON request format instead, see fromJson(String).",
        "params": {},
        "returns": "com.google.android.gms.wallet.TransactionInfo:detailed transaction info",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentDataRequest.isEmailRequired()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentDataRequest#isEmailRequired()",
        "methodDes": "This method is deprecated. Use the JSON request format instead, see fromJson(String).",
        "params": {},
        "returns": "boolean:whether the buyer\u0027s email is required to be returned",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentDataRequest.isPhoneNumberRequired()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentDataRequest#isPhoneNumberRequired()",
        "methodDes": "This method is deprecated. Use the JSON request format instead, see fromJson(String).",
        "params": {},
        "returns": "boolean:whether the buyer\u0027s phone number is required to be returned as part of the billing address and the shipping address",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentDataRequest.isShippingAddressRequired()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentDataRequest#isShippingAddressRequired()",
        "methodDes": "This method is deprecated. Use the JSON request format instead, see fromJson(String).",
        "params": {},
        "returns": "boolean:whether the buyer\u0027s shipping address is required to be returned",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentDataRequest.isUiRequired()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentDataRequest#isUiRequired()",
        "methodDes": "This method is deprecated. Use the JSON request format instead, see fromJson(String).",
        "params": {},
        "returns": "boolean:whether UI is required to be shown",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentDataRequest.newBuilder()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentDataRequest#newBuilder()",
        "methodDes": "This method is deprecated. Use the JSON request format instead, see fromJson(String).",
        "params": {},
        "returns": "com.google.android.gms.wallet.PaymentDataRequest.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentDataRequest.toJson()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentDataRequest#toJson()",
        "methodDes": "Returns PaymentDataRequest in JSON format. Note that this will be null if this object was not constructed using fromJson(String). For the expected format of this JSON, please see PaymentDataRequest object reference documentation.",
        "params": {},
        "returns": "java.lang.String:the String",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.PaymentDataRequest.writeToParcel(android.os.Parcel,int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentDataRequest#writeToParcel(android.os.Parcel, int)",
        "methodDes": "Flatten this object in to a Parcel.",
        "params": {
          "dest": "The Parcel in which the object should be written",
          "flags": "Additional flags about how the object should be written"
        },
        "returns": "void",
        "Exceptions": {}
      }
    },
    "fields": {
      "com.google.android.gms.wallet.PaymentDataRequest.CREATOR": {
        "des": "A public CREATOR field that generates instances of your Parcelable class from a Parcel.",
        "value": "",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/PaymentDataRequest#CREATOR"
      }
    }
  },
  "com.google.android.gms.wallet.wobs.LoyaltyPoints": {
    "classDes": "Parcelable representing the loyalty reward points label, balance, and type.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPoints",
    "methods": {
      "com.google.android.gms.wallet.wobs.LoyaltyPoints.getBalance()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPoints#getBalance()",
        "methodDes": "Gets the balance by this instance.",
        "params": {},
        "returns": "com.google.android.gms.wallet.wobs.LoyaltyPointsBalance:the balance",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LoyaltyPoints.getLabel()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPoints#getLabel()",
        "methodDes": "Gets the label by this instance.",
        "params": {},
        "returns": "java.lang.String:the label",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LoyaltyPoints.getType()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPoints#getType()",
        "methodDes": "This method is deprecated. This value is no longer used.",
        "params": {},
        "returns": "java.lang.String:the String",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LoyaltyPoints.getValidTimeInterval()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPoints#getValidTimeInterval()",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {},
        "returns": "com.google.android.gms.wallet.wobs.TimeInterval:the valid time interval",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LoyaltyPoints.newBuilder()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPoints#newBuilder()",
        "methodDes": "Builder to create a LoyaltyPoints.",
        "params": {},
        "returns": "com.google.android.gms.wallet.wobs.LoyaltyPoints.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.wobs.LoyaltyPoints.writeToParcel(android.os.Parcel,int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPoints#writeToParcel(android.os.Parcel, int)",
        "methodDes": "Flatten this object in to a Parcel.",
        "params": {
          "dest": "The Parcel in which the object should be written",
          "flags": "Additional flags about how the object should be written"
        },
        "returns": "void",
        "Exceptions": {}
      }
    },
    "fields": {
      "com.google.android.gms.wallet.wobs.LoyaltyPoints.CREATOR": {
        "des": "A public CREATOR field that generates instances of your Parcelable class from a Parcel.",
        "value": "",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPoints#CREATOR"
      }
    }
  },
  "com.google.android.gms.wallet.Wallet": {
    "classDes": "The main entry point for Wallet library integration. You need to build a GoogleApiClient using the API and the appropriate Wallet.WalletOptions. Once you have called connect() and your listener has received the GoogleApiClient.ConnectionCallbacks#onConnected(android.os.Bundle) callback, then you can call the various Wallet APIs. When your app is done using Wallet, call disconnect(), even if the async result from connect() has not yet been delivered. You should instantiate an instance of GoogleApiClient in your Activity\u0027s onCreate(Bundle) method and then call connect() in onStart() and disconnect() in onStop(), regardless of the state. For comments and requirements specific to different Wallet APIs, please see each API interface\u0027s header comments.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/Wallet",
    "methods": {
      "com.google.android.gms.wallet.Wallet.getPaymentsClient(android.app.Activity,com.google.android.gms.wallet.Wallet.WalletOptions)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/Wallet#public-static-paymentsclient-getpaymentsclient-activity-activity,-wallet.walletoptions-options",
        "methodDes": "Create a new instance of PaymentsClient for use in an Activity.",
        "params": {
          "activity": "is the caller\u0027s activity",
          "options": "are the Wallet.WalletOptions for configuring the API"
        },
        "returns": "com.google.android.gms.wallet.PaymentsClient:the PaymentsClient",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.Wallet.getPaymentsClient(android.content.Context,com.google.android.gms.wallet.Wallet.WalletOptions)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/Wallet#getPaymentsClient(android.content.Context, com.google.android.gms.wallet.Wallet.WalletOptions)",
        "methodDes": "Create a new instance of PaymentsClient for use in a non-Activity Context.",
        "params": {
          "context": "is the caller\u0027s (Application)Context",
          "options": "are the Wallet.WalletOptions for configuring the API"
        },
        "returns": "com.google.android.gms.wallet.PaymentsClient:the PaymentsClient",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.Wallet.getWalletObjectsClient(android.app.Activity,com.google.android.gms.wallet.Wallet.WalletOptions)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/Wallet#getWalletObjectsClient(android.app.Activity, com.google.android.gms.wallet.Wallet.WalletOptions)",
        "methodDes": "Create a new instance of WalletObjectsClient for use in an Activity. This client should not be used outside of the given activity.",
        "params": {
          "activity": "use in an Activity",
          "options": "the Wallet.WalletOptions for configuring the API"
        },
        "returns": "com.google.android.gms.wallet.WalletObjectsClient:the WalletObjectsClient",
        "Exceptions": {}
      }
    },
    "fields": {
      "com.google.android.gms.wallet.Wallet.API": {
        "des": "Add this to your GoogleApiClient via addApi(Api) to enable Wallet features.",
        "value": "",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/Wallet#API"
      }
    }
  },
  "com.google.android.gms.wallet.LoyaltyWalletObject": {
    "classDes": "Parcelable representing a loyalty wallet object. An example loyalty wallet object could be a rewards membership where the membership id is placed in the accountId.",
    "classUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject",
    "methods": {
      "com.google.android.gms.wallet.LoyaltyWalletObject.getAccountId()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject#getAccountId()",
        "methodDes": "Gets Loyalty account identifier to be displayed to the user.",
        "params": {},
        "returns": "java.lang.String:Loyalty account identifier to be displayed to the user (ex: \"12345678\")",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.getAccountName()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject#getAccountName()",
        "methodDes": "Gets Loyalty account holder name.",
        "params": {},
        "returns": "java.lang.String:Loyalty account holder name (ex: \"John Smith\")",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.getBarcodeAlternateText()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject#getBarcodeAlternateText()",
        "methodDes": "Gets the barcode alternate text by loyalty wallet.",
        "params": {},
        "returns": "java.lang.String:Human-readable text to display to the user in addition to the encoded barcode value (ex: \"3492013\")",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.getBarcodeLabel()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject#getBarcodeLabel()",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {},
        "returns": "java.lang.String:Barcode label",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.getBarcodeType()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject#getBarcodeType()",
        "methodDes": "Gets barcode type by loyalty wallet.",
        "params": {},
        "returns": "java.lang.String:Barcode type. Possible values include \"codabar\", \"qrCode\", \"textOnly\", etc",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.getBarcodeValue()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject#getBarcodeValue()",
        "methodDes": "Gets Encoded barcode value.",
        "params": {},
        "returns": "java.lang.String:Encoded barcode value",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.getClassId()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject#getClassId()",
        "methodDes": "Gets Wallet Object Class Id.",
        "params": {},
        "returns": "java.lang.String:Wallet Object Class Id",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.getId()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject#getId()",
        "methodDes": "Gets id by loyalty wallet.",
        "params": {},
        "returns": "java.lang.String:The unique identifier for this Wallet Object",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.getImageModuleDataMainImageUris()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject#getImageModuleDataMainImageUris()",
        "methodDes": "Gets a collection of image module data image uris.",
        "params": {},
        "returns": "java.util.ArrayList\u003ccom.google.android.gms.wallet.wobs.UriData\u003e:Image module main image uris",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.getInfoModuleDataHexBackgroundColor()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject#getInfoModuleDataHexBackgroundColor()",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {},
        "returns": "java.lang.String:Info module hex background color",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.getInfoModuleDataHexFontColor()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject#getInfoModuleDataHexFontColor()",
        "methodDes": "This method is deprecated. This value is unused by the platform and will be removed in the future.",
        "params": {},
        "returns": "java.lang.String:Info module hex font color",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.getInfoModuleDataLabelValueRows()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject#getInfoModuleDataLabelValueRows()",
        "methodDes": "Gets Info module label value rows.",
        "params": {},
        "returns": "java.util.ArrayList\u003ccom.google.android.gms.wallet.wobs.LabelValueRow\u003e:Info module label value rows",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.getInfoModuleDataShowLastUpdateTime()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject#getInfoModuleDataShowLastUpdateTime()",
        "methodDes": "Gets Info module show last update time flag.",
        "params": {},
        "returns": "boolean:Info module show last update time flag",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.getIssuerName()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject#getIssuerName()",
        "methodDes": "Gets the name of who issued this loyalty object.",
        "params": {},
        "returns": "java.lang.String:The name of who issued this loyalty object",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.getLinksModuleDataUris()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject#getLinksModuleDataUris()",
        "methodDes": "Gets Links module uris.",
        "params": {},
        "returns": "java.util.ArrayList\u003ccom.google.android.gms.wallet.wobs.UriData\u003e:Links module uris",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.getLocations()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject#getLocations()",
        "methodDes": "Gets Locations where the object is considered valid.",
        "params": {},
        "returns": "java.util.ArrayList\u003ccom.google.android.gms.maps.model.LatLng\u003e:Locations where the object is considered valid",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.getLoyaltyPoints()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject#getLoyaltyPoints()",
        "methodDes": "Gets the loyalty reward points.",
        "params": {},
        "returns": "com.google.android.gms.wallet.wobs.LoyaltyPoints:Loyalty points",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.getMessages()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject#getMessages()",
        "methodDes": "Gets a collection of messages to be associated with this object.",
        "params": {},
        "returns": "java.util.ArrayList\u003ccom.google.android.gms.wallet.wobs.WalletObjectMessage\u003e:Wallet Object messages",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.getProgramName()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject#getProgramName()",
        "methodDes": "Gets The name of the loyalty program associated to this object.",
        "params": {},
        "returns": "java.lang.String:The name of the loyalty program associated to this object",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.getState()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject#getState()",
        "methodDes": "Gets Wallet Object state.",
        "params": {},
        "returns": "int:Wallet Object state",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.getTextModulesData()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject#getTextModulesData()",
        "methodDes": "Gets Text modules.",
        "params": {},
        "returns": "java.util.ArrayList\u003ccom.google.android.gms.wallet.wobs.TextModuleData\u003e:Text modules",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.getValidTimeInterval()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject#getValidTimeInterval()",
        "methodDes": "Gets Time interval within which the object is considered valid.",
        "params": {},
        "returns": "com.google.android.gms.wallet.wobs.TimeInterval:Time interval within which the object is considered valid",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.newBuilder()": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject#newBuilder()",
        "methodDes": "Builder to create a LoyaltyWalletObject.",
        "params": {},
        "returns": "com.google.android.gms.wallet.LoyaltyWalletObject.Builder:the Builder",
        "Exceptions": {}
      },
      "com.google.android.gms.wallet.LoyaltyWalletObject.writeToParcel(android.os.Parcel,int)": {
        "methodUrl": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject#writeToParcel(android.os.Parcel, int)",
        "methodDes": "Flatten this object in to a Parcel.",
        "params": {
          "dest": "The Parcel in which the object should be written",
          "flags": "Additional flags about how the object should be written"
        },
        "returns": "void",
        "Exceptions": {}
      }
    },
    "fields": {
      "com.google.android.gms.wallet.LoyaltyWalletObject.CREATOR": {
        "des": "A public CREATOR field that generates instances of your Parcelable class from a Parcel.",
        "value": "",
        "url": "https://developers.google.com/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject#CREATOR"
      }
    }
  }
}