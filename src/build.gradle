buildscript {
    ext {
        intellijVersion = '0.4.10'
        dependencyManagementVersion = '1.0.6.RELEASE'
    }

    repositories {
        jcenter()
        google()

        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'https://www.jetbrains.com/intellij-repository/releases' }
        maven { url 'https://mvnrepository.com/artifact/'}
        maven { url 'https://developer.huawei.com/repo/' }
    }

    dependencies {
        classpath "gradle.plugin.org.jetbrains.intellij.plugins:gradle-intellij-plugin:${intellijVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:${dependencyManagementVersion}"
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

    repositories {
        mavenLocal()
        jcenter()
        google()

        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'https://www.jetbrains.com/intellij-repository/releases' }
        maven { url 'https://mvnrepository.com/artifact/' }
        maven { url 'https://developer.huawei.com/repo/' }
        maven { url 'http://repo.maven.apache.org/maven2' }
    }

    group 'com.huawei.hms'
    version '3.0.2.300'

    dependencyManagement {
        dependencies {
            dependency group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.17'
            dependency group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
            dependency group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
            dependency group: 'com.alibaba', name: 'fastjson', version: '1.2.70'
            dependency group: 'com.google.guava', name: 'guava', version: '28.2-jre'
            dependency group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
            dependency group: 'com.ibm.icu', name: 'icu4j', version: '64.2'

            dependency group: 'org.projectlombok', name: 'lombok', version: '1.18.6'
            dependency group: 'junit', name: 'junit', version: '4.12'

            dependency group: 'org.eclipse.platform', name: 'org.eclipse.core.commands', version: '3.9.600'
            dependency group: 'org.eclipse.platform', name: 'org.eclipse.core.contenttype', version: '3.7.500'
            dependency group: 'org.eclipse.platform', name: 'org.eclipse.core.expressions', version: '3.6.600'
            dependency group: 'org.eclipse.platform', name: 'org.eclipse.core.filesystem', version: '1.7.600'
            dependency group: 'org.eclipse.platform', name: 'org.eclipse.core.jobs', version: '3.10.600'
            dependency group: 'org.eclipse.platform', name: 'org.eclipse.core.resources', version: '3.13.600'

            dependency group: 'org.eclipse.platform', name: 'org.eclipse.core.runtime', version: '3.17.0'
            dependency group: 'org.eclipse.platform', name: 'org.eclipse.equinox.app', version: '1.4.300'
            dependency group: 'org.eclipse.platform', name: 'org.eclipse.equinox.common', version: '3.10.600'
            dependency group: 'org.eclipse.platform', name: 'org.eclipse.equinox.preferences', version: '3.7.600'
            dependency group: 'org.eclipse.platform', name: 'org.eclipse.equinox.registry', version: '3.8.600'
            dependency group: 'org.eclipse.platform', name: 'org.eclipse.osgi', version: '3.15.100'
            dependency group: 'org.eclipse.platform', name: 'org.eclipse.text', version: '3.10.0'
        }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        testCompile 'junit:junit'
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}

configure(subprojects.findAll { it.name.contains('intellij-plugin') || it.name.contains('convertor-idea') }) {
    apply plugin: 'org.jetbrains.intellij'

    intellij {
        plugins = ['android', 'java']
        pluginName "HMSConvertor"
        updateSinceUntilBuild false
        downloadSources Boolean.valueOf(sources)
        sameSinceUntilBuild Boolean.valueOf(isEAP)
        if (project.hasProperty('localIdePath')) {
            localPath project.getProperty("localIdePath")
            alternativeIdePath localPath
        } else {
            if (System.getenv().containsKey("localIdePath")) {
                localPath System.env.localIdePath
                alternativeIdePath localPath
            } else {
                version ideaVersion
            }
        }
        intellijRepo "http://artifactory.cde.huawei.com/artifactory/jetbrains-public/intellij-jdk"
        pluginsRepo intellijRepo

        buildSearchableOptions.enabled = false
    }
}

repositories {

    mavenLocal()
    maven { url 'https://developer.huawei.com/repo/' }
    jcenter()
    google()
    maven { url 'https://www.jetbrains.com/intellij-repository/releases' }
    maven { url 'http://artifactory.cde.huawei.com/artifactory/maven-public/' }
    maven { url 'http://artifactory.cde.huawei.com/artifactory/jetbrains-public/intellij-jdk' }
}
